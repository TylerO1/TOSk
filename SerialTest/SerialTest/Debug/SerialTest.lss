
SerialTest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000086  00800100  0000199e  00001a32  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000199e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000166  00800186  00800186  00001ab8  2**0
                  ALLOC
  3 .stab         00003558  00000000  00000000  00001ab8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001338  00000000  00000000  00005010  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000005e  00000000  00000000  00006348  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000258  00000000  00000000  000063a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000038b1  00000000  00000000  000065fe  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000135f  00000000  00000000  00009eaf  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000018bc  00000000  00000000  0000b20e  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000004d8  00000000  00000000  0000cacc  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000010cd  00000000  00000000  0000cfa4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001505  00000000  00000000  0000e071  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000001a8  00000000  00000000  0000f576  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	35 c0       	rjmp	.+106    	; 0x6c <__ctors_end>
       2:	00 00       	nop
       4:	5a c0       	rjmp	.+180    	; 0xba <__bad_interrupt>
       6:	00 00       	nop
       8:	58 c0       	rjmp	.+176    	; 0xba <__bad_interrupt>
       a:	00 00       	nop
       c:	56 c0       	rjmp	.+172    	; 0xba <__bad_interrupt>
       e:	00 00       	nop
      10:	54 c0       	rjmp	.+168    	; 0xba <__bad_interrupt>
      12:	00 00       	nop
      14:	52 c0       	rjmp	.+164    	; 0xba <__bad_interrupt>
      16:	00 00       	nop
      18:	50 c0       	rjmp	.+160    	; 0xba <__bad_interrupt>
      1a:	00 00       	nop
      1c:	4e c0       	rjmp	.+156    	; 0xba <__bad_interrupt>
      1e:	00 00       	nop
      20:	4c c0       	rjmp	.+152    	; 0xba <__bad_interrupt>
      22:	00 00       	nop
      24:	4a c0       	rjmp	.+148    	; 0xba <__bad_interrupt>
      26:	00 00       	nop
      28:	48 c0       	rjmp	.+144    	; 0xba <__bad_interrupt>
      2a:	00 00       	nop
      2c:	46 c0       	rjmp	.+140    	; 0xba <__bad_interrupt>
      2e:	00 00       	nop
      30:	44 c0       	rjmp	.+136    	; 0xba <__bad_interrupt>
      32:	00 00       	nop
      34:	42 c0       	rjmp	.+132    	; 0xba <__bad_interrupt>
      36:	00 00       	nop
      38:	40 c0       	rjmp	.+128    	; 0xba <__bad_interrupt>
      3a:	00 00       	nop
      3c:	3e c0       	rjmp	.+124    	; 0xba <__bad_interrupt>
      3e:	00 00       	nop
      40:	0c 94 54 09 	jmp	0x12a8	; 0x12a8 <__vector_16>
      44:	3a c0       	rjmp	.+116    	; 0xba <__bad_interrupt>
      46:	00 00       	nop
      48:	8d c6       	rjmp	.+3354   	; 0xd64 <__vector_18>
      4a:	00 00       	nop
      4c:	cc c6       	rjmp	.+3480   	; 0xde6 <__vector_19>
      4e:	00 00       	nop
      50:	34 c0       	rjmp	.+104    	; 0xba <__bad_interrupt>
      52:	00 00       	nop
      54:	32 c0       	rjmp	.+100    	; 0xba <__bad_interrupt>
      56:	00 00       	nop
      58:	30 c0       	rjmp	.+96     	; 0xba <__bad_interrupt>
      5a:	00 00       	nop
      5c:	2e c0       	rjmp	.+92     	; 0xba <__bad_interrupt>
      5e:	00 00       	nop
      60:	2c c0       	rjmp	.+88     	; 0xba <__bad_interrupt>
      62:	00 00       	nop
      64:	2a c0       	rjmp	.+84     	; 0xba <__bad_interrupt>
	...

00000068 <__ctors_start>:
      68:	a9 05       	cpc	r26, r9
      6a:	ad 07       	cpc	r26, r29

0000006c <__ctors_end>:
      6c:	11 24       	eor	r1, r1
      6e:	1f be       	out	0x3f, r1	; 63
      70:	cf ef       	ldi	r28, 0xFF	; 255
      72:	d8 e0       	ldi	r29, 0x08	; 8
      74:	de bf       	out	0x3e, r29	; 62
      76:	cd bf       	out	0x3d, r28	; 61

00000078 <__do_copy_data>:
      78:	11 e0       	ldi	r17, 0x01	; 1
      7a:	a0 e0       	ldi	r26, 0x00	; 0
      7c:	b1 e0       	ldi	r27, 0x01	; 1
      7e:	ee e9       	ldi	r30, 0x9E	; 158
      80:	f9 e1       	ldi	r31, 0x19	; 25
      82:	02 c0       	rjmp	.+4      	; 0x88 <__do_copy_data+0x10>
      84:	05 90       	lpm	r0, Z+
      86:	0d 92       	st	X+, r0
      88:	a6 38       	cpi	r26, 0x86	; 134
      8a:	b1 07       	cpc	r27, r17
      8c:	d9 f7       	brne	.-10     	; 0x84 <__do_copy_data+0xc>

0000008e <__do_clear_bss>:
      8e:	22 e0       	ldi	r18, 0x02	; 2
      90:	a6 e8       	ldi	r26, 0x86	; 134
      92:	b1 e0       	ldi	r27, 0x01	; 1
      94:	01 c0       	rjmp	.+2      	; 0x98 <.do_clear_bss_start>

00000096 <.do_clear_bss_loop>:
      96:	1d 92       	st	X+, r1

00000098 <.do_clear_bss_start>:
      98:	ac 3e       	cpi	r26, 0xEC	; 236
      9a:	b2 07       	cpc	r27, r18
      9c:	e1 f7       	brne	.-8      	; 0x96 <.do_clear_bss_loop>

0000009e <__do_global_ctors>:
      9e:	10 e0       	ldi	r17, 0x00	; 0
      a0:	cc e6       	ldi	r28, 0x6C	; 108
      a2:	d0 e0       	ldi	r29, 0x00	; 0
      a4:	04 c0       	rjmp	.+8      	; 0xae <__do_global_ctors+0x10>
      a6:	22 97       	sbiw	r28, 0x02	; 2
      a8:	fe 01       	movw	r30, r28
      aa:	0e 94 fd 09 	call	0x13fa	; 0x13fa <__tablejump__>
      ae:	c8 36       	cpi	r28, 0x68	; 104
      b0:	d1 07       	cpc	r29, r17
      b2:	c9 f7       	brne	.-14     	; 0xa6 <__do_global_ctors+0x8>
      b4:	a8 d7       	rcall	.+3920   	; 0x1006 <main>
      b6:	0c 94 cd 0c 	jmp	0x199a	; 0x199a <_exit>

000000ba <__bad_interrupt>:
      ba:	a2 cf       	rjmp	.-188    	; 0x0 <__vectors>

000000bc <_ZN17CArduinoProcessor13SetReadStatusE17arduinoPinNames_E>:
}

PinClaimedStatus_E CArduinoProcessor::StatusOfBoardsPin(arduinoPinNames_E *pinInQuestion)
{
	return Registers[*pinInQuestion].pinIsClaimed;
}
      bc:	70 e0       	ldi	r23, 0x00	; 0
      be:	fb 01       	movw	r30, r22
      c0:	ee 0f       	add	r30, r30
      c2:	ff 1f       	adc	r31, r31
      c4:	ee 0f       	add	r30, r30
      c6:	ff 1f       	adc	r31, r31
      c8:	ee 0f       	add	r30, r30
      ca:	ff 1f       	adc	r31, r31
      cc:	e9 57       	subi	r30, 0x79	; 121
      ce:	fe 4f       	sbci	r31, 0xFE	; 254
      d0:	87 81       	ldd	r24, Z+7	; 0x07
      d2:	81 11       	cpse	r24, r1
      d4:	1f c0       	rjmp	.+62     	; 0x114 <_ZN17CArduinoProcessor13SetReadStatusE17arduinoPinNames_E+0x58>
      d6:	fb 01       	movw	r30, r22
      d8:	ee 0f       	add	r30, r30
      da:	ff 1f       	adc	r31, r31
      dc:	ee 0f       	add	r30, r30
      de:	ff 1f       	adc	r31, r31
      e0:	ee 0f       	add	r30, r30
      e2:	ff 1f       	adc	r31, r31
      e4:	e9 57       	subi	r30, 0x79	; 121
      e6:	fe 4f       	sbci	r31, 0xFE	; 254
      e8:	86 81       	ldd	r24, Z+6	; 0x06
      ea:	a4 81       	ldd	r26, Z+4	; 0x04
      ec:	b5 81       	ldd	r27, Z+5	; 0x05
      ee:	2c 91       	ld	r18, X
      f0:	41 e0       	ldi	r20, 0x01	; 1
      f2:	50 e0       	ldi	r21, 0x00	; 0
      f4:	ba 01       	movw	r22, r20
      f6:	02 c0       	rjmp	.+4      	; 0xfc <_ZN17CArduinoProcessor13SetReadStatusE17arduinoPinNames_E+0x40>
      f8:	66 0f       	add	r22, r22
      fa:	77 1f       	adc	r23, r23
      fc:	8a 95       	dec	r24
      fe:	e2 f7       	brpl	.-8      	; 0xf8 <_ZN17CArduinoProcessor13SetReadStatusE17arduinoPinNames_E+0x3c>
     100:	cb 01       	movw	r24, r22
     102:	80 95       	com	r24
     104:	90 95       	com	r25
     106:	30 e0       	ldi	r19, 0x00	; 0
     108:	82 23       	and	r24, r18
     10a:	93 23       	and	r25, r19
     10c:	8c 93       	st	X, r24
     10e:	81 e0       	ldi	r24, 0x01	; 1
     110:	87 83       	std	Z+7, r24	; 0x07
     112:	08 95       	ret
     114:	80 e0       	ldi	r24, 0x00	; 0
     116:	08 95       	ret

00000118 <_ZN17CArduinoProcessor15SetPullUpStatusE17arduinoPinNames_E>:
     118:	70 e0       	ldi	r23, 0x00	; 0
     11a:	fb 01       	movw	r30, r22
     11c:	ee 0f       	add	r30, r30
     11e:	ff 1f       	adc	r31, r31
     120:	ee 0f       	add	r30, r30
     122:	ff 1f       	adc	r31, r31
     124:	ee 0f       	add	r30, r30
     126:	ff 1f       	adc	r31, r31
     128:	e9 57       	subi	r30, 0x79	; 121
     12a:	fe 4f       	sbci	r31, 0xFE	; 254
     12c:	87 81       	ldd	r24, Z+7	; 0x07
     12e:	81 30       	cpi	r24, 0x01	; 1
     130:	d1 f4       	brne	.+52     	; 0x166 <_ZN17CArduinoProcessor15SetPullUpStatusE17arduinoPinNames_E+0x4e>
     132:	fb 01       	movw	r30, r22
     134:	ee 0f       	add	r30, r30
     136:	ff 1f       	adc	r31, r31
     138:	ee 0f       	add	r30, r30
     13a:	ff 1f       	adc	r31, r31
     13c:	ee 0f       	add	r30, r30
     13e:	ff 1f       	adc	r31, r31
     140:	e9 57       	subi	r30, 0x79	; 121
     142:	fe 4f       	sbci	r31, 0xFE	; 254
     144:	36 81       	ldd	r19, Z+6	; 0x06
     146:	a0 81       	ld	r26, Z
     148:	b1 81       	ldd	r27, Z+1	; 0x01
     14a:	2c 91       	ld	r18, X
     14c:	81 e0       	ldi	r24, 0x01	; 1
     14e:	90 e0       	ldi	r25, 0x00	; 0
     150:	02 c0       	rjmp	.+4      	; 0x156 <_ZN17CArduinoProcessor15SetPullUpStatusE17arduinoPinNames_E+0x3e>
     152:	88 0f       	add	r24, r24
     154:	99 1f       	adc	r25, r25
     156:	3a 95       	dec	r19
     158:	e2 f7       	brpl	.-8      	; 0x152 <_ZN17CArduinoProcessor15SetPullUpStatusE17arduinoPinNames_E+0x3a>
     15a:	82 2b       	or	r24, r18
     15c:	8c 93       	st	X, r24
     15e:	82 e0       	ldi	r24, 0x02	; 2
     160:	87 83       	std	Z+7, r24	; 0x07
     162:	81 e0       	ldi	r24, 0x01	; 1
     164:	08 95       	ret
     166:	80 e0       	ldi	r24, 0x00	; 0
     168:	08 95       	ret

0000016a <_ZN17CArduinoProcessor14SetWriteStatusE17arduinoPinNames_E>:
     16a:	70 e0       	ldi	r23, 0x00	; 0
     16c:	fb 01       	movw	r30, r22
     16e:	ee 0f       	add	r30, r30
     170:	ff 1f       	adc	r31, r31
     172:	ee 0f       	add	r30, r30
     174:	ff 1f       	adc	r31, r31
     176:	ee 0f       	add	r30, r30
     178:	ff 1f       	adc	r31, r31
     17a:	e9 57       	subi	r30, 0x79	; 121
     17c:	fe 4f       	sbci	r31, 0xFE	; 254
     17e:	87 81       	ldd	r24, Z+7	; 0x07
     180:	81 11       	cpse	r24, r1
     182:	1a c0       	rjmp	.+52     	; 0x1b8 <_ZN17CArduinoProcessor14SetWriteStatusE17arduinoPinNames_E+0x4e>
     184:	fb 01       	movw	r30, r22
     186:	ee 0f       	add	r30, r30
     188:	ff 1f       	adc	r31, r31
     18a:	ee 0f       	add	r30, r30
     18c:	ff 1f       	adc	r31, r31
     18e:	ee 0f       	add	r30, r30
     190:	ff 1f       	adc	r31, r31
     192:	e9 57       	subi	r30, 0x79	; 121
     194:	fe 4f       	sbci	r31, 0xFE	; 254
     196:	36 81       	ldd	r19, Z+6	; 0x06
     198:	a4 81       	ldd	r26, Z+4	; 0x04
     19a:	b5 81       	ldd	r27, Z+5	; 0x05
     19c:	2c 91       	ld	r18, X
     19e:	81 e0       	ldi	r24, 0x01	; 1
     1a0:	90 e0       	ldi	r25, 0x00	; 0
     1a2:	02 c0       	rjmp	.+4      	; 0x1a8 <_ZN17CArduinoProcessor14SetWriteStatusE17arduinoPinNames_E+0x3e>
     1a4:	88 0f       	add	r24, r24
     1a6:	99 1f       	adc	r25, r25
     1a8:	3a 95       	dec	r19
     1aa:	e2 f7       	brpl	.-8      	; 0x1a4 <_ZN17CArduinoProcessor14SetWriteStatusE17arduinoPinNames_E+0x3a>
     1ac:	82 2b       	or	r24, r18
     1ae:	8c 93       	st	X, r24
     1b0:	83 e0       	ldi	r24, 0x03	; 3
     1b2:	87 83       	std	Z+7, r24	; 0x07
     1b4:	81 e0       	ldi	r24, 0x01	; 1
     1b6:	08 95       	ret
     1b8:	80 e0       	ldi	r24, 0x00	; 0
     1ba:	08 95       	ret

000001bc <_ZN17CArduinoProcessor14ReadDigitalPinEP17arduinoPinNames_E>:
     1bc:	db 01       	movw	r26, r22
     1be:	ec 91       	ld	r30, X
     1c0:	f0 e0       	ldi	r31, 0x00	; 0
     1c2:	ee 0f       	add	r30, r30
     1c4:	ff 1f       	adc	r31, r31
     1c6:	ee 0f       	add	r30, r30
     1c8:	ff 1f       	adc	r31, r31
     1ca:	ee 0f       	add	r30, r30
     1cc:	ff 1f       	adc	r31, r31
     1ce:	e9 57       	subi	r30, 0x79	; 121
     1d0:	fe 4f       	sbci	r31, 0xFE	; 254
     1d2:	a2 81       	ldd	r26, Z+2	; 0x02
     1d4:	b3 81       	ldd	r27, Z+3	; 0x03
     1d6:	8c 91       	ld	r24, X
     1d8:	26 81       	ldd	r18, Z+6	; 0x06
     1da:	66 81       	ldd	r22, Z+6	; 0x06
     1dc:	41 e0       	ldi	r20, 0x01	; 1
     1de:	50 e0       	ldi	r21, 0x00	; 0
     1e0:	fa 01       	movw	r30, r20
     1e2:	02 c0       	rjmp	.+4      	; 0x1e8 <_ZN17CArduinoProcessor14ReadDigitalPinEP17arduinoPinNames_E+0x2c>
     1e4:	ee 0f       	add	r30, r30
     1e6:	ff 1f       	adc	r31, r31
     1e8:	2a 95       	dec	r18
     1ea:	e2 f7       	brpl	.-8      	; 0x1e4 <_ZN17CArduinoProcessor14ReadDigitalPinEP17arduinoPinNames_E+0x28>
     1ec:	9f 01       	movw	r18, r30
     1ee:	90 e0       	ldi	r25, 0x00	; 0
     1f0:	28 23       	and	r18, r24
     1f2:	39 23       	and	r19, r25
     1f4:	02 c0       	rjmp	.+4      	; 0x1fa <_ZN17CArduinoProcessor14ReadDigitalPinEP17arduinoPinNames_E+0x3e>
     1f6:	35 95       	asr	r19
     1f8:	27 95       	ror	r18
     1fa:	6a 95       	dec	r22
     1fc:	e2 f7       	brpl	.-8      	; 0x1f6 <_ZN17CArduinoProcessor14ReadDigitalPinEP17arduinoPinNames_E+0x3a>
     1fe:	82 2f       	mov	r24, r18
     200:	93 2f       	mov	r25, r19
     202:	08 95       	ret

00000204 <_ZN17CArduinoProcessor23ReadMultipleDigitalPinsEP13portPinUser_sPh>:
     204:	fb 01       	movw	r30, r22
     206:	80 81       	ld	r24, Z
     208:	82 30       	cpi	r24, 0x02	; 2
     20a:	51 f0       	breq	.+20     	; 0x220 <_ZN17CArduinoProcessor23ReadMultipleDigitalPinsEP13portPinUser_sPh+0x1c>
     20c:	83 30       	cpi	r24, 0x03	; 3
     20e:	79 f0       	breq	.+30     	; 0x22e <_ZN17CArduinoProcessor23ReadMultipleDigitalPinsEP13portPinUser_sPh+0x2a>
     210:	81 30       	cpi	r24, 0x01	; 1
     212:	99 f4       	brne	.+38     	; 0x23a <_ZN17CArduinoProcessor23ReadMultipleDigitalPinsEP13portPinUser_sPh+0x36>
     214:	83 b1       	in	r24, 0x03	; 3
     216:	91 81       	ldd	r25, Z+1	; 0x01
     218:	89 23       	and	r24, r25
     21a:	fa 01       	movw	r30, r20
     21c:	80 83       	st	Z, r24
     21e:	08 95       	ret
     220:	86 b1       	in	r24, 0x06	; 6
     222:	fb 01       	movw	r30, r22
     224:	91 81       	ldd	r25, Z+1	; 0x01
     226:	89 23       	and	r24, r25
     228:	fa 01       	movw	r30, r20
     22a:	80 83       	st	Z, r24
     22c:	08 95       	ret
     22e:	89 b1       	in	r24, 0x09	; 9
     230:	fb 01       	movw	r30, r22
     232:	91 81       	ldd	r25, Z+1	; 0x01
     234:	89 23       	and	r24, r25
     236:	fa 01       	movw	r30, r20
     238:	80 83       	st	Z, r24
     23a:	08 95       	ret

0000023c <_ZN17CArduinoProcessor15WriteDigitalPinEP17arduinoPinNames_EP11PinStatus_E>:
     23c:	da 01       	movw	r26, r20
     23e:	8c 91       	ld	r24, X
     240:	82 30       	cpi	r24, 0x02	; 2
     242:	e8 f5       	brcc	.+122    	; 0x2be <_ZN17CArduinoProcessor15WriteDigitalPinEP17arduinoPinNames_EP11PinStatus_E+0x82>
     244:	81 30       	cpi	r24, 0x01	; 1
     246:	d1 f4       	brne	.+52     	; 0x27c <_ZN17CArduinoProcessor15WriteDigitalPinEP17arduinoPinNames_EP11PinStatus_E+0x40>
     248:	db 01       	movw	r26, r22
     24a:	ec 91       	ld	r30, X
     24c:	f0 e0       	ldi	r31, 0x00	; 0
     24e:	ee 0f       	add	r30, r30
     250:	ff 1f       	adc	r31, r31
     252:	ee 0f       	add	r30, r30
     254:	ff 1f       	adc	r31, r31
     256:	ee 0f       	add	r30, r30
     258:	ff 1f       	adc	r31, r31
     25a:	e9 57       	subi	r30, 0x79	; 121
     25c:	fe 4f       	sbci	r31, 0xFE	; 254
     25e:	36 81       	ldd	r19, Z+6	; 0x06
     260:	01 90       	ld	r0, Z+
     262:	f0 81       	ld	r31, Z
     264:	e0 2d       	mov	r30, r0
     266:	20 81       	ld	r18, Z
     268:	81 e0       	ldi	r24, 0x01	; 1
     26a:	90 e0       	ldi	r25, 0x00	; 0
     26c:	02 c0       	rjmp	.+4      	; 0x272 <_ZN17CArduinoProcessor15WriteDigitalPinEP17arduinoPinNames_EP11PinStatus_E+0x36>
     26e:	88 0f       	add	r24, r24
     270:	99 1f       	adc	r25, r25
     272:	3a 95       	dec	r19
     274:	e2 f7       	brpl	.-8      	; 0x26e <_ZN17CArduinoProcessor15WriteDigitalPinEP17arduinoPinNames_EP11PinStatus_E+0x32>
     276:	82 2b       	or	r24, r18
     278:	80 83       	st	Z, r24
     27a:	08 95       	ret
     27c:	81 11       	cpse	r24, r1
     27e:	1f c0       	rjmp	.+62     	; 0x2be <_ZN17CArduinoProcessor15WriteDigitalPinEP17arduinoPinNames_EP11PinStatus_E+0x82>
     280:	db 01       	movw	r26, r22
     282:	ec 91       	ld	r30, X
     284:	f0 e0       	ldi	r31, 0x00	; 0
     286:	ee 0f       	add	r30, r30
     288:	ff 1f       	adc	r31, r31
     28a:	ee 0f       	add	r30, r30
     28c:	ff 1f       	adc	r31, r31
     28e:	ee 0f       	add	r30, r30
     290:	ff 1f       	adc	r31, r31
     292:	e9 57       	subi	r30, 0x79	; 121
     294:	fe 4f       	sbci	r31, 0xFE	; 254
     296:	86 81       	ldd	r24, Z+6	; 0x06
     298:	01 90       	ld	r0, Z+
     29a:	f0 81       	ld	r31, Z
     29c:	e0 2d       	mov	r30, r0
     29e:	20 81       	ld	r18, Z
     2a0:	41 e0       	ldi	r20, 0x01	; 1
     2a2:	50 e0       	ldi	r21, 0x00	; 0
     2a4:	ba 01       	movw	r22, r20
     2a6:	02 c0       	rjmp	.+4      	; 0x2ac <_ZN17CArduinoProcessor15WriteDigitalPinEP17arduinoPinNames_EP11PinStatus_E+0x70>
     2a8:	66 0f       	add	r22, r22
     2aa:	77 1f       	adc	r23, r23
     2ac:	8a 95       	dec	r24
     2ae:	e2 f7       	brpl	.-8      	; 0x2a8 <_ZN17CArduinoProcessor15WriteDigitalPinEP17arduinoPinNames_EP11PinStatus_E+0x6c>
     2b0:	cb 01       	movw	r24, r22
     2b2:	80 95       	com	r24
     2b4:	90 95       	com	r25
     2b6:	30 e0       	ldi	r19, 0x00	; 0
     2b8:	82 23       	and	r24, r18
     2ba:	93 23       	and	r25, r19
     2bc:	80 83       	st	Z, r24
     2be:	08 95       	ret

000002c0 <_ZN17CArduinoProcessor8FindPortE17arduinoPinNames_E>:

arduinoPortNames_E CArduinoProcessor::FindPort( arduinoPinNames_E Pin )
{
	arduinoPortNames_E Port;
	
	switch (Pin)
     2c0:	6e 30       	cpi	r22, 0x0E	; 14
     2c2:	18 f4       	brcc	.+6      	; 0x2ca <_ZN17CArduinoProcessor8FindPortE17arduinoPinNames_E+0xa>
     2c4:	68 30       	cpi	r22, 0x08	; 8
     2c6:	50 f4       	brcc	.+20     	; 0x2dc <_ZN17CArduinoProcessor8FindPortE17arduinoPinNames_E+0x1c>
     2c8:	03 c0       	rjmp	.+6      	; 0x2d0 <_ZN17CArduinoProcessor8FindPortE17arduinoPinNames_E+0x10>
     2ca:	64 31       	cpi	r22, 0x14	; 20
     2cc:	28 f4       	brcc	.+10     	; 0x2d8 <_ZN17CArduinoProcessor8FindPortE17arduinoPinNames_E+0x18>
     2ce:	02 c0       	rjmp	.+4      	; 0x2d4 <_ZN17CArduinoProcessor8FindPortE17arduinoPinNames_E+0x14>
		case Pd3:
		case Pd4:
		case Pd5:
		case Pd6:
		case Pd7:
		Port = e_PORTD;
     2d0:	83 e0       	ldi	r24, 0x03	; 3
     2d2:	08 95       	ret
		case Pc1:
		case Pc2:
		case Pc3:
		case Pc4:
		case Pc5:
		Port = e_PORTC;
     2d4:	82 e0       	ldi	r24, 0x02	; 2
		break;
     2d6:	08 95       	ret
		default:
		Port = e_INVALIDPORTASSIGNMMENT;
     2d8:	84 e0       	ldi	r24, 0x04	; 4
		break;
     2da:	08 95       	ret
		case Pb1:
		case Pb2:
		case Pb3:
		case Pb4:
		case Pb5:
		Port = e_PORTB;
     2dc:	81 e0       	ldi	r24, 0x01	; 1
		Port = e_INVALIDPORTASSIGNMMENT;
		break;
	}
	
	return Port;
}
     2de:	08 95       	ret

000002e0 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh>:

void CArduinoProcessor::PackPinsToBitfield(arduinoPinNames_E pins[8], int *NumberOfPinsToPack, uint8_t *Bitfield)
{
     2e0:	af 92       	push	r10
     2e2:	bf 92       	push	r11
     2e4:	df 92       	push	r13
     2e6:	ef 92       	push	r14
     2e8:	ff 92       	push	r15
     2ea:	0f 93       	push	r16
     2ec:	1f 93       	push	r17
     2ee:	cf 93       	push	r28
     2f0:	df 93       	push	r29
     2f2:	da 01       	movw	r26, r20
     2f4:	59 01       	movw	r10, r18
	arduinoPortNames_E PortUsed = e_INVALIDPORTASSIGNMMENT;
	
	for (int i = 0; i < *NumberOfPinsToPack; i++)
     2f6:	8d 91       	ld	r24, X+
     2f8:	9c 91       	ld	r25, X
     2fa:	11 97       	sbiw	r26, 0x01	; 1
     2fc:	18 16       	cp	r1, r24
     2fe:	19 06       	cpc	r1, r25
     300:	0c f0       	brlt	.+2      	; 0x304 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x24>
     302:	c4 c0       	rjmp	.+392    	; 0x48c <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x1ac>
     304:	e6 2f       	mov	r30, r22
     306:	f7 2f       	mov	r31, r23
     308:	80 e0       	ldi	r24, 0x00	; 0
     30a:	90 e0       	ldi	r25, 0x00	; 0
	return Port;
}

void CArduinoProcessor::PackPinsToBitfield(arduinoPinNames_E pins[8], int *NumberOfPinsToPack, uint8_t *Bitfield)
{
	arduinoPortNames_E PortUsed = e_INVALIDPORTASSIGNMMENT;
     30c:	04 e0       	ldi	r16, 0x04	; 4
					PortUsed = e_INVALIDPORTASSIGNMMENT;
				}
			}
			else
			{
				*Bitfield = ( 1 << Registers[pins[i]].AVRlibPinWord );
     30e:	21 e0       	ldi	r18, 0x01	; 1
     310:	30 e0       	ldi	r19, 0x00	; 0
				PortUsed = e_PORTC;
     312:	68 94       	set
     314:	ee 24       	eor	r14, r14
     316:	e1 f8       	bld	r14, 1
					PortUsed = e_PORTC;
				}
				else
				{
					*Bitfield = 0;
					PortUsed = e_INVALIDPORTASSIGNMMENT;
     318:	14 e0       	ldi	r17, 0x04	; 4
				}
			}
			else
			{
				*Bitfield = ( 1 << Registers[pins[i]].AVRlibPinWord );
				PortUsed = e_PORTB;
     31a:	ff 24       	eor	r15, r15
     31c:	f3 94       	inc	r15
				}
			}
			else
			{
				*Bitfield = ( 1 << Registers[pins[i]].AVRlibPinWord );
				PortUsed = e_PORTD;
     31e:	0f 2e       	mov	r0, r31
     320:	f3 e0       	ldi	r31, 0x03	; 3
     322:	df 2e       	mov	r13, r31
     324:	f0 2d       	mov	r31, r0
{
	arduinoPortNames_E PortUsed = e_INVALIDPORTASSIGNMMENT;
	
	for (int i = 0; i < *NumberOfPinsToPack; i++)
	{
		switch (pins[i])
     326:	41 91       	ld	r20, Z+
     328:	4e 30       	cpi	r20, 0x0E	; 14
     32a:	18 f4       	brcc	.+6      	; 0x332 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x52>
     32c:	48 30       	cpi	r20, 0x08	; 8
     32e:	d8 f5       	brcc	.+118    	; 0x3a6 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0xc6>
     330:	04 c0       	rjmp	.+8      	; 0x33a <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x5a>
     332:	44 31       	cpi	r20, 0x14	; 20
     334:	08 f0       	brcs	.+2      	; 0x338 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x58>
     336:	a2 c0       	rjmp	.+324    	; 0x47c <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x19c>
     338:	6c c0       	rjmp	.+216    	; 0x412 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x132>
			case Pd4:
			case Pd5:
			case Pd6:
			case Pd7:
			// If this isn't the first pass
			if ( i != 0 )
     33a:	00 97       	sbiw	r24, 0x00	; 0
     33c:	f9 f0       	breq	.+62     	; 0x37c <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x9c>
			{
				// If the last port used is the same as this one's keep on working, otherwise exit
				if (PortUsed == e_PORTD) 
     33e:	03 30       	cpi	r16, 0x03	; 3
     340:	c9 f4       	brne	.+50     	; 0x374 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x94>
				{
					*Bitfield += ( 1 << Registers[pins[i]].AVRlibPinWord);
     342:	50 e0       	ldi	r21, 0x00	; 0
     344:	44 0f       	add	r20, r20
     346:	55 1f       	adc	r21, r21
     348:	44 0f       	add	r20, r20
     34a:	55 1f       	adc	r21, r21
     34c:	44 0f       	add	r20, r20
     34e:	55 1f       	adc	r21, r21
     350:	49 57       	subi	r20, 0x79	; 121
     352:	5e 4f       	sbci	r21, 0xFE	; 254
     354:	ea 01       	movw	r28, r20
     356:	4e 81       	ldd	r20, Y+6	; 0x06
     358:	e5 01       	movw	r28, r10
     35a:	68 81       	ld	r22, Y
     35c:	e9 01       	movw	r28, r18
     35e:	02 c0       	rjmp	.+4      	; 0x364 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x84>
     360:	cc 0f       	add	r28, r28
     362:	dd 1f       	adc	r29, r29
     364:	4a 95       	dec	r20
     366:	e2 f7       	brpl	.-8      	; 0x360 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x80>
     368:	ae 01       	movw	r20, r28
     36a:	46 0f       	add	r20, r22
     36c:	51 1d       	adc	r21, r1
     36e:	e5 01       	movw	r28, r10
     370:	48 83       	st	Y, r20
     372:	84 c0       	rjmp	.+264    	; 0x47c <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x19c>
					PortUsed = e_PORTD;
				}
				else
				{
					*Bitfield = 0;
     374:	e5 01       	movw	r28, r10
     376:	18 82       	st	Y, r1
					PortUsed = e_INVALIDPORTASSIGNMMENT;
     378:	01 2f       	mov	r16, r17
     37a:	80 c0       	rjmp	.+256    	; 0x47c <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x19c>
				}
			}
			else
			{
				*Bitfield = ( 1 << Registers[pins[i]].AVRlibPinWord );
     37c:	50 e0       	ldi	r21, 0x00	; 0
     37e:	44 0f       	add	r20, r20
     380:	55 1f       	adc	r21, r21
     382:	44 0f       	add	r20, r20
     384:	55 1f       	adc	r21, r21
     386:	44 0f       	add	r20, r20
     388:	55 1f       	adc	r21, r21
     38a:	49 57       	subi	r20, 0x79	; 121
     38c:	5e 4f       	sbci	r21, 0xFE	; 254
     38e:	ea 01       	movw	r28, r20
     390:	4e 81       	ldd	r20, Y+6	; 0x06
     392:	d2 2f       	mov	r29, r18
     394:	01 c0       	rjmp	.+2      	; 0x398 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0xb8>
     396:	dd 0f       	add	r29, r29
     398:	4a 95       	dec	r20
     39a:	ea f7       	brpl	.-6      	; 0x396 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0xb6>
     39c:	4d 2f       	mov	r20, r29
     39e:	e5 01       	movw	r28, r10
     3a0:	48 83       	st	Y, r20
				PortUsed = e_PORTD;
     3a2:	0d 2d       	mov	r16, r13
     3a4:	6b c0       	rjmp	.+214    	; 0x47c <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x19c>
			case Pb2:
			case Pb3:
			case Pb4:
			case Pb5:
			// If this isn't the first pass
			if ( i != 0 )
     3a6:	00 97       	sbiw	r24, 0x00	; 0
     3a8:	f9 f0       	breq	.+62     	; 0x3e8 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x108>
			{
				// If the last port used is the same as this one's keep on working, otherwise exit
				if (PortUsed == e_PORTB)
     3aa:	01 30       	cpi	r16, 0x01	; 1
     3ac:	c9 f4       	brne	.+50     	; 0x3e0 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x100>
				{
					*Bitfield += ( 1 << Registers[pins[i]].AVRlibPinWord );
     3ae:	50 e0       	ldi	r21, 0x00	; 0
     3b0:	44 0f       	add	r20, r20
     3b2:	55 1f       	adc	r21, r21
     3b4:	44 0f       	add	r20, r20
     3b6:	55 1f       	adc	r21, r21
     3b8:	44 0f       	add	r20, r20
     3ba:	55 1f       	adc	r21, r21
     3bc:	49 57       	subi	r20, 0x79	; 121
     3be:	5e 4f       	sbci	r21, 0xFE	; 254
     3c0:	ea 01       	movw	r28, r20
     3c2:	4e 81       	ldd	r20, Y+6	; 0x06
     3c4:	e5 01       	movw	r28, r10
     3c6:	68 81       	ld	r22, Y
     3c8:	e9 01       	movw	r28, r18
     3ca:	02 c0       	rjmp	.+4      	; 0x3d0 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0xf0>
     3cc:	cc 0f       	add	r28, r28
     3ce:	dd 1f       	adc	r29, r29
     3d0:	4a 95       	dec	r20
     3d2:	e2 f7       	brpl	.-8      	; 0x3cc <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0xec>
     3d4:	ae 01       	movw	r20, r28
     3d6:	46 0f       	add	r20, r22
     3d8:	51 1d       	adc	r21, r1
     3da:	e5 01       	movw	r28, r10
     3dc:	48 83       	st	Y, r20
     3de:	4e c0       	rjmp	.+156    	; 0x47c <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x19c>
					PortUsed = e_PORTB;
				}
				else
				{
					*Bitfield = 0;
     3e0:	e5 01       	movw	r28, r10
     3e2:	18 82       	st	Y, r1
					PortUsed = e_INVALIDPORTASSIGNMMENT;
     3e4:	01 2f       	mov	r16, r17
     3e6:	4a c0       	rjmp	.+148    	; 0x47c <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x19c>
				}
			}
			else
			{
				*Bitfield = ( 1 << Registers[pins[i]].AVRlibPinWord );
     3e8:	50 e0       	ldi	r21, 0x00	; 0
     3ea:	44 0f       	add	r20, r20
     3ec:	55 1f       	adc	r21, r21
     3ee:	44 0f       	add	r20, r20
     3f0:	55 1f       	adc	r21, r21
     3f2:	44 0f       	add	r20, r20
     3f4:	55 1f       	adc	r21, r21
     3f6:	49 57       	subi	r20, 0x79	; 121
     3f8:	5e 4f       	sbci	r21, 0xFE	; 254
     3fa:	ea 01       	movw	r28, r20
     3fc:	4e 81       	ldd	r20, Y+6	; 0x06
     3fe:	d2 2f       	mov	r29, r18
     400:	01 c0       	rjmp	.+2      	; 0x404 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x124>
     402:	dd 0f       	add	r29, r29
     404:	4a 95       	dec	r20
     406:	ea f7       	brpl	.-6      	; 0x402 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x122>
     408:	4d 2f       	mov	r20, r29
     40a:	e5 01       	movw	r28, r10
     40c:	48 83       	st	Y, r20
				PortUsed = e_PORTB;
     40e:	0f 2d       	mov	r16, r15
     410:	35 c0       	rjmp	.+106    	; 0x47c <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x19c>
			case Pc2:
			case Pc3:
			case Pc4:
			case Pc5:
			// If this isn't the first pass
			if ( i != 0 )
     412:	00 97       	sbiw	r24, 0x00	; 0
     414:	f9 f0       	breq	.+62     	; 0x454 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x174>
			{
				// If the last port used is the same as this one's keep on working, otherwise exit
				if (PortUsed == e_PORTC)
     416:	02 30       	cpi	r16, 0x02	; 2
     418:	c9 f4       	brne	.+50     	; 0x44c <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x16c>
				{
					*Bitfield += ( 1 << Registers[pins[i]].AVRlibPinWord );
     41a:	50 e0       	ldi	r21, 0x00	; 0
     41c:	44 0f       	add	r20, r20
     41e:	55 1f       	adc	r21, r21
     420:	44 0f       	add	r20, r20
     422:	55 1f       	adc	r21, r21
     424:	44 0f       	add	r20, r20
     426:	55 1f       	adc	r21, r21
     428:	49 57       	subi	r20, 0x79	; 121
     42a:	5e 4f       	sbci	r21, 0xFE	; 254
     42c:	ea 01       	movw	r28, r20
     42e:	4e 81       	ldd	r20, Y+6	; 0x06
     430:	e5 01       	movw	r28, r10
     432:	68 81       	ld	r22, Y
     434:	e9 01       	movw	r28, r18
     436:	02 c0       	rjmp	.+4      	; 0x43c <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x15c>
     438:	cc 0f       	add	r28, r28
     43a:	dd 1f       	adc	r29, r29
     43c:	4a 95       	dec	r20
     43e:	e2 f7       	brpl	.-8      	; 0x438 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x158>
     440:	ae 01       	movw	r20, r28
     442:	46 0f       	add	r20, r22
     444:	51 1d       	adc	r21, r1
     446:	e5 01       	movw	r28, r10
     448:	48 83       	st	Y, r20
     44a:	18 c0       	rjmp	.+48     	; 0x47c <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x19c>
					PortUsed = e_PORTC;
				}
				else
				{
					*Bitfield = 0;
     44c:	e5 01       	movw	r28, r10
     44e:	18 82       	st	Y, r1
					PortUsed = e_INVALIDPORTASSIGNMMENT;
     450:	01 2f       	mov	r16, r17
     452:	14 c0       	rjmp	.+40     	; 0x47c <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x19c>
				}
			}
			else
			{
				*Bitfield = ( 1 << Registers[pins[i]].AVRlibPinWord );
     454:	50 e0       	ldi	r21, 0x00	; 0
     456:	44 0f       	add	r20, r20
     458:	55 1f       	adc	r21, r21
     45a:	44 0f       	add	r20, r20
     45c:	55 1f       	adc	r21, r21
     45e:	44 0f       	add	r20, r20
     460:	55 1f       	adc	r21, r21
     462:	49 57       	subi	r20, 0x79	; 121
     464:	5e 4f       	sbci	r21, 0xFE	; 254
     466:	ea 01       	movw	r28, r20
     468:	4e 81       	ldd	r20, Y+6	; 0x06
     46a:	d2 2f       	mov	r29, r18
     46c:	01 c0       	rjmp	.+2      	; 0x470 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x190>
     46e:	dd 0f       	add	r29, r29
     470:	4a 95       	dec	r20
     472:	ea f7       	brpl	.-6      	; 0x46e <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x18e>
     474:	4d 2f       	mov	r20, r29
     476:	e5 01       	movw	r28, r10
     478:	48 83       	st	Y, r20
				PortUsed = e_PORTC;
     47a:	0e 2d       	mov	r16, r14

void CArduinoProcessor::PackPinsToBitfield(arduinoPinNames_E pins[8], int *NumberOfPinsToPack, uint8_t *Bitfield)
{
	arduinoPortNames_E PortUsed = e_INVALIDPORTASSIGNMMENT;
	
	for (int i = 0; i < *NumberOfPinsToPack; i++)
     47c:	01 96       	adiw	r24, 0x01	; 1
     47e:	6d 91       	ld	r22, X+
     480:	7c 91       	ld	r23, X
     482:	11 97       	sbiw	r26, 0x01	; 1
     484:	86 17       	cp	r24, r22
     486:	97 07       	cpc	r25, r23
     488:	0c f4       	brge	.+2      	; 0x48c <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x1ac>
     48a:	4d cf       	rjmp	.-358    	; 0x326 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x46>
			break;
		}
	}
	
	return;
}
     48c:	df 91       	pop	r29
     48e:	cf 91       	pop	r28
     490:	1f 91       	pop	r17
     492:	0f 91       	pop	r16
     494:	ff 90       	pop	r15
     496:	ef 90       	pop	r14
     498:	df 90       	pop	r13
     49a:	bf 90       	pop	r11
     49c:	af 90       	pop	r10
     49e:	08 95       	ret

000004a0 <_ZN17CArduinoProcessor9createMapEv>:

void CArduinoProcessor::createMap()
{
	if(RegistersAlreadySet== false)
     4a0:	80 91 86 01 	lds	r24, 0x0186
     4a4:	81 11       	cpse	r24, r1
     4a6:	5b c1       	rjmp	.+694    	; 0x75e <_ZN17CArduinoProcessor9createMapEv+0x2be>
	{
		Registers[Pd0].port = &PORTD;
     4a8:	4b e2       	ldi	r20, 0x2B	; 43
     4aa:	50 e0       	ldi	r21, 0x00	; 0
     4ac:	50 93 88 01 	sts	0x0188, r21
     4b0:	40 93 87 01 	sts	0x0187, r20
		Registers[Pd0].pin = &PIND;
     4b4:	29 e2       	ldi	r18, 0x29	; 41
     4b6:	30 e0       	ldi	r19, 0x00	; 0
     4b8:	30 93 8a 01 	sts	0x018A, r19
     4bc:	20 93 89 01 	sts	0x0189, r18
		Registers[Pd0].DDR = &DDRD;
     4c0:	8a e2       	ldi	r24, 0x2A	; 42
     4c2:	90 e0       	ldi	r25, 0x00	; 0
     4c4:	90 93 8c 01 	sts	0x018C, r25
     4c8:	80 93 8b 01 	sts	0x018B, r24
		Registers[Pd0].AVRlibPinWord = PORTD0;
     4cc:	10 92 8d 01 	sts	0x018D, r1
		Registers[Pd0].pinIsClaimed = Unclaimed;
     4d0:	10 92 8e 01 	sts	0x018E, r1

		Registers[Pd1].port = &PORTD;
     4d4:	50 93 90 01 	sts	0x0190, r21
     4d8:	40 93 8f 01 	sts	0x018F, r20
		Registers[Pd1].pin = &PIND;
     4dc:	30 93 92 01 	sts	0x0192, r19
     4e0:	20 93 91 01 	sts	0x0191, r18
		Registers[Pd1].DDR = &DDRD;
     4e4:	90 93 94 01 	sts	0x0194, r25
     4e8:	80 93 93 01 	sts	0x0193, r24
		Registers[Pd1].AVRlibPinWord = PORTD1;
     4ec:	61 e0       	ldi	r22, 0x01	; 1
     4ee:	60 93 95 01 	sts	0x0195, r22
		Registers[Pd1].pinIsClaimed = Unclaimed;
     4f2:	10 92 96 01 	sts	0x0196, r1

		Registers[Pd2].port = &PORTD;
     4f6:	50 93 98 01 	sts	0x0198, r21
     4fa:	40 93 97 01 	sts	0x0197, r20
		Registers[Pd2].pin = &PIND;
     4fe:	30 93 9a 01 	sts	0x019A, r19
     502:	20 93 99 01 	sts	0x0199, r18
		Registers[Pd2].DDR = &DDRD;
     506:	90 93 9c 01 	sts	0x019C, r25
     50a:	80 93 9b 01 	sts	0x019B, r24
		Registers[Pd2].AVRlibPinWord = PORTD2;
     50e:	a2 e0       	ldi	r26, 0x02	; 2
     510:	a0 93 9d 01 	sts	0x019D, r26
		Registers[Pd2].pinIsClaimed = Unclaimed;
     514:	10 92 9e 01 	sts	0x019E, r1

		Registers[Pd3].port = &PORTD;
     518:	50 93 a0 01 	sts	0x01A0, r21
     51c:	40 93 9f 01 	sts	0x019F, r20
		Registers[Pd3].pin = &PIND;
     520:	30 93 a2 01 	sts	0x01A2, r19
     524:	20 93 a1 01 	sts	0x01A1, r18
		Registers[Pd3].DDR = &DDRD;
     528:	90 93 a4 01 	sts	0x01A4, r25
     52c:	80 93 a3 01 	sts	0x01A3, r24
		Registers[Pd3].AVRlibPinWord = PORTD3;
     530:	f3 e0       	ldi	r31, 0x03	; 3
     532:	f0 93 a5 01 	sts	0x01A5, r31
		Registers[Pd3].pinIsClaimed = Unclaimed;
     536:	10 92 a6 01 	sts	0x01A6, r1

		Registers[Pd4].port = &PORTD;
     53a:	50 93 a8 01 	sts	0x01A8, r21
     53e:	40 93 a7 01 	sts	0x01A7, r20
		Registers[Pd4].pin = &PIND;
     542:	30 93 aa 01 	sts	0x01AA, r19
     546:	20 93 a9 01 	sts	0x01A9, r18
		Registers[Pd4].DDR = &DDRD;
     54a:	90 93 ac 01 	sts	0x01AC, r25
     54e:	80 93 ab 01 	sts	0x01AB, r24
		Registers[Pd4].AVRlibPinWord = PORTD4;
     552:	e4 e0       	ldi	r30, 0x04	; 4
     554:	e0 93 ad 01 	sts	0x01AD, r30
		Registers[Pd4].pinIsClaimed = Unclaimed;
     558:	10 92 ae 01 	sts	0x01AE, r1

		Registers[Pd5].port = &PORTD;
     55c:	50 93 b0 01 	sts	0x01B0, r21
     560:	40 93 af 01 	sts	0x01AF, r20
		Registers[Pd5].pin = &PIND;
     564:	30 93 b2 01 	sts	0x01B2, r19
     568:	20 93 b1 01 	sts	0x01B1, r18
		Registers[Pd5].DDR = &DDRD;
     56c:	90 93 b4 01 	sts	0x01B4, r25
     570:	80 93 b3 01 	sts	0x01B3, r24
		Registers[Pd5].AVRlibPinWord = PORTD5;
     574:	75 e0       	ldi	r23, 0x05	; 5
     576:	70 93 b5 01 	sts	0x01B5, r23
		Registers[Pd5].pinIsClaimed = Unclaimed;
     57a:	10 92 b6 01 	sts	0x01B6, r1

		Registers[Pd6].port = &PORTD;
     57e:	50 93 b8 01 	sts	0x01B8, r21
     582:	40 93 b7 01 	sts	0x01B7, r20
		Registers[Pd6].pin = &PIND;
     586:	30 93 ba 01 	sts	0x01BA, r19
     58a:	20 93 b9 01 	sts	0x01B9, r18
		Registers[Pd6].DDR = &DDRD;
     58e:	90 93 bc 01 	sts	0x01BC, r25
     592:	80 93 bb 01 	sts	0x01BB, r24
		Registers[Pd6].AVRlibPinWord = PORTD6;
     596:	b6 e0       	ldi	r27, 0x06	; 6
     598:	b0 93 bd 01 	sts	0x01BD, r27
		Registers[Pd6].pinIsClaimed = Unclaimed;
     59c:	10 92 be 01 	sts	0x01BE, r1

		Registers[Pd7].port = &PORTD;
     5a0:	50 93 c0 01 	sts	0x01C0, r21
     5a4:	40 93 bf 01 	sts	0x01BF, r20
		Registers[Pd7].pin = &PIND;
     5a8:	30 93 c2 01 	sts	0x01C2, r19
     5ac:	20 93 c1 01 	sts	0x01C1, r18
		Registers[Pd7].DDR = &DDRD;
     5b0:	90 93 c4 01 	sts	0x01C4, r25
     5b4:	80 93 c3 01 	sts	0x01C3, r24
		Registers[Pd7].AVRlibPinWord = PORTD7;
     5b8:	87 e0       	ldi	r24, 0x07	; 7
     5ba:	80 93 c5 01 	sts	0x01C5, r24
		Registers[Pd7].pinIsClaimed = Unclaimed;
     5be:	10 92 c6 01 	sts	0x01C6, r1



		Registers[Pb0].port = &PORTB;
     5c2:	45 e2       	ldi	r20, 0x25	; 37
     5c4:	50 e0       	ldi	r21, 0x00	; 0
     5c6:	50 93 c8 01 	sts	0x01C8, r21
     5ca:	40 93 c7 01 	sts	0x01C7, r20
		Registers[Pb0].pin = &PINB;
     5ce:	23 e2       	ldi	r18, 0x23	; 35
     5d0:	30 e0       	ldi	r19, 0x00	; 0
     5d2:	30 93 ca 01 	sts	0x01CA, r19
     5d6:	20 93 c9 01 	sts	0x01C9, r18
		Registers[Pb0].DDR = &DDRB;
     5da:	84 e2       	ldi	r24, 0x24	; 36
     5dc:	90 e0       	ldi	r25, 0x00	; 0
     5de:	90 93 cc 01 	sts	0x01CC, r25
     5e2:	80 93 cb 01 	sts	0x01CB, r24
		Registers[Pb0].AVRlibPinWord = PORTB0;
     5e6:	10 92 cd 01 	sts	0x01CD, r1
		Registers[Pb0].pinIsClaimed = Unclaimed;
     5ea:	10 92 ce 01 	sts	0x01CE, r1

		Registers[Pb1].port = &PORTB;
     5ee:	50 93 d0 01 	sts	0x01D0, r21
     5f2:	40 93 cf 01 	sts	0x01CF, r20
		Registers[Pb1].pin = &PINB;
     5f6:	30 93 d2 01 	sts	0x01D2, r19
     5fa:	20 93 d1 01 	sts	0x01D1, r18
		Registers[Pb1].DDR = &DDRB;
     5fe:	90 93 d4 01 	sts	0x01D4, r25
     602:	80 93 d3 01 	sts	0x01D3, r24
		Registers[Pb1].AVRlibPinWord = PORTB1;
     606:	60 93 d5 01 	sts	0x01D5, r22
		Registers[Pb1].pinIsClaimed = Unclaimed;
     60a:	10 92 d6 01 	sts	0x01D6, r1

		Registers[Pb2].port = &PORTB;
     60e:	50 93 d8 01 	sts	0x01D8, r21
     612:	40 93 d7 01 	sts	0x01D7, r20
		Registers[Pb2].pin = &PINB;
     616:	30 93 da 01 	sts	0x01DA, r19
     61a:	20 93 d9 01 	sts	0x01D9, r18
		Registers[Pb2].DDR = &DDRB;
     61e:	90 93 dc 01 	sts	0x01DC, r25
     622:	80 93 db 01 	sts	0x01DB, r24
		Registers[Pb2].AVRlibPinWord = PORTB2;
     626:	a0 93 dd 01 	sts	0x01DD, r26
		Registers[Pb2].pinIsClaimed = Unclaimed;
     62a:	10 92 de 01 	sts	0x01DE, r1

		Registers[Pb3].port = &PORTB;
     62e:	50 93 e0 01 	sts	0x01E0, r21
     632:	40 93 df 01 	sts	0x01DF, r20
		Registers[Pb3].pin = &PINB;
     636:	30 93 e2 01 	sts	0x01E2, r19
     63a:	20 93 e1 01 	sts	0x01E1, r18
		Registers[Pb3].DDR = &DDRB;
     63e:	90 93 e4 01 	sts	0x01E4, r25
     642:	80 93 e3 01 	sts	0x01E3, r24
		Registers[Pb3].AVRlibPinWord = PORTB3;
     646:	f0 93 e5 01 	sts	0x01E5, r31
		Registers[Pb3].pinIsClaimed = Unclaimed;
     64a:	10 92 e6 01 	sts	0x01E6, r1

		Registers[Pb4].port = &PORTB;
     64e:	50 93 e8 01 	sts	0x01E8, r21
     652:	40 93 e7 01 	sts	0x01E7, r20
		Registers[Pb4].pin = &PINB;
     656:	30 93 ea 01 	sts	0x01EA, r19
     65a:	20 93 e9 01 	sts	0x01E9, r18
		Registers[Pb4].DDR = &DDRB;
     65e:	90 93 ec 01 	sts	0x01EC, r25
     662:	80 93 eb 01 	sts	0x01EB, r24
		Registers[Pb4].AVRlibPinWord = PORTB4;
     666:	e0 93 ed 01 	sts	0x01ED, r30
		Registers[Pb4].pinIsClaimed = Unclaimed;
     66a:	10 92 ee 01 	sts	0x01EE, r1

		Registers[Pb5].port = &PORTB;
     66e:	50 93 f0 01 	sts	0x01F0, r21
     672:	40 93 ef 01 	sts	0x01EF, r20
		Registers[Pb5].pin = &PINB;
     676:	30 93 f2 01 	sts	0x01F2, r19
     67a:	20 93 f1 01 	sts	0x01F1, r18
		Registers[Pb5].DDR = &DDRB;
     67e:	90 93 f4 01 	sts	0x01F4, r25
     682:	80 93 f3 01 	sts	0x01F3, r24
		Registers[Pb5].AVRlibPinWord = PORTB5;
     686:	70 93 f5 01 	sts	0x01F5, r23
		Registers[Pb5].pinIsClaimed = Unclaimed;
     68a:	10 92 f6 01 	sts	0x01F6, r1



		Registers[Pc0].port = &PORTC;
     68e:	48 e2       	ldi	r20, 0x28	; 40
     690:	50 e0       	ldi	r21, 0x00	; 0
     692:	50 93 f8 01 	sts	0x01F8, r21
     696:	40 93 f7 01 	sts	0x01F7, r20
		Registers[Pc0].pin = &PINC;
     69a:	26 e2       	ldi	r18, 0x26	; 38
     69c:	30 e0       	ldi	r19, 0x00	; 0
     69e:	30 93 fa 01 	sts	0x01FA, r19
     6a2:	20 93 f9 01 	sts	0x01F9, r18
		Registers[Pc0].DDR = &DDRC;
     6a6:	87 e2       	ldi	r24, 0x27	; 39
     6a8:	90 e0       	ldi	r25, 0x00	; 0
     6aa:	90 93 fc 01 	sts	0x01FC, r25
     6ae:	80 93 fb 01 	sts	0x01FB, r24
		Registers[Pc0].AVRlibPinWord = PORTC0;
     6b2:	10 92 fd 01 	sts	0x01FD, r1
		Registers[Pc0].pinIsClaimed = Unclaimed;
     6b6:	10 92 fe 01 	sts	0x01FE, r1

		Registers[Pc1].port = &PORTC;
     6ba:	50 93 00 02 	sts	0x0200, r21
     6be:	40 93 ff 01 	sts	0x01FF, r20
		Registers[Pc1].pin = &PINC;
     6c2:	30 93 02 02 	sts	0x0202, r19
     6c6:	20 93 01 02 	sts	0x0201, r18
		Registers[Pc1].DDR = &DDRC;
     6ca:	90 93 04 02 	sts	0x0204, r25
     6ce:	80 93 03 02 	sts	0x0203, r24
		Registers[Pc1].AVRlibPinWord = PORTC1;
     6d2:	60 93 05 02 	sts	0x0205, r22
		Registers[Pc1].pinIsClaimed = Unclaimed;
     6d6:	10 92 06 02 	sts	0x0206, r1

		Registers[Pc2].port = &PORTC;
     6da:	50 93 08 02 	sts	0x0208, r21
     6de:	40 93 07 02 	sts	0x0207, r20
		Registers[Pc2].pin = &PINC;
     6e2:	30 93 0a 02 	sts	0x020A, r19
     6e6:	20 93 09 02 	sts	0x0209, r18
		Registers[Pc2].DDR = &DDRC;
     6ea:	90 93 0c 02 	sts	0x020C, r25
     6ee:	80 93 0b 02 	sts	0x020B, r24
		Registers[Pc2].AVRlibPinWord = PORTC2;
     6f2:	a0 93 0d 02 	sts	0x020D, r26
		Registers[Pc2].pinIsClaimed = Unclaimed;
     6f6:	10 92 0e 02 	sts	0x020E, r1

		Registers[Pc3].port = &PORTC;
     6fa:	50 93 10 02 	sts	0x0210, r21
     6fe:	40 93 0f 02 	sts	0x020F, r20
		Registers[Pc3].pin = &PINC;
     702:	30 93 12 02 	sts	0x0212, r19
     706:	20 93 11 02 	sts	0x0211, r18
		Registers[Pc3].DDR = &DDRC;
     70a:	90 93 14 02 	sts	0x0214, r25
     70e:	80 93 13 02 	sts	0x0213, r24
		Registers[Pc3].AVRlibPinWord = PORTC3;
     712:	f0 93 15 02 	sts	0x0215, r31
		Registers[Pc3].pinIsClaimed = Unclaimed;
     716:	10 92 16 02 	sts	0x0216, r1

		Registers[Pc4].port = &PORTC;
     71a:	50 93 18 02 	sts	0x0218, r21
     71e:	40 93 17 02 	sts	0x0217, r20
		Registers[Pc4].pin = &PINC;
     722:	30 93 1a 02 	sts	0x021A, r19
     726:	20 93 19 02 	sts	0x0219, r18
		Registers[Pc4].DDR = &DDRC;
     72a:	90 93 1c 02 	sts	0x021C, r25
     72e:	80 93 1b 02 	sts	0x021B, r24
		Registers[Pc4].AVRlibPinWord = PORTC4;
     732:	e0 93 1d 02 	sts	0x021D, r30
		Registers[Pc4].pinIsClaimed = Unclaimed;
     736:	10 92 1e 02 	sts	0x021E, r1

		Registers[Pc5].port = &PORTC;
     73a:	50 93 20 02 	sts	0x0220, r21
     73e:	40 93 1f 02 	sts	0x021F, r20
		Registers[Pc5].pin = &PINC;
     742:	30 93 22 02 	sts	0x0222, r19
     746:	20 93 21 02 	sts	0x0221, r18
		Registers[Pc5].DDR = &DDRC;
     74a:	90 93 24 02 	sts	0x0224, r25
     74e:	80 93 23 02 	sts	0x0223, r24
		Registers[Pc5].AVRlibPinWord = PORTC5;
     752:	70 93 25 02 	sts	0x0225, r23
		Registers[Pc5].pinIsClaimed = Unclaimed;
     756:	10 92 26 02 	sts	0x0226, r1
		
		RegistersAlreadySet = true;
     75a:	60 93 86 01 	sts	0x0186, r22
     75e:	08 95       	ret

00000760 <_ZN17CArduinoProcessorC1Ev>:
//External functions

 CArduinoProcessor::CArduinoProcessor( void )
 {
	// Set up the Pin Register Map
	createMap();
     760:	9f ce       	rjmp	.-706    	; 0x4a0 <_ZN17CArduinoProcessor9createMapEv>
     762:	08 95       	ret

00000764 <_ZN7CButtonC1E17arduinoPinNames_E>:
{
	ButtonFailureStatus = BUTTON_INITIALIZED_INCORRECTLY;
	ButtonStatus = BUTTON_ERROR;
}

 CButton::CButton( arduinoPinNames_E A )
     764:	1f 93       	push	r17
     766:	cf 93       	push	r28
     768:	df 93       	push	r29
     76a:	ec 01       	movw	r28, r24
     76c:	16 2f       	mov	r17, r22
#ifdef __AVR_ATmega328P__ //Duemilanove and Uno
#include "ATmega328P.h"
#endif


class CArduinoInterface : public CArduinoProcessor
     76e:	f8 df       	rcall	.-16     	; 0x760 <_ZN17CArduinoProcessorC1Ev>
{
	ButtonPin = A;
     770:	1b 83       	std	Y+3, r17	; 0x03
	
	if (this->SetReadStatus(ButtonPin) == false)
     772:	61 2f       	mov	r22, r17
     774:	ce 01       	movw	r24, r28
     776:	a2 dc       	rcall	.-1724   	; 0xbc <_ZN17CArduinoProcessor13SetReadStatusE17arduinoPinNames_E>
     778:	81 11       	cpse	r24, r1
     77a:	04 c0       	rjmp	.+8      	; 0x784 <_ZN7CButtonC1E17arduinoPinNames_E+0x20>
	{
		ButtonFailureState = BUTTON_PIN_ALREADY_CLAIMED;
     77c:	82 e0       	ldi	r24, 0x02	; 2
     77e:	88 83       	st	Y, r24
		ButtonStatus = BUTTON_ERROR;
     780:	19 82       	std	Y+1, r1	; 0x01
     782:	0a c0       	rjmp	.+20     	; 0x798 <_ZN7CButtonC1E17arduinoPinNames_E+0x34>
	}
	else if(this->SetPullUpStatus(ButtonPin) == false)
     784:	6b 81       	ldd	r22, Y+3	; 0x03
     786:	ce 01       	movw	r24, r28
     788:	c7 dc       	rcall	.-1650   	; 0x118 <_ZN17CArduinoProcessor15SetPullUpStatusE17arduinoPinNames_E>
     78a:	81 11       	cpse	r24, r1
     78c:	04 c0       	rjmp	.+8      	; 0x796 <_ZN7CButtonC1E17arduinoPinNames_E+0x32>
	{
		ButtonFailureState = BUTTON_PIN_ALREADY_CLAIMED;
     78e:	82 e0       	ldi	r24, 0x02	; 2
     790:	88 83       	st	Y, r24
		ButtonStatus = BUTTON_ERROR;
     792:	19 82       	std	Y+1, r1	; 0x01
     794:	01 c0       	rjmp	.+2      	; 0x798 <_ZN7CButtonC1E17arduinoPinNames_E+0x34>
	}
	else
	{
		ButtonFailureState = BUTTON_NO_FAILURE;
     796:	18 82       	st	Y, r1
	}
}
     798:	df 91       	pop	r29
     79a:	cf 91       	pop	r28
     79c:	1f 91       	pop	r17
     79e:	08 95       	ret

000007a0 <_ZN7CButton10ReadButtonEv>:

void CButton::ReadButton( void )
{
     7a0:	cf 93       	push	r28
     7a2:	df 93       	push	r29
     7a4:	ec 01       	movw	r28, r24
	if (ButtonFailureState == BUTTON_NO_FAILURE)
     7a6:	88 81       	ld	r24, Y
     7a8:	81 11       	cpse	r24, r1
     7aa:	0c c0       	rjmp	.+24     	; 0x7c4 <_ZN7CButton10ReadButtonEv+0x24>
	{
		if (this->ReadDigitalPin(&ButtonPin) == 0)
     7ac:	be 01       	movw	r22, r28
     7ae:	6d 5f       	subi	r22, 0xFD	; 253
     7b0:	7f 4f       	sbci	r23, 0xFF	; 255
     7b2:	ce 01       	movw	r24, r28
     7b4:	03 dd       	rcall	.-1530   	; 0x1bc <_ZN17CArduinoProcessor14ReadDigitalPinEP17arduinoPinNames_E>
     7b6:	89 2b       	or	r24, r25
     7b8:	19 f4       	brne	.+6      	; 0x7c0 <_ZN7CButton10ReadButtonEv+0x20>
		{
			ButtonStatus = BUTTON_PRESSED;
     7ba:	81 e0       	ldi	r24, 0x01	; 1
     7bc:	89 83       	std	Y+1, r24	; 0x01
     7be:	02 c0       	rjmp	.+4      	; 0x7c4 <_ZN7CButton10ReadButtonEv+0x24>
		} 
		else
		{
			ButtonStatus = BUTTON_RELEASED;
     7c0:	82 e0       	ldi	r24, 0x02	; 2
     7c2:	89 83       	std	Y+1, r24	; 0x01
		}
		
	}
}
     7c4:	df 91       	pop	r29
     7c6:	cf 91       	pop	r28
     7c8:	08 95       	ret

000007ca <_ZN7CButton14GetButtonStateEv>:

ButtonStates CButton::GetButtonState( void )
{
	static ButtonStates Output;
	
	if (ButtonFailureStatus != BUTTON_NO_FAILURE)
     7ca:	fc 01       	movw	r30, r24
     7cc:	22 81       	ldd	r18, Z+2	; 0x02
     7ce:	22 23       	and	r18, r18
     7d0:	19 f0       	breq	.+6      	; 0x7d8 <_ZN7CButton14GetButtonStateEv+0xe>
	{
		Output = BUTTON_ERROR;
     7d2:	10 92 27 02 	sts	0x0227, r1
     7d6:	04 c0       	rjmp	.+8      	; 0x7e0 <_ZN7CButton14GetButtonStateEv+0x16>
	} 
	else
	{
		Output = ButtonStatus;
     7d8:	fc 01       	movw	r30, r24
     7da:	81 81       	ldd	r24, Z+1	; 0x01
     7dc:	80 93 27 02 	sts	0x0227, r24
	}
	
	return Output;
	
     7e0:	80 91 27 02 	lds	r24, 0x0227
     7e4:	08 95       	ret

000007e6 <_ZN14CRotaryEncoderC1E17arduinoPinNames_ES0_>:
CRotaryEncoder::CRotaryEncoder()
{
	EncoderFailureState =ENCODER_INITIALIZED_INCORRECTLY;
}

CRotaryEncoder::CRotaryEncoder(arduinoPinNames_E A, arduinoPinNames_E B)
     7e6:	ef 92       	push	r14
     7e8:	ff 92       	push	r15
     7ea:	0f 93       	push	r16
     7ec:	1f 93       	push	r17
     7ee:	cf 93       	push	r28
     7f0:	df 93       	push	r29
     7f2:	cd b7       	in	r28, 0x3d	; 61
     7f4:	de b7       	in	r29, 0x3e	; 62
     7f6:	2a 97       	sbiw	r28, 0x0a	; 10
     7f8:	0f b6       	in	r0, 0x3f	; 63
     7fa:	f8 94       	cli
     7fc:	de bf       	out	0x3e, r29	; 62
     7fe:	0f be       	out	0x3f, r0	; 63
     800:	cd bf       	out	0x3d, r28	; 61
     802:	8c 01       	movw	r16, r24
     804:	f6 2e       	mov	r15, r22
     806:	e4 2e       	mov	r14, r20
     808:	ab df       	rcall	.-170    	; 0x760 <_ZN17CArduinoProcessorC1Ev>
{
	arduinoPinNames_E CreateBitfield[8];
	int NumberOfPinsForBitfield = 2;
     80a:	82 e0       	ldi	r24, 0x02	; 2
     80c:	90 e0       	ldi	r25, 0x00	; 0
     80e:	9a 87       	std	Y+10, r25	; 0x0a
     810:	89 87       	std	Y+9, r24	; 0x09
	
	pinA = A;
     812:	f8 01       	movw	r30, r16
     814:	f1 82       	std	Z+1, r15	; 0x01
	pinB = B;
     816:	e2 82       	std	Z+2, r14	; 0x02
	
	// Check for errors, if none then assign the pins to Encoder_input
	if (this->FindPort(pinA) != this->FindPort(pinB))
     818:	6f 2d       	mov	r22, r15
     81a:	c8 01       	movw	r24, r16
     81c:	51 dd       	rcall	.-1374   	; 0x2c0 <_ZN17CArduinoProcessor8FindPortE17arduinoPinNames_E>
     81e:	f8 2e       	mov	r15, r24
     820:	f8 01       	movw	r30, r16
     822:	62 81       	ldd	r22, Z+2	; 0x02
     824:	c8 01       	movw	r24, r16
     826:	4c dd       	rcall	.-1384   	; 0x2c0 <_ZN17CArduinoProcessor8FindPortE17arduinoPinNames_E>
     828:	f8 16       	cp	r15, r24
     82a:	21 f0       	breq	.+8      	; 0x834 <_ZN14CRotaryEncoderC1E17arduinoPinNames_ES0_+0x4e>
	{
		EncoderFailureState = ENCODER_PINS_NOT_ON_SAME_PORT;
     82c:	83 e0       	ldi	r24, 0x03	; 3
     82e:	f8 01       	movw	r30, r16
     830:	80 83       	st	Z, r24
     832:	43 c0       	rjmp	.+134    	; 0x8ba <_ZN14CRotaryEncoderC1E17arduinoPinNames_ES0_+0xd4>
	}
	else if (this->SetReadStatus(pinA) == false)
     834:	f8 01       	movw	r30, r16
     836:	61 81       	ldd	r22, Z+1	; 0x01
     838:	c8 01       	movw	r24, r16
     83a:	40 dc       	rcall	.-1920   	; 0xbc <_ZN17CArduinoProcessor13SetReadStatusE17arduinoPinNames_E>
     83c:	81 11       	cpse	r24, r1
     83e:	04 c0       	rjmp	.+8      	; 0x848 <_ZN14CRotaryEncoderC1E17arduinoPinNames_ES0_+0x62>
	{
		EncoderFailureState = ENCODER_PIN_ALREADY_CLAIMED;
     840:	82 e0       	ldi	r24, 0x02	; 2
     842:	f8 01       	movw	r30, r16
     844:	80 83       	st	Z, r24
     846:	39 c0       	rjmp	.+114    	; 0x8ba <_ZN14CRotaryEncoderC1E17arduinoPinNames_ES0_+0xd4>
	}
	else if (this->SetPullUpStatus(pinA) == false)
     848:	f8 01       	movw	r30, r16
     84a:	61 81       	ldd	r22, Z+1	; 0x01
     84c:	c8 01       	movw	r24, r16
     84e:	64 dc       	rcall	.-1848   	; 0x118 <_ZN17CArduinoProcessor15SetPullUpStatusE17arduinoPinNames_E>
     850:	81 11       	cpse	r24, r1
     852:	04 c0       	rjmp	.+8      	; 0x85c <_ZN14CRotaryEncoderC1E17arduinoPinNames_ES0_+0x76>
	{
		EncoderFailureState = ENCODER_PIN_ALREADY_CLAIMED;
     854:	82 e0       	ldi	r24, 0x02	; 2
     856:	f8 01       	movw	r30, r16
     858:	80 83       	st	Z, r24
     85a:	2f c0       	rjmp	.+94     	; 0x8ba <_ZN14CRotaryEncoderC1E17arduinoPinNames_ES0_+0xd4>
	}
	else if (this->SetReadStatus(pinB) == false)
     85c:	f8 01       	movw	r30, r16
     85e:	62 81       	ldd	r22, Z+2	; 0x02
     860:	c8 01       	movw	r24, r16
     862:	2c dc       	rcall	.-1960   	; 0xbc <_ZN17CArduinoProcessor13SetReadStatusE17arduinoPinNames_E>
     864:	81 11       	cpse	r24, r1
     866:	04 c0       	rjmp	.+8      	; 0x870 <_ZN14CRotaryEncoderC1E17arduinoPinNames_ES0_+0x8a>
	{
		EncoderFailureState = ENCODER_PIN_ALREADY_CLAIMED;
     868:	82 e0       	ldi	r24, 0x02	; 2
     86a:	f8 01       	movw	r30, r16
     86c:	80 83       	st	Z, r24
     86e:	25 c0       	rjmp	.+74     	; 0x8ba <_ZN14CRotaryEncoderC1E17arduinoPinNames_ES0_+0xd4>
	}
	else if (this->SetPullUpStatus(pinB) == false)
     870:	f8 01       	movw	r30, r16
     872:	62 81       	ldd	r22, Z+2	; 0x02
     874:	c8 01       	movw	r24, r16
     876:	50 dc       	rcall	.-1888   	; 0x118 <_ZN17CArduinoProcessor15SetPullUpStatusE17arduinoPinNames_E>
     878:	81 11       	cpse	r24, r1
     87a:	04 c0       	rjmp	.+8      	; 0x884 <_ZN14CRotaryEncoderC1E17arduinoPinNames_ES0_+0x9e>
	{
		EncoderFailureState = ENCODER_PIN_ALREADY_CLAIMED;
     87c:	82 e0       	ldi	r24, 0x02	; 2
     87e:	f8 01       	movw	r30, r16
     880:	80 83       	st	Z, r24
     882:	1b c0       	rjmp	.+54     	; 0x8ba <_ZN14CRotaryEncoderC1E17arduinoPinNames_ES0_+0xd4>
	}
	else
	{
		EncoderFailureState = ENCODER_NO_FAILURE;
     884:	f8 01       	movw	r30, r16
     886:	10 82       	st	Z, r1
		Encoder_input.port = this->FindPort(pinA);
     888:	61 81       	ldd	r22, Z+1	; 0x01
     88a:	c8 01       	movw	r24, r16
     88c:	19 dd       	rcall	.-1486   	; 0x2c0 <_ZN17CArduinoProcessor8FindPortE17arduinoPinNames_E>
     88e:	f8 01       	movw	r30, r16
     890:	83 83       	std	Z+3, r24	; 0x03
		CreateBitfield[0] = pinA;
     892:	81 81       	ldd	r24, Z+1	; 0x01
     894:	89 83       	std	Y+1, r24	; 0x01
		CreateBitfield[1] = pinB;
     896:	82 81       	ldd	r24, Z+2	; 0x02
     898:	8a 83       	std	Y+2, r24	; 0x02
		this->PackPinsToBitfield(CreateBitfield, &NumberOfPinsForBitfield, &Encoder_input.pins);
     89a:	98 01       	movw	r18, r16
     89c:	2c 5f       	subi	r18, 0xFC	; 252
     89e:	3f 4f       	sbci	r19, 0xFF	; 255
     8a0:	ae 01       	movw	r20, r28
     8a2:	47 5f       	subi	r20, 0xF7	; 247
     8a4:	5f 4f       	sbci	r21, 0xFF	; 255
     8a6:	be 01       	movw	r22, r28
     8a8:	6f 5f       	subi	r22, 0xFF	; 255
     8aa:	7f 4f       	sbci	r23, 0xFF	; 255
     8ac:	c8 01       	movw	r24, r16
     8ae:	18 dd       	rcall	.-1488   	; 0x2e0 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh>
		
		EncoderPosition = 32000;	
     8b0:	80 e0       	ldi	r24, 0x00	; 0
     8b2:	9d e7       	ldi	r25, 0x7D	; 125
     8b4:	f8 01       	movw	r30, r16
     8b6:	96 83       	std	Z+6, r25	; 0x06
     8b8:	85 83       	std	Z+5, r24	; 0x05
	}
}
     8ba:	2a 96       	adiw	r28, 0x0a	; 10
     8bc:	0f b6       	in	r0, 0x3f	; 63
     8be:	f8 94       	cli
     8c0:	de bf       	out	0x3e, r29	; 62
     8c2:	0f be       	out	0x3f, r0	; 63
     8c4:	cd bf       	out	0x3d, r28	; 61
     8c6:	df 91       	pop	r29
     8c8:	cf 91       	pop	r28
     8ca:	1f 91       	pop	r17
     8cc:	0f 91       	pop	r16
     8ce:	ff 90       	pop	r15
     8d0:	ef 90       	pop	r14
     8d2:	08 95       	ret

000008d4 <_ZN14CRotaryEncoder11ReadEncoderEv>:

void CRotaryEncoder::ReadEncoder( void )
{
     8d4:	cf 93       	push	r28
     8d6:	df 93       	push	r29
     8d8:	ec 01       	movw	r28, r24
	static uint8_t OldReading = 0;
	static uint8_t CurrentReading = 0;
	static uint8_t Pin1State = 0;
	static uint8_t Pin2State = 0;
	
	if (EncoderFailureState == ENCODER_NO_FAILURE)
     8da:	88 81       	ld	r24, Y
     8dc:	81 11       	cpse	r24, r1
     8de:	5b c0       	rjmp	.+182    	; 0x996 <__stack+0x97>
	{
		this->ReadMultipleDigitalPins(&Encoder_input, &CurrentReading);
     8e0:	be 01       	movw	r22, r28
     8e2:	6d 5f       	subi	r22, 0xFD	; 253
     8e4:	7f 4f       	sbci	r23, 0xFF	; 255
     8e6:	48 e2       	ldi	r20, 0x28	; 40
     8e8:	52 e0       	ldi	r21, 0x02	; 2
     8ea:	ce 01       	movw	r24, r28
     8ec:	8b dc       	rcall	.-1770   	; 0x204 <_ZN17CArduinoProcessor23ReadMultipleDigitalPinsEP13portPinUser_sPh>
		
		Pin1State = ( ( CurrentReading & ( 1 << Registers[pinA].AVRlibPinWord ) ) >> Registers[pinA].AVRlibPinWord );
     8ee:	40 91 28 02 	lds	r20, 0x0228
     8f2:	50 e0       	ldi	r21, 0x00	; 0
     8f4:	e9 81       	ldd	r30, Y+1	; 0x01
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	ee 0f       	add	r30, r30
     8fa:	ff 1f       	adc	r31, r31
     8fc:	ee 0f       	add	r30, r30
     8fe:	ff 1f       	adc	r31, r31
     900:	ee 0f       	add	r30, r30
     902:	ff 1f       	adc	r31, r31
     904:	e9 57       	subi	r30, 0x79	; 121
     906:	fe 4f       	sbci	r31, 0xFE	; 254
     908:	26 81       	ldd	r18, Z+6	; 0x06
     90a:	86 81       	ldd	r24, Z+6	; 0x06
     90c:	61 e0       	ldi	r22, 0x01	; 1
     90e:	70 e0       	ldi	r23, 0x00	; 0
     910:	fb 01       	movw	r30, r22
     912:	02 c0       	rjmp	.+4      	; 0x918 <__stack+0x19>
     914:	ee 0f       	add	r30, r30
     916:	ff 1f       	adc	r31, r31
     918:	2a 95       	dec	r18
     91a:	e2 f7       	brpl	.-8      	; 0x914 <__stack+0x15>
     91c:	9f 01       	movw	r18, r30
     91e:	24 23       	and	r18, r20
     920:	35 23       	and	r19, r21
     922:	02 c0       	rjmp	.+4      	; 0x928 <__stack+0x29>
     924:	35 95       	asr	r19
     926:	27 95       	ror	r18
     928:	8a 95       	dec	r24
     92a:	e2 f7       	brpl	.-8      	; 0x924 <__stack+0x25>
     92c:	20 93 29 02 	sts	0x0229, r18
		Pin2State = ( ( CurrentReading & ( 1 << Registers[pinB].AVRlibPinWord ) ) >> Registers[pinB].AVRlibPinWord );
     930:	ea 81       	ldd	r30, Y+2	; 0x02
     932:	f0 e0       	ldi	r31, 0x00	; 0
     934:	ee 0f       	add	r30, r30
     936:	ff 1f       	adc	r31, r31
     938:	ee 0f       	add	r30, r30
     93a:	ff 1f       	adc	r31, r31
     93c:	ee 0f       	add	r30, r30
     93e:	ff 1f       	adc	r31, r31
     940:	e9 57       	subi	r30, 0x79	; 121
     942:	fe 4f       	sbci	r31, 0xFE	; 254
     944:	96 81       	ldd	r25, Z+6	; 0x06
     946:	86 81       	ldd	r24, Z+6	; 0x06
     948:	02 c0       	rjmp	.+4      	; 0x94e <__stack+0x4f>
     94a:	66 0f       	add	r22, r22
     94c:	77 1f       	adc	r23, r23
     94e:	9a 95       	dec	r25
     950:	e2 f7       	brpl	.-8      	; 0x94a <__stack+0x4b>
     952:	46 23       	and	r20, r22
     954:	57 23       	and	r21, r23
     956:	ba 01       	movw	r22, r20
     958:	02 c0       	rjmp	.+4      	; 0x95e <__stack+0x5f>
     95a:	75 95       	asr	r23
     95c:	67 95       	ror	r22
     95e:	8a 95       	dec	r24
     960:	e2 f7       	brpl	.-8      	; 0x95a <__stack+0x5b>
     962:	cb 01       	movw	r24, r22
     964:	60 93 2a 02 	sts	0x022A, r22
		
		OldReading <<= 2;
     968:	e0 91 2b 02 	lds	r30, 0x022B
     96c:	ee 0f       	add	r30, r30
     96e:	ee 0f       	add	r30, r30
		OldReading |= (Pin1State | (Pin2State << 1) );
     970:	2e 2b       	or	r18, r30
     972:	88 0f       	add	r24, r24
     974:	28 2b       	or	r18, r24
     976:	20 93 2b 02 	sts	0x022B, r18
		
		EncoderPosition += enc_states[OldReading & 0x0f];
     97a:	8d 81       	ldd	r24, Y+5	; 0x05
     97c:	9e 81       	ldd	r25, Y+6	; 0x06
     97e:	2f 70       	andi	r18, 0x0F	; 15
     980:	e2 2f       	mov	r30, r18
     982:	f0 e0       	ldi	r31, 0x00	; 0
     984:	ea 5f       	subi	r30, 0xFA	; 250
     986:	fe 4f       	sbci	r31, 0xFE	; 254
     988:	20 81       	ld	r18, Z
     98a:	82 0f       	add	r24, r18
     98c:	91 1d       	adc	r25, r1
     98e:	27 fd       	sbrc	r18, 7
     990:	9a 95       	dec	r25
     992:	9e 83       	std	Y+6, r25	; 0x06
     994:	8d 83       	std	Y+5, r24	; 0x05
	}
}
     996:	df 91       	pop	r29
     998:	cf 91       	pop	r28
     99a:	08 95       	ret

0000099c <_ZN14CRotaryEncoder15GetEncoderLevelEv>:

int CRotaryEncoder::GetEncoderLevel()
{	
	
	return EncoderPosition;
     99c:	fc 01       	movw	r30, r24
     99e:	25 81       	ldd	r18, Z+5	; 0x05
     9a0:	36 81       	ldd	r19, Z+6	; 0x06
     9a2:	82 2f       	mov	r24, r18
     9a4:	93 2f       	mov	r25, r19
     9a6:	08 95       	ret

000009a8 <_ZN4Test8SetWriteE17arduinoPinNames_E>:
}


void Test::createBitfield(arduinoPinNames_E pins[8], int *NumberOfPinsToPack, uint8_t *Bitfield )
{
	this->PackPinsToBitfield(pins, NumberOfPinsToPack, Bitfield);
     9a8:	e0 cb       	rjmp	.-2112   	; 0x16a <_ZN17CArduinoProcessor14SetWriteStatusE17arduinoPinNames_E>
     9aa:	08 95       	ret

000009ac <setup>:
     9ac:	6d e0       	ldi	r22, 0x0D	; 13
     9ae:	88 e3       	ldi	r24, 0x38	; 56
     9b0:	92 e0       	ldi	r25, 0x02	; 2
     9b2:	fa df       	rcall	.-12     	; 0x9a8 <_ZN4Test8SetWriteE17arduinoPinNames_E>
     9b4:	6c e0       	ldi	r22, 0x0C	; 12
     9b6:	88 e3       	ldi	r24, 0x38	; 56
     9b8:	92 e0       	ldi	r25, 0x02	; 2
     9ba:	f6 df       	rcall	.-20     	; 0x9a8 <_ZN4Test8SetWriteE17arduinoPinNames_E>
     9bc:	6b e0       	ldi	r22, 0x0B	; 11
     9be:	88 e3       	ldi	r24, 0x38	; 56
     9c0:	92 e0       	ldi	r25, 0x02	; 2
     9c2:	f2 df       	rcall	.-28     	; 0x9a8 <_ZN4Test8SetWriteE17arduinoPinNames_E>
     9c4:	40 e0       	ldi	r20, 0x00	; 0
     9c6:	52 ec       	ldi	r21, 0xC2	; 194
     9c8:	61 e0       	ldi	r22, 0x01	; 1
     9ca:	70 e0       	ldi	r23, 0x00	; 0
     9cc:	89 e3       	ldi	r24, 0x39	; 57
     9ce:	92 e0       	ldi	r25, 0x02	; 2
     9d0:	45 d2       	rcall	.+1162   	; 0xe5c <_ZN14HardwareSerial5beginEm>
     9d2:	eb c0       	rjmp	.+470    	; 0xbaa <_Z13ShowBuildInfov>

000009d4 <_ZN4Test8WritePinE17arduinoPinNames_E11PinStatus_E>:
     9d4:	cf 93       	push	r28
     9d6:	df 93       	push	r29
     9d8:	00 d0       	rcall	.+0      	; 0x9da <_ZN4Test8WritePinE17arduinoPinNames_E11PinStatus_E+0x6>
     9da:	cd b7       	in	r28, 0x3d	; 61
     9dc:	de b7       	in	r29, 0x3e	; 62
     9de:	69 83       	std	Y+1, r22	; 0x01
     9e0:	4a 83       	std	Y+2, r20	; 0x02
     9e2:	ae 01       	movw	r20, r28
     9e4:	4e 5f       	subi	r20, 0xFE	; 254
     9e6:	5f 4f       	sbci	r21, 0xFF	; 255
     9e8:	be 01       	movw	r22, r28
     9ea:	6f 5f       	subi	r22, 0xFF	; 255
     9ec:	7f 4f       	sbci	r23, 0xFF	; 255
     9ee:	26 dc       	rcall	.-1972   	; 0x23c <_ZN17CArduinoProcessor15WriteDigitalPinEP17arduinoPinNames_EP11PinStatus_E>
     9f0:	0f 90       	pop	r0
     9f2:	0f 90       	pop	r0
     9f4:	df 91       	pop	r29
     9f6:	cf 91       	pop	r28
     9f8:	08 95       	ret

000009fa <loop>:
     9fa:	0f 93       	push	r16
     9fc:	1f 93       	push	r17
     9fe:	cf 93       	push	r28
     a00:	df 93       	push	r29
     a02:	cd b7       	in	r28, 0x3d	; 61
     a04:	de b7       	in	r29, 0x3e	; 62
     a06:	a6 97       	sbiw	r28, 0x26	; 38
     a08:	0f b6       	in	r0, 0x3f	; 63
     a0a:	f8 94       	cli
     a0c:	de bf       	out	0x3e, r29	; 62
     a0e:	0f be       	out	0x3f, r0	; 63
     a10:	cd bf       	out	0x3d, r28	; 61
     a12:	83 e3       	ldi	r24, 0x33	; 51
     a14:	92 e0       	ldi	r25, 0x02	; 2
     a16:	c4 de       	rcall	.-632    	; 0x7a0 <_ZN7CButton10ReadButtonEv>
     a18:	83 e3       	ldi	r24, 0x33	; 51
     a1a:	92 e0       	ldi	r25, 0x02	; 2
     a1c:	d6 de       	rcall	.-596    	; 0x7ca <_ZN7CButton14GetButtonStateEv>
     a1e:	81 30       	cpi	r24, 0x01	; 1
     a20:	31 f4       	brne	.+12     	; 0xa2e <loop+0x34>
     a22:	41 e0       	ldi	r20, 0x01	; 1
     a24:	6d e0       	ldi	r22, 0x0D	; 13
     a26:	88 e3       	ldi	r24, 0x38	; 56
     a28:	92 e0       	ldi	r25, 0x02	; 2
     a2a:	d4 df       	rcall	.-88     	; 0x9d4 <_ZN4Test8WritePinE17arduinoPinNames_E11PinStatus_E>
     a2c:	05 c0       	rjmp	.+10     	; 0xa38 <loop+0x3e>
     a2e:	40 e0       	ldi	r20, 0x00	; 0
     a30:	6d e0       	ldi	r22, 0x0D	; 13
     a32:	88 e3       	ldi	r24, 0x38	; 56
     a34:	92 e0       	ldi	r25, 0x02	; 2
     a36:	ce df       	rcall	.-100    	; 0x9d4 <_ZN4Test8WritePinE17arduinoPinNames_E11PinStatus_E>
     a38:	8c e2       	ldi	r24, 0x2C	; 44
     a3a:	92 e0       	ldi	r25, 0x02	; 2
     a3c:	4b df       	rcall	.-362    	; 0x8d4 <_ZN14CRotaryEncoder11ReadEncoderEv>
     a3e:	8c e2       	ldi	r24, 0x2C	; 44
     a40:	92 e0       	ldi	r25, 0x02	; 2
     a42:	ac df       	rcall	.-168    	; 0x99c <_ZN14CRotaryEncoder15GetEncoderLevelEv>
     a44:	90 93 01 01 	sts	0x0101, r25
     a48:	80 93 00 01 	sts	0x0100, r24
     a4c:	20 91 02 01 	lds	r18, 0x0102
     a50:	30 91 03 01 	lds	r19, 0x0103
     a54:	28 17       	cp	r18, r24
     a56:	39 07       	cpc	r19, r25
     a58:	74 f5       	brge	.+92     	; 0xab6 <loop+0xbc>
     a5a:	41 e0       	ldi	r20, 0x01	; 1
     a5c:	6c e0       	ldi	r22, 0x0C	; 12
     a5e:	88 e3       	ldi	r24, 0x38	; 56
     a60:	92 e0       	ldi	r25, 0x02	; 2
     a62:	b8 df       	rcall	.-144    	; 0x9d4 <_ZN4Test8WritePinE17arduinoPinNames_E11PinStatus_E>
     a64:	8c e2       	ldi	r24, 0x2C	; 44
     a66:	92 e0       	ldi	r25, 0x02	; 2
     a68:	99 df       	rcall	.-206    	; 0x99c <_ZN14CRotaryEncoder15GetEncoderLevelEv>
     a6a:	9f 93       	push	r25
     a6c:	8f 93       	push	r24
     a6e:	86 e1       	ldi	r24, 0x16	; 22
     a70:	91 e0       	ldi	r25, 0x01	; 1
     a72:	9f 93       	push	r25
     a74:	8f 93       	push	r24
     a76:	8e 01       	movw	r16, r28
     a78:	0f 5f       	subi	r16, 0xFF	; 255
     a7a:	1f 4f       	sbci	r17, 0xFF	; 255
     a7c:	1f 93       	push	r17
     a7e:	0f 93       	push	r16
     a80:	c9 d4       	rcall	.+2450   	; 0x1414 <sprintf>
     a82:	f8 01       	movw	r30, r16
     a84:	01 90       	ld	r0, Z+
     a86:	00 20       	and	r0, r0
     a88:	e9 f7       	brne	.-6      	; 0xa84 <loop+0x8a>
     a8a:	31 97       	sbiw	r30, 0x01	; 1
     a8c:	af 01       	movw	r20, r30
     a8e:	40 1b       	sub	r20, r16
     a90:	51 0b       	sbc	r21, r17
     a92:	e0 91 39 02 	lds	r30, 0x0239
     a96:	f0 91 3a 02 	lds	r31, 0x023A
     a9a:	02 80       	ldd	r0, Z+2	; 0x02
     a9c:	f3 81       	ldd	r31, Z+3	; 0x03
     a9e:	e0 2d       	mov	r30, r0
     aa0:	b8 01       	movw	r22, r16
     aa2:	89 e3       	ldi	r24, 0x39	; 57
     aa4:	92 e0       	ldi	r25, 0x02	; 2
     aa6:	09 95       	icall
     aa8:	0f 90       	pop	r0
     aaa:	0f 90       	pop	r0
     aac:	0f 90       	pop	r0
     aae:	0f 90       	pop	r0
     ab0:	0f 90       	pop	r0
     ab2:	0f 90       	pop	r0
     ab4:	3b c0       	rjmp	.+118    	; 0xb2c <loop+0x132>
     ab6:	82 17       	cp	r24, r18
     ab8:	93 07       	cpc	r25, r19
     aba:	74 f5       	brge	.+92     	; 0xb18 <loop+0x11e>
     abc:	41 e0       	ldi	r20, 0x01	; 1
     abe:	6b e0       	ldi	r22, 0x0B	; 11
     ac0:	88 e3       	ldi	r24, 0x38	; 56
     ac2:	92 e0       	ldi	r25, 0x02	; 2
     ac4:	87 df       	rcall	.-242    	; 0x9d4 <_ZN4Test8WritePinE17arduinoPinNames_E11PinStatus_E>
     ac6:	8c e2       	ldi	r24, 0x2C	; 44
     ac8:	92 e0       	ldi	r25, 0x02	; 2
     aca:	68 df       	rcall	.-304    	; 0x99c <_ZN14CRotaryEncoder15GetEncoderLevelEv>
     acc:	9f 93       	push	r25
     ace:	8f 93       	push	r24
     ad0:	85 e2       	ldi	r24, 0x25	; 37
     ad2:	91 e0       	ldi	r25, 0x01	; 1
     ad4:	9f 93       	push	r25
     ad6:	8f 93       	push	r24
     ad8:	8e 01       	movw	r16, r28
     ada:	0f 5f       	subi	r16, 0xFF	; 255
     adc:	1f 4f       	sbci	r17, 0xFF	; 255
     ade:	1f 93       	push	r17
     ae0:	0f 93       	push	r16
     ae2:	98 d4       	rcall	.+2352   	; 0x1414 <sprintf>
     ae4:	f8 01       	movw	r30, r16
     ae6:	01 90       	ld	r0, Z+
     ae8:	00 20       	and	r0, r0
     aea:	e9 f7       	brne	.-6      	; 0xae6 <loop+0xec>
     aec:	31 97       	sbiw	r30, 0x01	; 1
     aee:	af 01       	movw	r20, r30
     af0:	40 1b       	sub	r20, r16
     af2:	51 0b       	sbc	r21, r17
     af4:	e0 91 39 02 	lds	r30, 0x0239
     af8:	f0 91 3a 02 	lds	r31, 0x023A
     afc:	02 80       	ldd	r0, Z+2	; 0x02
     afe:	f3 81       	ldd	r31, Z+3	; 0x03
     b00:	e0 2d       	mov	r30, r0
     b02:	b8 01       	movw	r22, r16
     b04:	89 e3       	ldi	r24, 0x39	; 57
     b06:	92 e0       	ldi	r25, 0x02	; 2
     b08:	09 95       	icall
     b0a:	0f 90       	pop	r0
     b0c:	0f 90       	pop	r0
     b0e:	0f 90       	pop	r0
     b10:	0f 90       	pop	r0
     b12:	0f 90       	pop	r0
     b14:	0f 90       	pop	r0
     b16:	0a c0       	rjmp	.+20     	; 0xb2c <loop+0x132>
     b18:	40 e0       	ldi	r20, 0x00	; 0
     b1a:	6c e0       	ldi	r22, 0x0C	; 12
     b1c:	88 e3       	ldi	r24, 0x38	; 56
     b1e:	92 e0       	ldi	r25, 0x02	; 2
     b20:	59 df       	rcall	.-334    	; 0x9d4 <_ZN4Test8WritePinE17arduinoPinNames_E11PinStatus_E>
     b22:	40 e0       	ldi	r20, 0x00	; 0
     b24:	6b e0       	ldi	r22, 0x0B	; 11
     b26:	88 e3       	ldi	r24, 0x38	; 56
     b28:	92 e0       	ldi	r25, 0x02	; 2
     b2a:	54 df       	rcall	.-344    	; 0x9d4 <_ZN4Test8WritePinE17arduinoPinNames_E11PinStatus_E>
     b2c:	80 91 00 01 	lds	r24, 0x0100
     b30:	90 91 01 01 	lds	r25, 0x0101
     b34:	90 93 03 01 	sts	0x0103, r25
     b38:	80 93 02 01 	sts	0x0102, r24
     b3c:	a6 96       	adiw	r28, 0x26	; 38
     b3e:	0f b6       	in	r0, 0x3f	; 63
     b40:	f8 94       	cli
     b42:	de bf       	out	0x3e, r29	; 62
     b44:	0f be       	out	0x3f, r0	; 63
     b46:	cd bf       	out	0x3d, r28	; 61
     b48:	df 91       	pop	r29
     b4a:	cf 91       	pop	r28
     b4c:	1f 91       	pop	r17
     b4e:	0f 91       	pop	r16
     b50:	08 95       	ret

00000b52 <_GLOBAL__sub_I_MESSAGE>:
     b52:	88 e3       	ldi	r24, 0x38	; 56
     b54:	92 e0       	ldi	r25, 0x02	; 2
     b56:	04 de       	rcall	.-1016   	; 0x760 <_ZN17CArduinoProcessorC1Ev>
 //Local function prototypes

//Global variables
Test Tyler;
//CSerialIO RS232;
CButton Button1(Pb2);
     b58:	6a e0       	ldi	r22, 0x0A	; 10
     b5a:	83 e3       	ldi	r24, 0x33	; 51
     b5c:	92 e0       	ldi	r25, 0x02	; 2
     b5e:	02 de       	rcall	.-1020   	; 0x764 <_ZN7CButtonC1E17arduinoPinNames_E>
CRotaryEncoder Encoder1(Pb1, Pb0);
     b60:	48 e0       	ldi	r20, 0x08	; 8
     b62:	69 e0       	ldi	r22, 0x09	; 9
     b64:	8c e2       	ldi	r24, 0x2C	; 44
     b66:	92 e0       	ldi	r25, 0x02	; 2
     b68:	3e ce       	rjmp	.-900    	; 0x7e6 <_ZN14CRotaryEncoderC1E17arduinoPinNames_ES0_>

00000b6a <_Z12GetBuildDatePvj>:
static const char BUILD_DATE[] PROGMEM = "2014-07-06 02-58-PM"; 
#endif 
 
/* Return the header message */  
void GetBuildDate( void *buffer, size_t bufferSize )  
{   
     b6a:	46 2f       	mov	r20, r22
     b6c:	57 2f       	mov	r21, r23
#if defined(BUILDINFO_RAM) 
	memcpy( buffer, BUILD_DATE, bufferSize ); 
     b6e:	26 e4       	ldi	r18, 0x46	; 70
     b70:	31 e0       	ldi	r19, 0x01	; 1
     b72:	62 2f       	mov	r22, r18
     b74:	73 2f       	mov	r23, r19
     b76:	45 c4       	rjmp	.+2186   	; 0x1402 <memcpy>

00000b78 <_Z10GetFreeRamv>:
#ifndef Arduino_h
#include <Arduino.h>
#endif

int GetFreeRam ()
{
     b78:	cf 93       	push	r28
     b7a:	df 93       	push	r29
     b7c:	00 d0       	rcall	.+0      	; 0xb7e <_Z10GetFreeRamv+0x6>
     b7e:	cd b7       	in	r28, 0x3d	; 61
     b80:	de b7       	in	r29, 0x3e	; 62
	extern int __heap_start, *__brkval;
	int v;
	return (int) &v - (__brkval == 0 ? (int) &__heap_start : (int) __brkval);
     b82:	80 91 04 01 	lds	r24, 0x0104
     b86:	90 91 05 01 	lds	r25, 0x0105
     b8a:	00 97       	sbiw	r24, 0x00	; 0
     b8c:	11 f4       	brne	.+4      	; 0xb92 <_Z10GetFreeRamv+0x1a>
     b8e:	8c ee       	ldi	r24, 0xEC	; 236
     b90:	92 e0       	ldi	r25, 0x02	; 2
     b92:	9e 01       	movw	r18, r28
     b94:	2f 5f       	subi	r18, 0xFF	; 255
     b96:	3f 4f       	sbci	r19, 0xFF	; 255
     b98:	28 1b       	sub	r18, r24
     b9a:	39 0b       	sbc	r19, r25
}
     b9c:	82 2f       	mov	r24, r18
     b9e:	93 2f       	mov	r25, r19
     ba0:	0f 90       	pop	r0
     ba2:	0f 90       	pop	r0
     ba4:	df 91       	pop	r29
     ba6:	cf 91       	pop	r28
     ba8:	08 95       	ret

00000baa <_Z13ShowBuildInfov>:

void ShowBuildInfo()
{
     baa:	cf 93       	push	r28
     bac:	df 93       	push	r29
     bae:	cd b7       	in	r28, 0x3d	; 61
     bb0:	de b7       	in	r29, 0x3e	; 62
     bb2:	64 97       	sbiw	r28, 0x14	; 20
     bb4:	0f b6       	in	r0, 0x3f	; 63
     bb6:	f8 94       	cli
     bb8:	de bf       	out	0x3e, r29	; 62
     bba:	0f be       	out	0x3f, r0	; 63
     bbc:	cd bf       	out	0x3d, r28	; 61
	char buffer[HeaderMsgSize];
	GetBuildDate((void*)&buffer,sizeof(buffer));
     bbe:	64 e1       	ldi	r22, 0x14	; 20
     bc0:	70 e0       	ldi	r23, 0x00	; 0
     bc2:	ce 01       	movw	r24, r28
     bc4:	01 96       	adiw	r24, 0x01	; 1
     bc6:	d1 df       	rcall	.-94     	; 0xb6a <_Z12GetBuildDatePvj>
	Serial.print("Date:");
     bc8:	6a e5       	ldi	r22, 0x5A	; 90
     bca:	71 e0       	ldi	r23, 0x01	; 1
     bcc:	89 e3       	ldi	r24, 0x39	; 57
     bce:	92 e0       	ldi	r25, 0x02	; 2
     bd0:	61 d2       	rcall	.+1218   	; 0x1094 <_ZN5Print5printEPKc>
	Serial.println((char*)&buffer);
     bd2:	be 01       	movw	r22, r28
     bd4:	6f 5f       	subi	r22, 0xFF	; 255
     bd6:	7f 4f       	sbci	r23, 0xFF	; 255
     bd8:	89 e3       	ldi	r24, 0x39	; 57
     bda:	92 e0       	ldi	r25, 0x02	; 2
     bdc:	77 d2       	rcall	.+1262   	; 0x10cc <_ZN5Print7printlnEPKc>
	Serial.print("Build:");
     bde:	60 e6       	ldi	r22, 0x60	; 96
     be0:	71 e0       	ldi	r23, 0x01	; 1
     be2:	89 e3       	ldi	r24, 0x39	; 57
     be4:	92 e0       	ldi	r25, 0x02	; 2
     be6:	56 d2       	rcall	.+1196   	; 0x1094 <_ZN5Print5printEPKc>
	Serial.println(GetBuildNumber());
     be8:	1e d0       	rcall	.+60     	; 0xc26 <_Z14GetBuildNumberv>
     bea:	4a e0       	ldi	r20, 0x0A	; 10
     bec:	50 e0       	ldi	r21, 0x00	; 0
     bee:	bc 01       	movw	r22, r24
     bf0:	89 e3       	ldi	r24, 0x39	; 57
     bf2:	92 e0       	ldi	r25, 0x02	; 2
     bf4:	e3 d2       	rcall	.+1478   	; 0x11bc <_ZN5Print7printlnEji>
	Serial.print("Free RAM (B):");
     bf6:	67 e6       	ldi	r22, 0x67	; 103
     bf8:	71 e0       	ldi	r23, 0x01	; 1
     bfa:	89 e3       	ldi	r24, 0x39	; 57
     bfc:	92 e0       	ldi	r25, 0x02	; 2
     bfe:	4a d2       	rcall	.+1172   	; 0x1094 <_ZN5Print5printEPKc>
	Serial.println( GetFreeRam());
     c00:	bb df       	rcall	.-138    	; 0xb78 <_Z10GetFreeRamv>
     c02:	4a e0       	ldi	r20, 0x0A	; 10
     c04:	50 e0       	ldi	r21, 0x00	; 0
     c06:	bc 01       	movw	r22, r24
     c08:	89 e3       	ldi	r24, 0x39	; 57
     c0a:	92 e0       	ldi	r25, 0x02	; 2
     c0c:	35 d3       	rcall	.+1642   	; 0x1278 <_ZN5Print7printlnEii>
	Serial.println();
     c0e:	89 e3       	ldi	r24, 0x39	; 57
     c10:	92 e0       	ldi	r25, 0x02	; 2
     c12:	48 d2       	rcall	.+1168   	; 0x10a4 <_ZN5Print7printlnEv>
     c14:	64 96       	adiw	r28, 0x14	; 20
     c16:	0f b6       	in	r0, 0x3f	; 63
     c18:	f8 94       	cli
     c1a:	de bf       	out	0x3e, r29	; 62
     c1c:	0f be       	out	0x3f, r0	; 63
     c1e:	cd bf       	out	0x3d, r28	; 61
     c20:	df 91       	pop	r29
     c22:	cf 91       	pop	r28
     c24:	08 95       	ret

00000c26 <_Z14GetBuildNumberv>:
    val = eeprom_read_word( &BUILD_NUMBER ); 
#elif defined(BUILDINFO_PROGMEM) 
    val = pgm_read_word(&BUILD_NUMBER); 
#endif 
    return val; 
} 
     c26:	87 e2       	ldi	r24, 0x27	; 39
     c28:	90 e0       	ldi	r25, 0x00	; 0
     c2a:	08 95       	ret

00000c2c <_ZN14HardwareSerial9availableEv>:
     c2c:	fc 01       	movw	r30, r24
     c2e:	84 85       	ldd	r24, Z+12	; 0x0c
     c30:	95 85       	ldd	r25, Z+13	; 0x0d
     c32:	fc 01       	movw	r30, r24
     c34:	e0 5c       	subi	r30, 0xC0	; 192
     c36:	ff 4f       	sbci	r31, 0xFF	; 255
     c38:	20 81       	ld	r18, Z
     c3a:	31 81       	ldd	r19, Z+1	; 0x01
     c3c:	fc 01       	movw	r30, r24
     c3e:	ee 5b       	subi	r30, 0xBE	; 190
     c40:	ff 4f       	sbci	r31, 0xFF	; 255
     c42:	80 81       	ld	r24, Z
     c44:	91 81       	ldd	r25, Z+1	; 0x01
     c46:	28 1b       	sub	r18, r24
     c48:	39 0b       	sbc	r19, r25
     c4a:	2f 73       	andi	r18, 0x3F	; 63
     c4c:	33 27       	eor	r19, r19
     c4e:	c9 01       	movw	r24, r18
     c50:	08 95       	ret

00000c52 <_ZN14HardwareSerial4peekEv>:
     c52:	fc 01       	movw	r30, r24
     c54:	84 85       	ldd	r24, Z+12	; 0x0c
     c56:	95 85       	ldd	r25, Z+13	; 0x0d
     c58:	fc 01       	movw	r30, r24
     c5a:	e0 5c       	subi	r30, 0xC0	; 192
     c5c:	ff 4f       	sbci	r31, 0xFF	; 255
     c5e:	40 81       	ld	r20, Z
     c60:	51 81       	ldd	r21, Z+1	; 0x01
     c62:	fc 01       	movw	r30, r24
     c64:	ee 5b       	subi	r30, 0xBE	; 190
     c66:	ff 4f       	sbci	r31, 0xFF	; 255
     c68:	20 81       	ld	r18, Z
     c6a:	31 81       	ldd	r19, Z+1	; 0x01
     c6c:	42 17       	cp	r20, r18
     c6e:	53 07       	cpc	r21, r19
     c70:	41 f0       	breq	.+16     	; 0xc82 <_ZN14HardwareSerial4peekEv+0x30>
     c72:	01 90       	ld	r0, Z+
     c74:	f0 81       	ld	r31, Z
     c76:	e0 2d       	mov	r30, r0
     c78:	e8 0f       	add	r30, r24
     c7a:	f9 1f       	adc	r31, r25
     c7c:	20 81       	ld	r18, Z
     c7e:	30 e0       	ldi	r19, 0x00	; 0
     c80:	02 c0       	rjmp	.+4      	; 0xc86 <_ZN14HardwareSerial4peekEv+0x34>
     c82:	2f ef       	ldi	r18, 0xFF	; 255
     c84:	3f ef       	ldi	r19, 0xFF	; 255
     c86:	c9 01       	movw	r24, r18
     c88:	08 95       	ret

00000c8a <_ZN14HardwareSerial4readEv>:
     c8a:	fc 01       	movw	r30, r24
     c8c:	84 85       	ldd	r24, Z+12	; 0x0c
     c8e:	95 85       	ldd	r25, Z+13	; 0x0d
     c90:	fc 01       	movw	r30, r24
     c92:	e0 5c       	subi	r30, 0xC0	; 192
     c94:	ff 4f       	sbci	r31, 0xFF	; 255
     c96:	40 81       	ld	r20, Z
     c98:	51 81       	ldd	r21, Z+1	; 0x01
     c9a:	fc 01       	movw	r30, r24
     c9c:	ee 5b       	subi	r30, 0xBE	; 190
     c9e:	ff 4f       	sbci	r31, 0xFF	; 255
     ca0:	20 81       	ld	r18, Z
     ca2:	31 81       	ldd	r19, Z+1	; 0x01
     ca4:	42 17       	cp	r20, r18
     ca6:	53 07       	cpc	r21, r19
     ca8:	81 f0       	breq	.+32     	; 0xcca <_ZN14HardwareSerial4readEv+0x40>
     caa:	a0 81       	ld	r26, Z
     cac:	b1 81       	ldd	r27, Z+1	; 0x01
     cae:	a8 0f       	add	r26, r24
     cb0:	b9 1f       	adc	r27, r25
     cb2:	8c 91       	ld	r24, X
     cb4:	20 81       	ld	r18, Z
     cb6:	31 81       	ldd	r19, Z+1	; 0x01
     cb8:	2f 5f       	subi	r18, 0xFF	; 255
     cba:	3f 4f       	sbci	r19, 0xFF	; 255
     cbc:	2f 73       	andi	r18, 0x3F	; 63
     cbe:	33 27       	eor	r19, r19
     cc0:	31 83       	std	Z+1, r19	; 0x01
     cc2:	20 83       	st	Z, r18
     cc4:	28 2f       	mov	r18, r24
     cc6:	30 e0       	ldi	r19, 0x00	; 0
     cc8:	02 c0       	rjmp	.+4      	; 0xcce <_ZN14HardwareSerial4readEv+0x44>
     cca:	2f ef       	ldi	r18, 0xFF	; 255
     ccc:	3f ef       	ldi	r19, 0xFF	; 255
     cce:	c9 01       	movw	r24, r18
     cd0:	08 95       	ret

00000cd2 <_ZN14HardwareSerial5flushEv>:
     cd2:	fc 01       	movw	r30, r24
     cd4:	81 a1       	ldd	r24, Z+33	; 0x21
     cd6:	88 23       	and	r24, r24
     cd8:	29 f0       	breq	.+10     	; 0xce4 <_ZN14HardwareSerial5flushEv+0x12>
     cda:	a4 89       	ldd	r26, Z+20	; 0x14
     cdc:	b5 89       	ldd	r27, Z+21	; 0x15
     cde:	8c 91       	ld	r24, X
     ce0:	86 ff       	sbrs	r24, 6
     ce2:	fb cf       	rjmp	.-10     	; 0xcda <_ZN14HardwareSerial5flushEv+0x8>
     ce4:	11 a2       	std	Z+33, r1	; 0x21
     ce6:	08 95       	ret

00000ce8 <_ZN14HardwareSerial5writeEh>:
     ce8:	cf 93       	push	r28
     cea:	df 93       	push	r29
     cec:	fc 01       	movw	r30, r24
     cee:	26 85       	ldd	r18, Z+14	; 0x0e
     cf0:	37 85       	ldd	r19, Z+15	; 0x0f
     cf2:	d9 01       	movw	r26, r18
     cf4:	a0 5c       	subi	r26, 0xC0	; 192
     cf6:	bf 4f       	sbci	r27, 0xFF	; 255
     cf8:	8d 91       	ld	r24, X+
     cfa:	9c 91       	ld	r25, X
     cfc:	11 97       	sbiw	r26, 0x01	; 1
     cfe:	01 96       	adiw	r24, 0x01	; 1
     d00:	8f 73       	andi	r24, 0x3F	; 63
     d02:	99 27       	eor	r25, r25
     d04:	e9 01       	movw	r28, r18
     d06:	ce 5b       	subi	r28, 0xBE	; 190
     d08:	df 4f       	sbci	r29, 0xFF	; 255
     d0a:	48 81       	ld	r20, Y
     d0c:	59 81       	ldd	r21, Y+1	; 0x01
     d0e:	84 17       	cp	r24, r20
     d10:	95 07       	cpc	r25, r21
     d12:	d9 f3       	breq	.-10     	; 0xd0a <_ZN14HardwareSerial5writeEh+0x22>
     d14:	0d 90       	ld	r0, X+
     d16:	bc 91       	ld	r27, X
     d18:	a0 2d       	mov	r26, r0
     d1a:	a2 0f       	add	r26, r18
     d1c:	b3 1f       	adc	r27, r19
     d1e:	6c 93       	st	X, r22
     d20:	a6 85       	ldd	r26, Z+14	; 0x0e
     d22:	b7 85       	ldd	r27, Z+15	; 0x0f
     d24:	a0 5c       	subi	r26, 0xC0	; 192
     d26:	bf 4f       	sbci	r27, 0xFF	; 255
     d28:	11 96       	adiw	r26, 0x01	; 1
     d2a:	9c 93       	st	X, r25
     d2c:	8e 93       	st	-X, r24
     d2e:	a6 89       	ldd	r26, Z+22	; 0x16
     d30:	b7 89       	ldd	r27, Z+23	; 0x17
     d32:	2c 91       	ld	r18, X
     d34:	81 e0       	ldi	r24, 0x01	; 1
     d36:	90 e0       	ldi	r25, 0x00	; 0
     d38:	07 8c       	ldd	r0, Z+31	; 0x1f
     d3a:	02 c0       	rjmp	.+4      	; 0xd40 <_ZN14HardwareSerial5writeEh+0x58>
     d3c:	88 0f       	add	r24, r24
     d3e:	99 1f       	adc	r25, r25
     d40:	0a 94       	dec	r0
     d42:	e2 f7       	brpl	.-8      	; 0xd3c <_ZN14HardwareSerial5writeEh+0x54>
     d44:	28 2b       	or	r18, r24
     d46:	2c 93       	st	X, r18
     d48:	81 e0       	ldi	r24, 0x01	; 1
     d4a:	81 a3       	std	Z+33, r24	; 0x21
     d4c:	04 88       	ldd	r0, Z+20	; 0x14
     d4e:	f5 89       	ldd	r31, Z+21	; 0x15
     d50:	e0 2d       	mov	r30, r0
     d52:	80 81       	ld	r24, Z
     d54:	80 64       	ori	r24, 0x40	; 64
     d56:	80 83       	st	Z, r24
     d58:	81 e0       	ldi	r24, 0x01	; 1
     d5a:	90 e0       	ldi	r25, 0x00	; 0
     d5c:	df 91       	pop	r29
     d5e:	cf 91       	pop	r28
     d60:	08 95       	ret

00000d62 <_Z11serialEventv>:
     d62:	08 95       	ret

00000d64 <__vector_18>:
     d64:	1f 92       	push	r1
     d66:	0f 92       	push	r0
     d68:	0f b6       	in	r0, 0x3f	; 63
     d6a:	0f 92       	push	r0
     d6c:	11 24       	eor	r1, r1
     d6e:	2f 93       	push	r18
     d70:	3f 93       	push	r19
     d72:	4f 93       	push	r20
     d74:	8f 93       	push	r24
     d76:	9f 93       	push	r25
     d78:	ef 93       	push	r30
     d7a:	ff 93       	push	r31
     d7c:	80 91 c0 00 	lds	r24, 0x00C0
     d80:	82 fd       	sbrc	r24, 2
     d82:	1c c0       	rjmp	.+56     	; 0xdbc <__vector_18+0x58>
     d84:	40 91 c6 00 	lds	r20, 0x00C6
     d88:	80 91 df 02 	lds	r24, 0x02DF
     d8c:	90 91 e0 02 	lds	r25, 0x02E0
     d90:	01 96       	adiw	r24, 0x01	; 1
     d92:	8f 73       	andi	r24, 0x3F	; 63
     d94:	99 27       	eor	r25, r25
     d96:	20 91 e1 02 	lds	r18, 0x02E1
     d9a:	30 91 e2 02 	lds	r19, 0x02E2
     d9e:	82 17       	cp	r24, r18
     da0:	93 07       	cpc	r25, r19
     da2:	71 f0       	breq	.+28     	; 0xdc0 <__vector_18+0x5c>
     da4:	e0 91 df 02 	lds	r30, 0x02DF
     da8:	f0 91 e0 02 	lds	r31, 0x02E0
     dac:	e1 56       	subi	r30, 0x61	; 97
     dae:	fd 4f       	sbci	r31, 0xFD	; 253
     db0:	40 83       	st	Z, r20
     db2:	90 93 e0 02 	sts	0x02E0, r25
     db6:	80 93 df 02 	sts	0x02DF, r24
     dba:	02 c0       	rjmp	.+4      	; 0xdc0 <__vector_18+0x5c>
     dbc:	80 91 c6 00 	lds	r24, 0x00C6
     dc0:	ff 91       	pop	r31
     dc2:	ef 91       	pop	r30
     dc4:	9f 91       	pop	r25
     dc6:	8f 91       	pop	r24
     dc8:	4f 91       	pop	r20
     dca:	3f 91       	pop	r19
     dcc:	2f 91       	pop	r18
     dce:	0f 90       	pop	r0
     dd0:	0f be       	out	0x3f, r0	; 63
     dd2:	0f 90       	pop	r0
     dd4:	1f 90       	pop	r1
     dd6:	18 95       	reti

00000dd8 <_Z14serialEventRunv>:
     dd8:	89 e3       	ldi	r24, 0x39	; 57
     dda:	92 e0       	ldi	r25, 0x02	; 2
     ddc:	27 df       	rcall	.-434    	; 0xc2c <_ZN14HardwareSerial9availableEv>
     dde:	89 2b       	or	r24, r25
     de0:	09 f0       	breq	.+2      	; 0xde4 <_Z14serialEventRunv+0xc>
     de2:	bf cf       	rjmp	.-130    	; 0xd62 <_Z11serialEventv>
     de4:	08 95       	ret

00000de6 <__vector_19>:
     de6:	1f 92       	push	r1
     de8:	0f 92       	push	r0
     dea:	0f b6       	in	r0, 0x3f	; 63
     dec:	0f 92       	push	r0
     dee:	11 24       	eor	r1, r1
     df0:	2f 93       	push	r18
     df2:	3f 93       	push	r19
     df4:	8f 93       	push	r24
     df6:	9f 93       	push	r25
     df8:	ef 93       	push	r30
     dfa:	ff 93       	push	r31
     dfc:	20 91 9b 02 	lds	r18, 0x029B
     e00:	30 91 9c 02 	lds	r19, 0x029C
     e04:	80 91 9d 02 	lds	r24, 0x029D
     e08:	90 91 9e 02 	lds	r25, 0x029E
     e0c:	28 17       	cp	r18, r24
     e0e:	39 07       	cpc	r19, r25
     e10:	31 f4       	brne	.+12     	; 0xe1e <__vector_19+0x38>
     e12:	80 91 c1 00 	lds	r24, 0x00C1
     e16:	8f 7d       	andi	r24, 0xDF	; 223
     e18:	80 93 c1 00 	sts	0x00C1, r24
     e1c:	14 c0       	rjmp	.+40     	; 0xe46 <__vector_19+0x60>
     e1e:	e0 91 9d 02 	lds	r30, 0x029D
     e22:	f0 91 9e 02 	lds	r31, 0x029E
     e26:	e5 5a       	subi	r30, 0xA5	; 165
     e28:	fd 4f       	sbci	r31, 0xFD	; 253
     e2a:	20 81       	ld	r18, Z
     e2c:	80 91 9d 02 	lds	r24, 0x029D
     e30:	90 91 9e 02 	lds	r25, 0x029E
     e34:	01 96       	adiw	r24, 0x01	; 1
     e36:	8f 73       	andi	r24, 0x3F	; 63
     e38:	99 27       	eor	r25, r25
     e3a:	90 93 9e 02 	sts	0x029E, r25
     e3e:	80 93 9d 02 	sts	0x029D, r24
     e42:	20 93 c6 00 	sts	0x00C6, r18
     e46:	ff 91       	pop	r31
     e48:	ef 91       	pop	r30
     e4a:	9f 91       	pop	r25
     e4c:	8f 91       	pop	r24
     e4e:	3f 91       	pop	r19
     e50:	2f 91       	pop	r18
     e52:	0f 90       	pop	r0
     e54:	0f be       	out	0x3f, r0	; 63
     e56:	0f 90       	pop	r0
     e58:	1f 90       	pop	r1
     e5a:	18 95       	reti

00000e5c <_ZN14HardwareSerial5beginEm>:
     e5c:	cf 92       	push	r12
     e5e:	df 92       	push	r13
     e60:	ef 92       	push	r14
     e62:	ff 92       	push	r15
     e64:	cf 93       	push	r28
     e66:	df 93       	push	r29
     e68:	ec 01       	movw	r28, r24
     e6a:	6a 01       	movw	r12, r20
     e6c:	7b 01       	movw	r14, r22
     e6e:	41 15       	cp	r20, r1
     e70:	81 ee       	ldi	r24, 0xE1	; 225
     e72:	58 07       	cpc	r21, r24
     e74:	61 05       	cpc	r22, r1
     e76:	71 05       	cpc	r23, r1
     e78:	f1 f0       	breq	.+60     	; 0xeb6 <_ZN14HardwareSerial5beginEm+0x5a>
     e7a:	ec 89       	ldd	r30, Y+20	; 0x14
     e7c:	fd 89       	ldd	r31, Y+21	; 0x15
     e7e:	81 e0       	ldi	r24, 0x01	; 1
     e80:	90 e0       	ldi	r25, 0x00	; 0
     e82:	08 a0       	ldd	r0, Y+32	; 0x20
     e84:	02 c0       	rjmp	.+4      	; 0xe8a <_ZN14HardwareSerial5beginEm+0x2e>
     e86:	88 0f       	add	r24, r24
     e88:	99 1f       	adc	r25, r25
     e8a:	0a 94       	dec	r0
     e8c:	e2 f7       	brpl	.-8      	; 0xe86 <_ZN14HardwareSerial5beginEm+0x2a>
     e8e:	80 83       	st	Z, r24
     e90:	60 e0       	ldi	r22, 0x00	; 0
     e92:	79 e0       	ldi	r23, 0x09	; 9
     e94:	8d e3       	ldi	r24, 0x3D	; 61
     e96:	90 e0       	ldi	r25, 0x00	; 0
     e98:	a7 01       	movw	r20, r14
     e9a:	96 01       	movw	r18, r12
     e9c:	8a d2       	rcall	.+1300   	; 0x13b2 <__udivmodsi4>
     e9e:	21 50       	subi	r18, 0x01	; 1
     ea0:	31 09       	sbc	r19, r1
     ea2:	41 09       	sbc	r20, r1
     ea4:	51 09       	sbc	r21, r1
     ea6:	56 95       	lsr	r21
     ea8:	47 95       	ror	r20
     eaa:	37 95       	ror	r19
     eac:	27 95       	ror	r18
     eae:	21 15       	cp	r18, r1
     eb0:	80 e1       	ldi	r24, 0x10	; 16
     eb2:	38 07       	cpc	r19, r24
     eb4:	90 f0       	brcs	.+36     	; 0xeda <_ZN14HardwareSerial5beginEm+0x7e>
     eb6:	ec 89       	ldd	r30, Y+20	; 0x14
     eb8:	fd 89       	ldd	r31, Y+21	; 0x15
     eba:	10 82       	st	Z, r1
     ebc:	60 e8       	ldi	r22, 0x80	; 128
     ebe:	74 e8       	ldi	r23, 0x84	; 132
     ec0:	8e e1       	ldi	r24, 0x1E	; 30
     ec2:	90 e0       	ldi	r25, 0x00	; 0
     ec4:	a7 01       	movw	r20, r14
     ec6:	96 01       	movw	r18, r12
     ec8:	74 d2       	rcall	.+1256   	; 0x13b2 <__udivmodsi4>
     eca:	21 50       	subi	r18, 0x01	; 1
     ecc:	31 09       	sbc	r19, r1
     ece:	41 09       	sbc	r20, r1
     ed0:	51 09       	sbc	r21, r1
     ed2:	56 95       	lsr	r21
     ed4:	47 95       	ror	r20
     ed6:	37 95       	ror	r19
     ed8:	27 95       	ror	r18
     eda:	e8 89       	ldd	r30, Y+16	; 0x10
     edc:	f9 89       	ldd	r31, Y+17	; 0x11
     ede:	30 83       	st	Z, r19
     ee0:	ea 89       	ldd	r30, Y+18	; 0x12
     ee2:	fb 89       	ldd	r31, Y+19	; 0x13
     ee4:	20 83       	st	Z, r18
     ee6:	19 a2       	std	Y+33, r1	; 0x21
     ee8:	ee 89       	ldd	r30, Y+22	; 0x16
     eea:	ff 89       	ldd	r31, Y+23	; 0x17
     eec:	40 81       	ld	r20, Z
     eee:	81 e0       	ldi	r24, 0x01	; 1
     ef0:	90 e0       	ldi	r25, 0x00	; 0
     ef2:	9c 01       	movw	r18, r24
     ef4:	0c 8c       	ldd	r0, Y+28	; 0x1c
     ef6:	02 c0       	rjmp	.+4      	; 0xefc <_ZN14HardwareSerial5beginEm+0xa0>
     ef8:	22 0f       	add	r18, r18
     efa:	33 1f       	adc	r19, r19
     efc:	0a 94       	dec	r0
     efe:	e2 f7       	brpl	.-8      	; 0xef8 <_ZN14HardwareSerial5beginEm+0x9c>
     f00:	42 2b       	or	r20, r18
     f02:	40 83       	st	Z, r20
     f04:	ee 89       	ldd	r30, Y+22	; 0x16
     f06:	ff 89       	ldd	r31, Y+23	; 0x17
     f08:	40 81       	ld	r20, Z
     f0a:	9c 01       	movw	r18, r24
     f0c:	0d 8c       	ldd	r0, Y+29	; 0x1d
     f0e:	02 c0       	rjmp	.+4      	; 0xf14 <_ZN14HardwareSerial5beginEm+0xb8>
     f10:	22 0f       	add	r18, r18
     f12:	33 1f       	adc	r19, r19
     f14:	0a 94       	dec	r0
     f16:	e2 f7       	brpl	.-8      	; 0xf10 <_ZN14HardwareSerial5beginEm+0xb4>
     f18:	42 2b       	or	r20, r18
     f1a:	40 83       	st	Z, r20
     f1c:	ee 89       	ldd	r30, Y+22	; 0x16
     f1e:	ff 89       	ldd	r31, Y+23	; 0x17
     f20:	40 81       	ld	r20, Z
     f22:	9c 01       	movw	r18, r24
     f24:	0e 8c       	ldd	r0, Y+30	; 0x1e
     f26:	02 c0       	rjmp	.+4      	; 0xf2c <_ZN14HardwareSerial5beginEm+0xd0>
     f28:	22 0f       	add	r18, r18
     f2a:	33 1f       	adc	r19, r19
     f2c:	0a 94       	dec	r0
     f2e:	e2 f7       	brpl	.-8      	; 0xf28 <_ZN14HardwareSerial5beginEm+0xcc>
     f30:	42 2b       	or	r20, r18
     f32:	40 83       	st	Z, r20
     f34:	ee 89       	ldd	r30, Y+22	; 0x16
     f36:	ff 89       	ldd	r31, Y+23	; 0x17
     f38:	20 81       	ld	r18, Z
     f3a:	0f 8c       	ldd	r0, Y+31	; 0x1f
     f3c:	02 c0       	rjmp	.+4      	; 0xf42 <_ZN14HardwareSerial5beginEm+0xe6>
     f3e:	88 0f       	add	r24, r24
     f40:	99 1f       	adc	r25, r25
     f42:	0a 94       	dec	r0
     f44:	e2 f7       	brpl	.-8      	; 0xf3e <_ZN14HardwareSerial5beginEm+0xe2>
     f46:	80 95       	com	r24
     f48:	82 23       	and	r24, r18
     f4a:	80 83       	st	Z, r24
     f4c:	df 91       	pop	r29
     f4e:	cf 91       	pop	r28
     f50:	ff 90       	pop	r15
     f52:	ef 90       	pop	r14
     f54:	df 90       	pop	r13
     f56:	cf 90       	pop	r12
     f58:	08 95       	ret

00000f5a <_GLOBAL__sub_I_rx_buffer>:
     f5a:	10 92 3c 02 	sts	0x023C, r1
     f5e:	10 92 3b 02 	sts	0x023B, r1
     f62:	88 ee       	ldi	r24, 0xE8	; 232
     f64:	93 e0       	ldi	r25, 0x03	; 3
     f66:	a0 e0       	ldi	r26, 0x00	; 0
     f68:	b0 e0       	ldi	r27, 0x00	; 0
     f6a:	80 93 3d 02 	sts	0x023D, r24
     f6e:	90 93 3e 02 	sts	0x023E, r25
     f72:	a0 93 3f 02 	sts	0x023F, r26
     f76:	b0 93 40 02 	sts	0x0240, r27
     f7a:	89 e7       	ldi	r24, 0x79	; 121
     f7c:	91 e0       	ldi	r25, 0x01	; 1
     f7e:	90 93 3a 02 	sts	0x023A, r25
     f82:	80 93 39 02 	sts	0x0239, r24
     f86:	8f e9       	ldi	r24, 0x9F	; 159
     f88:	92 e0       	ldi	r25, 0x02	; 2
     f8a:	90 93 46 02 	sts	0x0246, r25
     f8e:	80 93 45 02 	sts	0x0245, r24
     f92:	8b e5       	ldi	r24, 0x5B	; 91
     f94:	92 e0       	ldi	r25, 0x02	; 2
     f96:	90 93 48 02 	sts	0x0248, r25
     f9a:	80 93 47 02 	sts	0x0247, r24
     f9e:	85 ec       	ldi	r24, 0xC5	; 197
     fa0:	90 e0       	ldi	r25, 0x00	; 0
     fa2:	90 93 4a 02 	sts	0x024A, r25
     fa6:	80 93 49 02 	sts	0x0249, r24
     faa:	84 ec       	ldi	r24, 0xC4	; 196
     fac:	90 e0       	ldi	r25, 0x00	; 0
     fae:	90 93 4c 02 	sts	0x024C, r25
     fb2:	80 93 4b 02 	sts	0x024B, r24
     fb6:	80 ec       	ldi	r24, 0xC0	; 192
     fb8:	90 e0       	ldi	r25, 0x00	; 0
     fba:	90 93 4e 02 	sts	0x024E, r25
     fbe:	80 93 4d 02 	sts	0x024D, r24
     fc2:	81 ec       	ldi	r24, 0xC1	; 193
     fc4:	90 e0       	ldi	r25, 0x00	; 0
     fc6:	90 93 50 02 	sts	0x0250, r25
     fca:	80 93 4f 02 	sts	0x024F, r24
     fce:	82 ec       	ldi	r24, 0xC2	; 194
     fd0:	90 e0       	ldi	r25, 0x00	; 0
     fd2:	90 93 52 02 	sts	0x0252, r25
     fd6:	80 93 51 02 	sts	0x0251, r24
     fda:	86 ec       	ldi	r24, 0xC6	; 198
     fdc:	90 e0       	ldi	r25, 0x00	; 0
     fde:	90 93 54 02 	sts	0x0254, r25
     fe2:	80 93 53 02 	sts	0x0253, r24
     fe6:	84 e0       	ldi	r24, 0x04	; 4
     fe8:	80 93 55 02 	sts	0x0255, r24
     fec:	83 e0       	ldi	r24, 0x03	; 3
     fee:	80 93 56 02 	sts	0x0256, r24
     ff2:	87 e0       	ldi	r24, 0x07	; 7
     ff4:	80 93 57 02 	sts	0x0257, r24
     ff8:	85 e0       	ldi	r24, 0x05	; 5
     ffa:	80 93 58 02 	sts	0x0258, r24
     ffe:	81 e0       	ldi	r24, 0x01	; 1
    1000:	80 93 59 02 	sts	0x0259, r24
    1004:	08 95       	ret

00001006 <main>:
    1006:	9a d1       	rcall	.+820    	; 0x133c <init>
    1008:	d1 dc       	rcall	.-1630   	; 0x9ac <setup>
    100a:	cc ee       	ldi	r28, 0xEC	; 236
    100c:	d6 e0       	ldi	r29, 0x06	; 6
    100e:	f5 dc       	rcall	.-1558   	; 0x9fa <loop>
    1010:	20 97       	sbiw	r28, 0x00	; 0
    1012:	e9 f3       	breq	.-6      	; 0x100e <main+0x8>
    1014:	e1 de       	rcall	.-574    	; 0xdd8 <_Z14serialEventRunv>
    1016:	fb cf       	rjmp	.-10     	; 0x100e <main+0x8>

00001018 <_ZN5Print5writeEPKhj>:
    1018:	cf 92       	push	r12
    101a:	df 92       	push	r13
    101c:	ef 92       	push	r14
    101e:	ff 92       	push	r15
    1020:	0f 93       	push	r16
    1022:	1f 93       	push	r17
    1024:	cf 93       	push	r28
    1026:	df 93       	push	r29
    1028:	6c 01       	movw	r12, r24
    102a:	eb 01       	movw	r28, r22
    102c:	7a 01       	movw	r14, r20
    102e:	e6 0e       	add	r14, r22
    1030:	f7 1e       	adc	r15, r23
    1032:	00 e0       	ldi	r16, 0x00	; 0
    1034:	10 e0       	ldi	r17, 0x00	; 0
    1036:	0b c0       	rjmp	.+22     	; 0x104e <_ZN5Print5writeEPKhj+0x36>
    1038:	69 91       	ld	r22, Y+
    103a:	d6 01       	movw	r26, r12
    103c:	ed 91       	ld	r30, X+
    103e:	fc 91       	ld	r31, X
    1040:	01 90       	ld	r0, Z+
    1042:	f0 81       	ld	r31, Z
    1044:	e0 2d       	mov	r30, r0
    1046:	c6 01       	movw	r24, r12
    1048:	09 95       	icall
    104a:	08 0f       	add	r16, r24
    104c:	19 1f       	adc	r17, r25
    104e:	ce 15       	cp	r28, r14
    1050:	df 05       	cpc	r29, r15
    1052:	91 f7       	brne	.-28     	; 0x1038 <_ZN5Print5writeEPKhj+0x20>
    1054:	c8 01       	movw	r24, r16
    1056:	df 91       	pop	r29
    1058:	cf 91       	pop	r28
    105a:	1f 91       	pop	r17
    105c:	0f 91       	pop	r16
    105e:	ff 90       	pop	r15
    1060:	ef 90       	pop	r14
    1062:	df 90       	pop	r13
    1064:	cf 90       	pop	r12
    1066:	08 95       	ret

00001068 <_ZN5Print5writeEPKc>:
    1068:	61 15       	cp	r22, r1
    106a:	71 05       	cpc	r23, r1
    106c:	81 f0       	breq	.+32     	; 0x108e <_ZN5Print5writeEPKc+0x26>
    106e:	db 01       	movw	r26, r22
    1070:	0d 90       	ld	r0, X+
    1072:	00 20       	and	r0, r0
    1074:	e9 f7       	brne	.-6      	; 0x1070 <_ZN5Print5writeEPKc+0x8>
    1076:	ad 01       	movw	r20, r26
    1078:	41 50       	subi	r20, 0x01	; 1
    107a:	51 09       	sbc	r21, r1
    107c:	46 1b       	sub	r20, r22
    107e:	57 0b       	sbc	r21, r23
    1080:	dc 01       	movw	r26, r24
    1082:	ed 91       	ld	r30, X+
    1084:	fc 91       	ld	r31, X
    1086:	02 80       	ldd	r0, Z+2	; 0x02
    1088:	f3 81       	ldd	r31, Z+3	; 0x03
    108a:	e0 2d       	mov	r30, r0
    108c:	09 94       	ijmp
    108e:	80 e0       	ldi	r24, 0x00	; 0
    1090:	90 e0       	ldi	r25, 0x00	; 0
    1092:	08 95       	ret

00001094 <_ZN5Print5printEPKc>:
    1094:	e9 cf       	rjmp	.-46     	; 0x1068 <_ZN5Print5writeEPKc>

00001096 <_ZN5Print5printEc>:
    1096:	dc 01       	movw	r26, r24
    1098:	ed 91       	ld	r30, X+
    109a:	fc 91       	ld	r31, X
    109c:	01 90       	ld	r0, Z+
    109e:	f0 81       	ld	r31, Z
    10a0:	e0 2d       	mov	r30, r0
    10a2:	09 94       	ijmp

000010a4 <_ZN5Print7printlnEv>:
    10a4:	0f 93       	push	r16
    10a6:	1f 93       	push	r17
    10a8:	cf 93       	push	r28
    10aa:	df 93       	push	r29
    10ac:	ec 01       	movw	r28, r24
    10ae:	6d e0       	ldi	r22, 0x0D	; 13
    10b0:	f2 df       	rcall	.-28     	; 0x1096 <_ZN5Print5printEc>
    10b2:	8c 01       	movw	r16, r24
    10b4:	6a e0       	ldi	r22, 0x0A	; 10
    10b6:	ce 01       	movw	r24, r28
    10b8:	ee df       	rcall	.-36     	; 0x1096 <_ZN5Print5printEc>
    10ba:	9c 01       	movw	r18, r24
    10bc:	20 0f       	add	r18, r16
    10be:	31 1f       	adc	r19, r17
    10c0:	c9 01       	movw	r24, r18
    10c2:	df 91       	pop	r29
    10c4:	cf 91       	pop	r28
    10c6:	1f 91       	pop	r17
    10c8:	0f 91       	pop	r16
    10ca:	08 95       	ret

000010cc <_ZN5Print7printlnEPKc>:
    10cc:	0f 93       	push	r16
    10ce:	1f 93       	push	r17
    10d0:	cf 93       	push	r28
    10d2:	df 93       	push	r29
    10d4:	ec 01       	movw	r28, r24
    10d6:	c8 df       	rcall	.-112    	; 0x1068 <_ZN5Print5writeEPKc>
    10d8:	8c 01       	movw	r16, r24
    10da:	ce 01       	movw	r24, r28
    10dc:	e3 df       	rcall	.-58     	; 0x10a4 <_ZN5Print7printlnEv>
    10de:	98 01       	movw	r18, r16
    10e0:	28 0f       	add	r18, r24
    10e2:	39 1f       	adc	r19, r25
    10e4:	c9 01       	movw	r24, r18
    10e6:	df 91       	pop	r29
    10e8:	cf 91       	pop	r28
    10ea:	1f 91       	pop	r17
    10ec:	0f 91       	pop	r16
    10ee:	08 95       	ret

000010f0 <_ZN5Print11printNumberEmh>:
    10f0:	4f 92       	push	r4
    10f2:	5f 92       	push	r5
    10f4:	6f 92       	push	r6
    10f6:	7f 92       	push	r7
    10f8:	9f 92       	push	r9
    10fa:	af 92       	push	r10
    10fc:	bf 92       	push	r11
    10fe:	cf 92       	push	r12
    1100:	df 92       	push	r13
    1102:	ef 92       	push	r14
    1104:	ff 92       	push	r15
    1106:	0f 93       	push	r16
    1108:	1f 93       	push	r17
    110a:	cf 93       	push	r28
    110c:	df 93       	push	r29
    110e:	cd b7       	in	r28, 0x3d	; 61
    1110:	de b7       	in	r29, 0x3e	; 62
    1112:	a1 97       	sbiw	r28, 0x21	; 33
    1114:	0f b6       	in	r0, 0x3f	; 63
    1116:	f8 94       	cli
    1118:	de bf       	out	0x3e, r29	; 62
    111a:	0f be       	out	0x3f, r0	; 63
    111c:	cd bf       	out	0x3d, r28	; 61
    111e:	5c 01       	movw	r10, r24
    1120:	6a 01       	movw	r12, r20
    1122:	7b 01       	movw	r14, r22
    1124:	92 2e       	mov	r9, r18
    1126:	19 a2       	std	Y+33, r1	; 0x21
    1128:	81 e0       	ldi	r24, 0x01	; 1
    112a:	82 17       	cp	r24, r18
    112c:	10 f0       	brcs	.+4      	; 0x1132 <_ZN5Print11printNumberEmh+0x42>
    112e:	8a e0       	ldi	r24, 0x0A	; 10
    1130:	98 2e       	mov	r9, r24
    1132:	8e 01       	movw	r16, r28
    1134:	0f 5d       	subi	r16, 0xDF	; 223
    1136:	1f 4f       	sbci	r17, 0xFF	; 255
    1138:	49 2c       	mov	r4, r9
    113a:	51 2c       	mov	r5, r1
    113c:	61 2c       	mov	r6, r1
    113e:	71 2c       	mov	r7, r1
    1140:	c7 01       	movw	r24, r14
    1142:	b6 01       	movw	r22, r12
    1144:	a3 01       	movw	r20, r6
    1146:	92 01       	movw	r18, r4
    1148:	34 d1       	rcall	.+616    	; 0x13b2 <__udivmodsi4>
    114a:	8c 2d       	mov	r24, r12
    114c:	92 9e       	mul	r9, r18
    114e:	80 19       	sub	r24, r0
    1150:	11 24       	eor	r1, r1
    1152:	01 50       	subi	r16, 0x01	; 1
    1154:	11 09       	sbc	r17, r1
    1156:	8a 30       	cpi	r24, 0x0A	; 10
    1158:	10 f4       	brcc	.+4      	; 0x115e <_ZN5Print11printNumberEmh+0x6e>
    115a:	80 5d       	subi	r24, 0xD0	; 208
    115c:	01 c0       	rjmp	.+2      	; 0x1160 <_ZN5Print11printNumberEmh+0x70>
    115e:	89 5c       	subi	r24, 0xC9	; 201
    1160:	f8 01       	movw	r30, r16
    1162:	80 83       	st	Z, r24
    1164:	69 01       	movw	r12, r18
    1166:	7a 01       	movw	r14, r20
    1168:	c1 14       	cp	r12, r1
    116a:	d1 04       	cpc	r13, r1
    116c:	e1 04       	cpc	r14, r1
    116e:	f1 04       	cpc	r15, r1
    1170:	39 f7       	brne	.-50     	; 0x1140 <_ZN5Print11printNumberEmh+0x50>
    1172:	b8 01       	movw	r22, r16
    1174:	c5 01       	movw	r24, r10
    1176:	78 df       	rcall	.-272    	; 0x1068 <_ZN5Print5writeEPKc>
    1178:	a1 96       	adiw	r28, 0x21	; 33
    117a:	0f b6       	in	r0, 0x3f	; 63
    117c:	f8 94       	cli
    117e:	de bf       	out	0x3e, r29	; 62
    1180:	0f be       	out	0x3f, r0	; 63
    1182:	cd bf       	out	0x3d, r28	; 61
    1184:	df 91       	pop	r29
    1186:	cf 91       	pop	r28
    1188:	1f 91       	pop	r17
    118a:	0f 91       	pop	r16
    118c:	ff 90       	pop	r15
    118e:	ef 90       	pop	r14
    1190:	df 90       	pop	r13
    1192:	cf 90       	pop	r12
    1194:	bf 90       	pop	r11
    1196:	af 90       	pop	r10
    1198:	9f 90       	pop	r9
    119a:	7f 90       	pop	r7
    119c:	6f 90       	pop	r6
    119e:	5f 90       	pop	r5
    11a0:	4f 90       	pop	r4
    11a2:	08 95       	ret

000011a4 <_ZN5Print5printEmi>:
    11a4:	21 15       	cp	r18, r1
    11a6:	31 05       	cpc	r19, r1
    11a8:	41 f4       	brne	.+16     	; 0x11ba <_ZN5Print5printEmi+0x16>
    11aa:	dc 01       	movw	r26, r24
    11ac:	ed 91       	ld	r30, X+
    11ae:	fc 91       	ld	r31, X
    11b0:	01 90       	ld	r0, Z+
    11b2:	f0 81       	ld	r31, Z
    11b4:	e0 2d       	mov	r30, r0
    11b6:	64 2f       	mov	r22, r20
    11b8:	09 94       	ijmp
    11ba:	9a cf       	rjmp	.-204    	; 0x10f0 <_ZN5Print11printNumberEmh>

000011bc <_ZN5Print7printlnEji>:
    11bc:	0f 93       	push	r16
    11be:	1f 93       	push	r17
    11c0:	cf 93       	push	r28
    11c2:	df 93       	push	r29
    11c4:	ec 01       	movw	r28, r24
    11c6:	9a 01       	movw	r18, r20
    11c8:	ab 01       	movw	r20, r22
    11ca:	60 e0       	ldi	r22, 0x00	; 0
    11cc:	70 e0       	ldi	r23, 0x00	; 0
    11ce:	ea df       	rcall	.-44     	; 0x11a4 <_ZN5Print5printEmi>
    11d0:	8c 01       	movw	r16, r24
    11d2:	ce 01       	movw	r24, r28
    11d4:	67 df       	rcall	.-306    	; 0x10a4 <_ZN5Print7printlnEv>
    11d6:	98 01       	movw	r18, r16
    11d8:	28 0f       	add	r18, r24
    11da:	39 1f       	adc	r19, r25
    11dc:	c9 01       	movw	r24, r18
    11de:	df 91       	pop	r29
    11e0:	cf 91       	pop	r28
    11e2:	1f 91       	pop	r17
    11e4:	0f 91       	pop	r16
    11e6:	08 95       	ret

000011e8 <_ZN5Print5printEli>:
    11e8:	cf 92       	push	r12
    11ea:	df 92       	push	r13
    11ec:	ef 92       	push	r14
    11ee:	ff 92       	push	r15
    11f0:	0f 93       	push	r16
    11f2:	1f 93       	push	r17
    11f4:	cf 93       	push	r28
    11f6:	df 93       	push	r29
    11f8:	ec 01       	movw	r28, r24
    11fa:	6a 01       	movw	r12, r20
    11fc:	7b 01       	movw	r14, r22
    11fe:	21 15       	cp	r18, r1
    1200:	31 05       	cpc	r19, r1
    1202:	79 f4       	brne	.+30     	; 0x1222 <_ZN5Print5printEli+0x3a>
    1204:	e8 81       	ld	r30, Y
    1206:	f9 81       	ldd	r31, Y+1	; 0x01
    1208:	01 90       	ld	r0, Z+
    120a:	f0 81       	ld	r31, Z
    120c:	e0 2d       	mov	r30, r0
    120e:	64 2f       	mov	r22, r20
    1210:	df 91       	pop	r29
    1212:	cf 91       	pop	r28
    1214:	1f 91       	pop	r17
    1216:	0f 91       	pop	r16
    1218:	ff 90       	pop	r15
    121a:	ef 90       	pop	r14
    121c:	df 90       	pop	r13
    121e:	cf 90       	pop	r12
    1220:	09 94       	ijmp
    1222:	2a 30       	cpi	r18, 0x0A	; 10
    1224:	31 05       	cpc	r19, r1
    1226:	19 f4       	brne	.+6      	; 0x122e <_ZN5Print5printEli+0x46>
    1228:	77 fd       	sbrc	r23, 7
    122a:	0d c0       	rjmp	.+26     	; 0x1246 <_ZN5Print5printEli+0x5e>
    122c:	2a e0       	ldi	r18, 0x0A	; 10
    122e:	b7 01       	movw	r22, r14
    1230:	a6 01       	movw	r20, r12
    1232:	ce 01       	movw	r24, r28
    1234:	df 91       	pop	r29
    1236:	cf 91       	pop	r28
    1238:	1f 91       	pop	r17
    123a:	0f 91       	pop	r16
    123c:	ff 90       	pop	r15
    123e:	ef 90       	pop	r14
    1240:	df 90       	pop	r13
    1242:	cf 90       	pop	r12
    1244:	55 cf       	rjmp	.-342    	; 0x10f0 <_ZN5Print11printNumberEmh>
    1246:	6d e2       	ldi	r22, 0x2D	; 45
    1248:	26 df       	rcall	.-436    	; 0x1096 <_ZN5Print5printEc>
    124a:	8c 01       	movw	r16, r24
    124c:	44 27       	eor	r20, r20
    124e:	55 27       	eor	r21, r21
    1250:	ba 01       	movw	r22, r20
    1252:	4c 19       	sub	r20, r12
    1254:	5d 09       	sbc	r21, r13
    1256:	6e 09       	sbc	r22, r14
    1258:	7f 09       	sbc	r23, r15
    125a:	2a e0       	ldi	r18, 0x0A	; 10
    125c:	ce 01       	movw	r24, r28
    125e:	48 df       	rcall	.-368    	; 0x10f0 <_ZN5Print11printNumberEmh>
    1260:	08 0f       	add	r16, r24
    1262:	19 1f       	adc	r17, r25
    1264:	c8 01       	movw	r24, r16
    1266:	df 91       	pop	r29
    1268:	cf 91       	pop	r28
    126a:	1f 91       	pop	r17
    126c:	0f 91       	pop	r16
    126e:	ff 90       	pop	r15
    1270:	ef 90       	pop	r14
    1272:	df 90       	pop	r13
    1274:	cf 90       	pop	r12
    1276:	08 95       	ret

00001278 <_ZN5Print7printlnEii>:
    1278:	0f 93       	push	r16
    127a:	1f 93       	push	r17
    127c:	cf 93       	push	r28
    127e:	df 93       	push	r29
    1280:	ec 01       	movw	r28, r24
    1282:	9a 01       	movw	r18, r20
    1284:	ab 01       	movw	r20, r22
    1286:	66 27       	eor	r22, r22
    1288:	57 fd       	sbrc	r21, 7
    128a:	60 95       	com	r22
    128c:	76 2f       	mov	r23, r22
    128e:	ac df       	rcall	.-168    	; 0x11e8 <_ZN5Print5printEli>
    1290:	8c 01       	movw	r16, r24
    1292:	ce 01       	movw	r24, r28
    1294:	07 df       	rcall	.-498    	; 0x10a4 <_ZN5Print7printlnEv>
    1296:	98 01       	movw	r18, r16
    1298:	28 0f       	add	r18, r24
    129a:	39 1f       	adc	r19, r25
    129c:	c9 01       	movw	r24, r18
    129e:	df 91       	pop	r29
    12a0:	cf 91       	pop	r28
    12a2:	1f 91       	pop	r17
    12a4:	0f 91       	pop	r16
    12a6:	08 95       	ret

000012a8 <__vector_16>:
    12a8:	1f 92       	push	r1
    12aa:	0f 92       	push	r0
    12ac:	0f b6       	in	r0, 0x3f	; 63
    12ae:	0f 92       	push	r0
    12b0:	11 24       	eor	r1, r1
    12b2:	2f 93       	push	r18
    12b4:	3f 93       	push	r19
    12b6:	8f 93       	push	r24
    12b8:	9f 93       	push	r25
    12ba:	af 93       	push	r26
    12bc:	bf 93       	push	r27
    12be:	80 91 e3 02 	lds	r24, 0x02E3
    12c2:	90 91 e4 02 	lds	r25, 0x02E4
    12c6:	a0 91 e5 02 	lds	r26, 0x02E5
    12ca:	b0 91 e6 02 	lds	r27, 0x02E6
    12ce:	30 91 eb 02 	lds	r19, 0x02EB
    12d2:	23 2f       	mov	r18, r19
    12d4:	2d 5f       	subi	r18, 0xFD	; 253
    12d6:	2d 37       	cpi	r18, 0x7D	; 125
    12d8:	20 f4       	brcc	.+8      	; 0x12e2 <__vector_16+0x3a>
    12da:	01 96       	adiw	r24, 0x01	; 1
    12dc:	a1 1d       	adc	r26, r1
    12de:	b1 1d       	adc	r27, r1
    12e0:	05 c0       	rjmp	.+10     	; 0x12ec <__vector_16+0x44>
    12e2:	23 2f       	mov	r18, r19
    12e4:	2a 57       	subi	r18, 0x7A	; 122
    12e6:	02 96       	adiw	r24, 0x02	; 2
    12e8:	a1 1d       	adc	r26, r1
    12ea:	b1 1d       	adc	r27, r1
    12ec:	20 93 eb 02 	sts	0x02EB, r18
    12f0:	80 93 e3 02 	sts	0x02E3, r24
    12f4:	90 93 e4 02 	sts	0x02E4, r25
    12f8:	a0 93 e5 02 	sts	0x02E5, r26
    12fc:	b0 93 e6 02 	sts	0x02E6, r27
    1300:	80 91 e7 02 	lds	r24, 0x02E7
    1304:	90 91 e8 02 	lds	r25, 0x02E8
    1308:	a0 91 e9 02 	lds	r26, 0x02E9
    130c:	b0 91 ea 02 	lds	r27, 0x02EA
    1310:	01 96       	adiw	r24, 0x01	; 1
    1312:	a1 1d       	adc	r26, r1
    1314:	b1 1d       	adc	r27, r1
    1316:	80 93 e7 02 	sts	0x02E7, r24
    131a:	90 93 e8 02 	sts	0x02E8, r25
    131e:	a0 93 e9 02 	sts	0x02E9, r26
    1322:	b0 93 ea 02 	sts	0x02EA, r27
    1326:	bf 91       	pop	r27
    1328:	af 91       	pop	r26
    132a:	9f 91       	pop	r25
    132c:	8f 91       	pop	r24
    132e:	3f 91       	pop	r19
    1330:	2f 91       	pop	r18
    1332:	0f 90       	pop	r0
    1334:	0f be       	out	0x3f, r0	; 63
    1336:	0f 90       	pop	r0
    1338:	1f 90       	pop	r1
    133a:	18 95       	reti

0000133c <init>:
    133c:	78 94       	sei
    133e:	84 b5       	in	r24, 0x24	; 36
    1340:	82 60       	ori	r24, 0x02	; 2
    1342:	84 bd       	out	0x24, r24	; 36
    1344:	84 b5       	in	r24, 0x24	; 36
    1346:	81 60       	ori	r24, 0x01	; 1
    1348:	84 bd       	out	0x24, r24	; 36
    134a:	85 b5       	in	r24, 0x25	; 37
    134c:	82 60       	ori	r24, 0x02	; 2
    134e:	85 bd       	out	0x25, r24	; 37
    1350:	85 b5       	in	r24, 0x25	; 37
    1352:	81 60       	ori	r24, 0x01	; 1
    1354:	85 bd       	out	0x25, r24	; 37
    1356:	ee e6       	ldi	r30, 0x6E	; 110
    1358:	f0 e0       	ldi	r31, 0x00	; 0
    135a:	80 81       	ld	r24, Z
    135c:	81 60       	ori	r24, 0x01	; 1
    135e:	80 83       	st	Z, r24
    1360:	e1 e8       	ldi	r30, 0x81	; 129
    1362:	f0 e0       	ldi	r31, 0x00	; 0
    1364:	10 82       	st	Z, r1
    1366:	80 81       	ld	r24, Z
    1368:	82 60       	ori	r24, 0x02	; 2
    136a:	80 83       	st	Z, r24
    136c:	80 81       	ld	r24, Z
    136e:	81 60       	ori	r24, 0x01	; 1
    1370:	80 83       	st	Z, r24
    1372:	e0 e8       	ldi	r30, 0x80	; 128
    1374:	f0 e0       	ldi	r31, 0x00	; 0
    1376:	80 81       	ld	r24, Z
    1378:	81 60       	ori	r24, 0x01	; 1
    137a:	80 83       	st	Z, r24
    137c:	e1 eb       	ldi	r30, 0xB1	; 177
    137e:	f0 e0       	ldi	r31, 0x00	; 0
    1380:	80 81       	ld	r24, Z
    1382:	84 60       	ori	r24, 0x04	; 4
    1384:	80 83       	st	Z, r24
    1386:	e0 eb       	ldi	r30, 0xB0	; 176
    1388:	f0 e0       	ldi	r31, 0x00	; 0
    138a:	80 81       	ld	r24, Z
    138c:	81 60       	ori	r24, 0x01	; 1
    138e:	80 83       	st	Z, r24
    1390:	ea e7       	ldi	r30, 0x7A	; 122
    1392:	f0 e0       	ldi	r31, 0x00	; 0
    1394:	80 81       	ld	r24, Z
    1396:	84 60       	ori	r24, 0x04	; 4
    1398:	80 83       	st	Z, r24
    139a:	80 81       	ld	r24, Z
    139c:	82 60       	ori	r24, 0x02	; 2
    139e:	80 83       	st	Z, r24
    13a0:	80 81       	ld	r24, Z
    13a2:	81 60       	ori	r24, 0x01	; 1
    13a4:	80 83       	st	Z, r24
    13a6:	80 81       	ld	r24, Z
    13a8:	80 68       	ori	r24, 0x80	; 128
    13aa:	80 83       	st	Z, r24
    13ac:	10 92 c1 00 	sts	0x00C1, r1
    13b0:	08 95       	ret

000013b2 <__udivmodsi4>:
    13b2:	a1 e2       	ldi	r26, 0x21	; 33
    13b4:	1a 2e       	mov	r1, r26
    13b6:	aa 1b       	sub	r26, r26
    13b8:	bb 1b       	sub	r27, r27
    13ba:	fd 01       	movw	r30, r26
    13bc:	0d c0       	rjmp	.+26     	; 0x13d8 <__udivmodsi4_ep>

000013be <__udivmodsi4_loop>:
    13be:	aa 1f       	adc	r26, r26
    13c0:	bb 1f       	adc	r27, r27
    13c2:	ee 1f       	adc	r30, r30
    13c4:	ff 1f       	adc	r31, r31
    13c6:	a2 17       	cp	r26, r18
    13c8:	b3 07       	cpc	r27, r19
    13ca:	e4 07       	cpc	r30, r20
    13cc:	f5 07       	cpc	r31, r21
    13ce:	20 f0       	brcs	.+8      	; 0x13d8 <__udivmodsi4_ep>
    13d0:	a2 1b       	sub	r26, r18
    13d2:	b3 0b       	sbc	r27, r19
    13d4:	e4 0b       	sbc	r30, r20
    13d6:	f5 0b       	sbc	r31, r21

000013d8 <__udivmodsi4_ep>:
    13d8:	66 1f       	adc	r22, r22
    13da:	77 1f       	adc	r23, r23
    13dc:	88 1f       	adc	r24, r24
    13de:	99 1f       	adc	r25, r25
    13e0:	1a 94       	dec	r1
    13e2:	69 f7       	brne	.-38     	; 0x13be <__udivmodsi4_loop>
    13e4:	60 95       	com	r22
    13e6:	70 95       	com	r23
    13e8:	80 95       	com	r24
    13ea:	90 95       	com	r25
    13ec:	9b 01       	movw	r18, r22
    13ee:	ac 01       	movw	r20, r24
    13f0:	bd 01       	movw	r22, r26
    13f2:	cf 01       	movw	r24, r30
    13f4:	08 95       	ret

000013f6 <__tablejump2__>:
    13f6:	ee 0f       	add	r30, r30
    13f8:	ff 1f       	adc	r31, r31

000013fa <__tablejump__>:
    13fa:	05 90       	lpm	r0, Z+
    13fc:	f4 91       	lpm	r31, Z
    13fe:	e0 2d       	mov	r30, r0
    1400:	09 94       	ijmp

00001402 <memcpy>:
    1402:	fb 01       	movw	r30, r22
    1404:	dc 01       	movw	r26, r24
    1406:	02 c0       	rjmp	.+4      	; 0x140c <memcpy+0xa>
    1408:	01 90       	ld	r0, Z+
    140a:	0d 92       	st	X+, r0
    140c:	41 50       	subi	r20, 0x01	; 1
    140e:	50 40       	sbci	r21, 0x00	; 0
    1410:	d8 f7       	brcc	.-10     	; 0x1408 <memcpy+0x6>
    1412:	08 95       	ret

00001414 <sprintf>:
    1414:	ae e0       	ldi	r26, 0x0E	; 14
    1416:	b0 e0       	ldi	r27, 0x00	; 0
    1418:	ef e0       	ldi	r30, 0x0F	; 15
    141a:	fa e0       	ldi	r31, 0x0A	; 10
    141c:	95 c2       	rjmp	.+1322   	; 0x1948 <__prologue_saves__+0x1c>
    141e:	0d 89       	ldd	r16, Y+21	; 0x15
    1420:	1e 89       	ldd	r17, Y+22	; 0x16
    1422:	86 e0       	ldi	r24, 0x06	; 6
    1424:	8c 83       	std	Y+4, r24	; 0x04
    1426:	1a 83       	std	Y+2, r17	; 0x02
    1428:	09 83       	std	Y+1, r16	; 0x01
    142a:	8f ef       	ldi	r24, 0xFF	; 255
    142c:	9f e7       	ldi	r25, 0x7F	; 127
    142e:	9e 83       	std	Y+6, r25	; 0x06
    1430:	8d 83       	std	Y+5, r24	; 0x05
    1432:	ce 01       	movw	r24, r28
    1434:	49 96       	adiw	r24, 0x19	; 25
    1436:	ac 01       	movw	r20, r24
    1438:	6f 89       	ldd	r22, Y+23	; 0x17
    143a:	78 8d       	ldd	r23, Y+24	; 0x18
    143c:	ce 01       	movw	r24, r28
    143e:	01 96       	adiw	r24, 0x01	; 1
    1440:	08 d0       	rcall	.+16     	; 0x1452 <vfprintf>
    1442:	ef 81       	ldd	r30, Y+7	; 0x07
    1444:	f8 85       	ldd	r31, Y+8	; 0x08
    1446:	e0 0f       	add	r30, r16
    1448:	f1 1f       	adc	r31, r17
    144a:	10 82       	st	Z, r1
    144c:	2e 96       	adiw	r28, 0x0e	; 14
    144e:	e4 e0       	ldi	r30, 0x04	; 4
    1450:	97 c2       	rjmp	.+1326   	; 0x1980 <__epilogue_restores__+0x1c>

00001452 <vfprintf>:
    1452:	ac e0       	ldi	r26, 0x0C	; 12
    1454:	b0 e0       	ldi	r27, 0x00	; 0
    1456:	ee e2       	ldi	r30, 0x2E	; 46
    1458:	fa e0       	ldi	r31, 0x0A	; 10
    145a:	68 c2       	rjmp	.+1232   	; 0x192c <__prologue_saves__>
    145c:	7c 01       	movw	r14, r24
    145e:	6b 01       	movw	r12, r22
    1460:	8a 01       	movw	r16, r20
    1462:	fc 01       	movw	r30, r24
    1464:	17 82       	std	Z+7, r1	; 0x07
    1466:	16 82       	std	Z+6, r1	; 0x06
    1468:	83 81       	ldd	r24, Z+3	; 0x03
    146a:	81 ff       	sbrs	r24, 1
    146c:	b9 c1       	rjmp	.+882    	; 0x17e0 <vfprintf+0x38e>
    146e:	88 24       	eor	r8, r8
    1470:	83 94       	inc	r8
    1472:	91 2c       	mov	r9, r1
    1474:	8c 0e       	add	r8, r28
    1476:	9d 1e       	adc	r9, r29
    1478:	f7 01       	movw	r30, r14
    147a:	93 81       	ldd	r25, Z+3	; 0x03
    147c:	f6 01       	movw	r30, r12
    147e:	93 fd       	sbrc	r25, 3
    1480:	85 91       	lpm	r24, Z+
    1482:	93 ff       	sbrs	r25, 3
    1484:	81 91       	ld	r24, Z+
    1486:	6f 01       	movw	r12, r30
    1488:	88 23       	and	r24, r24
    148a:	09 f4       	brne	.+2      	; 0x148e <vfprintf+0x3c>
    148c:	a5 c1       	rjmp	.+842    	; 0x17d8 <vfprintf+0x386>
    148e:	85 32       	cpi	r24, 0x25	; 37
    1490:	39 f4       	brne	.+14     	; 0x14a0 <vfprintf+0x4e>
    1492:	93 fd       	sbrc	r25, 3
    1494:	85 91       	lpm	r24, Z+
    1496:	93 ff       	sbrs	r25, 3
    1498:	81 91       	ld	r24, Z+
    149a:	6f 01       	movw	r12, r30
    149c:	85 32       	cpi	r24, 0x25	; 37
    149e:	21 f4       	brne	.+8      	; 0x14a8 <vfprintf+0x56>
    14a0:	b7 01       	movw	r22, r14
    14a2:	90 e0       	ldi	r25, 0x00	; 0
    14a4:	b9 d1       	rcall	.+882    	; 0x1818 <fputc>
    14a6:	e8 cf       	rjmp	.-48     	; 0x1478 <vfprintf+0x26>
    14a8:	51 2c       	mov	r5, r1
    14aa:	31 2c       	mov	r3, r1
    14ac:	20 e0       	ldi	r18, 0x00	; 0
    14ae:	20 32       	cpi	r18, 0x20	; 32
    14b0:	a8 f4       	brcc	.+42     	; 0x14dc <vfprintf+0x8a>
    14b2:	8b 32       	cpi	r24, 0x2B	; 43
    14b4:	61 f0       	breq	.+24     	; 0x14ce <vfprintf+0x7c>
    14b6:	28 f4       	brcc	.+10     	; 0x14c2 <vfprintf+0x70>
    14b8:	80 32       	cpi	r24, 0x20	; 32
    14ba:	51 f0       	breq	.+20     	; 0x14d0 <vfprintf+0x7e>
    14bc:	83 32       	cpi	r24, 0x23	; 35
    14be:	71 f4       	brne	.+28     	; 0x14dc <vfprintf+0x8a>
    14c0:	0b c0       	rjmp	.+22     	; 0x14d8 <vfprintf+0x86>
    14c2:	8d 32       	cpi	r24, 0x2D	; 45
    14c4:	39 f0       	breq	.+14     	; 0x14d4 <vfprintf+0x82>
    14c6:	80 33       	cpi	r24, 0x30	; 48
    14c8:	49 f4       	brne	.+18     	; 0x14dc <vfprintf+0x8a>
    14ca:	21 60       	ori	r18, 0x01	; 1
    14cc:	28 c0       	rjmp	.+80     	; 0x151e <vfprintf+0xcc>
    14ce:	22 60       	ori	r18, 0x02	; 2
    14d0:	24 60       	ori	r18, 0x04	; 4
    14d2:	25 c0       	rjmp	.+74     	; 0x151e <vfprintf+0xcc>
    14d4:	28 60       	ori	r18, 0x08	; 8
    14d6:	23 c0       	rjmp	.+70     	; 0x151e <vfprintf+0xcc>
    14d8:	20 61       	ori	r18, 0x10	; 16
    14da:	21 c0       	rjmp	.+66     	; 0x151e <vfprintf+0xcc>
    14dc:	27 fd       	sbrc	r18, 7
    14de:	27 c0       	rjmp	.+78     	; 0x152e <vfprintf+0xdc>
    14e0:	38 2f       	mov	r19, r24
    14e2:	30 53       	subi	r19, 0x30	; 48
    14e4:	3a 30       	cpi	r19, 0x0A	; 10
    14e6:	78 f4       	brcc	.+30     	; 0x1506 <vfprintf+0xb4>
    14e8:	26 ff       	sbrs	r18, 6
    14ea:	06 c0       	rjmp	.+12     	; 0x14f8 <vfprintf+0xa6>
    14ec:	fa e0       	ldi	r31, 0x0A	; 10
    14ee:	5f 9e       	mul	r5, r31
    14f0:	30 0d       	add	r19, r0
    14f2:	11 24       	eor	r1, r1
    14f4:	53 2e       	mov	r5, r19
    14f6:	13 c0       	rjmp	.+38     	; 0x151e <vfprintf+0xcc>
    14f8:	8a e0       	ldi	r24, 0x0A	; 10
    14fa:	38 9e       	mul	r3, r24
    14fc:	30 0d       	add	r19, r0
    14fe:	11 24       	eor	r1, r1
    1500:	33 2e       	mov	r3, r19
    1502:	20 62       	ori	r18, 0x20	; 32
    1504:	0c c0       	rjmp	.+24     	; 0x151e <vfprintf+0xcc>
    1506:	8e 32       	cpi	r24, 0x2E	; 46
    1508:	21 f4       	brne	.+8      	; 0x1512 <vfprintf+0xc0>
    150a:	26 fd       	sbrc	r18, 6
    150c:	65 c1       	rjmp	.+714    	; 0x17d8 <vfprintf+0x386>
    150e:	20 64       	ori	r18, 0x40	; 64
    1510:	06 c0       	rjmp	.+12     	; 0x151e <vfprintf+0xcc>
    1512:	8c 36       	cpi	r24, 0x6C	; 108
    1514:	11 f4       	brne	.+4      	; 0x151a <vfprintf+0xc8>
    1516:	20 68       	ori	r18, 0x80	; 128
    1518:	02 c0       	rjmp	.+4      	; 0x151e <vfprintf+0xcc>
    151a:	88 36       	cpi	r24, 0x68	; 104
    151c:	41 f4       	brne	.+16     	; 0x152e <vfprintf+0xdc>
    151e:	f6 01       	movw	r30, r12
    1520:	93 fd       	sbrc	r25, 3
    1522:	85 91       	lpm	r24, Z+
    1524:	93 ff       	sbrs	r25, 3
    1526:	81 91       	ld	r24, Z+
    1528:	6f 01       	movw	r12, r30
    152a:	81 11       	cpse	r24, r1
    152c:	c0 cf       	rjmp	.-128    	; 0x14ae <vfprintf+0x5c>
    152e:	98 2f       	mov	r25, r24
    1530:	95 54       	subi	r25, 0x45	; 69
    1532:	93 30       	cpi	r25, 0x03	; 3
    1534:	18 f0       	brcs	.+6      	; 0x153c <vfprintf+0xea>
    1536:	90 52       	subi	r25, 0x20	; 32
    1538:	93 30       	cpi	r25, 0x03	; 3
    153a:	28 f4       	brcc	.+10     	; 0x1546 <vfprintf+0xf4>
    153c:	0c 5f       	subi	r16, 0xFC	; 252
    153e:	1f 4f       	sbci	r17, 0xFF	; 255
    1540:	ff e3       	ldi	r31, 0x3F	; 63
    1542:	f9 83       	std	Y+1, r31	; 0x01
    1544:	0d c0       	rjmp	.+26     	; 0x1560 <vfprintf+0x10e>
    1546:	83 36       	cpi	r24, 0x63	; 99
    1548:	31 f0       	breq	.+12     	; 0x1556 <vfprintf+0x104>
    154a:	83 37       	cpi	r24, 0x73	; 115
    154c:	71 f0       	breq	.+28     	; 0x156a <vfprintf+0x118>
    154e:	83 35       	cpi	r24, 0x53	; 83
    1550:	09 f0       	breq	.+2      	; 0x1554 <vfprintf+0x102>
    1552:	5a c0       	rjmp	.+180    	; 0x1608 <vfprintf+0x1b6>
    1554:	22 c0       	rjmp	.+68     	; 0x159a <vfprintf+0x148>
    1556:	f8 01       	movw	r30, r16
    1558:	80 81       	ld	r24, Z
    155a:	89 83       	std	Y+1, r24	; 0x01
    155c:	0e 5f       	subi	r16, 0xFE	; 254
    155e:	1f 4f       	sbci	r17, 0xFF	; 255
    1560:	44 24       	eor	r4, r4
    1562:	43 94       	inc	r4
    1564:	51 2c       	mov	r5, r1
    1566:	54 01       	movw	r10, r8
    1568:	14 c0       	rjmp	.+40     	; 0x1592 <vfprintf+0x140>
    156a:	38 01       	movw	r6, r16
    156c:	f2 e0       	ldi	r31, 0x02	; 2
    156e:	6f 0e       	add	r6, r31
    1570:	71 1c       	adc	r7, r1
    1572:	f8 01       	movw	r30, r16
    1574:	a0 80       	ld	r10, Z
    1576:	b1 80       	ldd	r11, Z+1	; 0x01
    1578:	26 ff       	sbrs	r18, 6
    157a:	03 c0       	rjmp	.+6      	; 0x1582 <vfprintf+0x130>
    157c:	65 2d       	mov	r22, r5
    157e:	70 e0       	ldi	r23, 0x00	; 0
    1580:	02 c0       	rjmp	.+4      	; 0x1586 <vfprintf+0x134>
    1582:	6f ef       	ldi	r22, 0xFF	; 255
    1584:	7f ef       	ldi	r23, 0xFF	; 255
    1586:	c5 01       	movw	r24, r10
    1588:	2c 87       	std	Y+12, r18	; 0x0c
    158a:	3b d1       	rcall	.+630    	; 0x1802 <strnlen>
    158c:	2c 01       	movw	r4, r24
    158e:	83 01       	movw	r16, r6
    1590:	2c 85       	ldd	r18, Y+12	; 0x0c
    1592:	6f e7       	ldi	r22, 0x7F	; 127
    1594:	26 2e       	mov	r2, r22
    1596:	22 22       	and	r2, r18
    1598:	17 c0       	rjmp	.+46     	; 0x15c8 <vfprintf+0x176>
    159a:	38 01       	movw	r6, r16
    159c:	f2 e0       	ldi	r31, 0x02	; 2
    159e:	6f 0e       	add	r6, r31
    15a0:	71 1c       	adc	r7, r1
    15a2:	f8 01       	movw	r30, r16
    15a4:	a0 80       	ld	r10, Z
    15a6:	b1 80       	ldd	r11, Z+1	; 0x01
    15a8:	26 ff       	sbrs	r18, 6
    15aa:	03 c0       	rjmp	.+6      	; 0x15b2 <vfprintf+0x160>
    15ac:	65 2d       	mov	r22, r5
    15ae:	70 e0       	ldi	r23, 0x00	; 0
    15b0:	02 c0       	rjmp	.+4      	; 0x15b6 <vfprintf+0x164>
    15b2:	6f ef       	ldi	r22, 0xFF	; 255
    15b4:	7f ef       	ldi	r23, 0xFF	; 255
    15b6:	c5 01       	movw	r24, r10
    15b8:	2c 87       	std	Y+12, r18	; 0x0c
    15ba:	18 d1       	rcall	.+560    	; 0x17ec <strnlen_P>
    15bc:	2c 01       	movw	r4, r24
    15be:	2c 85       	ldd	r18, Y+12	; 0x0c
    15c0:	50 e8       	ldi	r21, 0x80	; 128
    15c2:	25 2e       	mov	r2, r21
    15c4:	22 2a       	or	r2, r18
    15c6:	83 01       	movw	r16, r6
    15c8:	23 fc       	sbrc	r2, 3
    15ca:	1a c0       	rjmp	.+52     	; 0x1600 <vfprintf+0x1ae>
    15cc:	05 c0       	rjmp	.+10     	; 0x15d8 <vfprintf+0x186>
    15ce:	b7 01       	movw	r22, r14
    15d0:	80 e2       	ldi	r24, 0x20	; 32
    15d2:	90 e0       	ldi	r25, 0x00	; 0
    15d4:	21 d1       	rcall	.+578    	; 0x1818 <fputc>
    15d6:	3a 94       	dec	r3
    15d8:	83 2d       	mov	r24, r3
    15da:	90 e0       	ldi	r25, 0x00	; 0
    15dc:	48 16       	cp	r4, r24
    15de:	59 06       	cpc	r5, r25
    15e0:	b0 f3       	brcs	.-20     	; 0x15ce <vfprintf+0x17c>
    15e2:	0e c0       	rjmp	.+28     	; 0x1600 <vfprintf+0x1ae>
    15e4:	f5 01       	movw	r30, r10
    15e6:	27 fc       	sbrc	r2, 7
    15e8:	85 91       	lpm	r24, Z+
    15ea:	27 fe       	sbrs	r2, 7
    15ec:	81 91       	ld	r24, Z+
    15ee:	5f 01       	movw	r10, r30
    15f0:	b7 01       	movw	r22, r14
    15f2:	90 e0       	ldi	r25, 0x00	; 0
    15f4:	11 d1       	rcall	.+546    	; 0x1818 <fputc>
    15f6:	31 10       	cpse	r3, r1
    15f8:	3a 94       	dec	r3
    15fa:	f1 e0       	ldi	r31, 0x01	; 1
    15fc:	4f 1a       	sub	r4, r31
    15fe:	51 08       	sbc	r5, r1
    1600:	41 14       	cp	r4, r1
    1602:	51 04       	cpc	r5, r1
    1604:	79 f7       	brne	.-34     	; 0x15e4 <vfprintf+0x192>
    1606:	e5 c0       	rjmp	.+458    	; 0x17d2 <vfprintf+0x380>
    1608:	84 36       	cpi	r24, 0x64	; 100
    160a:	11 f0       	breq	.+4      	; 0x1610 <vfprintf+0x1be>
    160c:	89 36       	cpi	r24, 0x69	; 105
    160e:	39 f5       	brne	.+78     	; 0x165e <vfprintf+0x20c>
    1610:	f8 01       	movw	r30, r16
    1612:	27 ff       	sbrs	r18, 7
    1614:	07 c0       	rjmp	.+14     	; 0x1624 <vfprintf+0x1d2>
    1616:	60 81       	ld	r22, Z
    1618:	71 81       	ldd	r23, Z+1	; 0x01
    161a:	82 81       	ldd	r24, Z+2	; 0x02
    161c:	93 81       	ldd	r25, Z+3	; 0x03
    161e:	0c 5f       	subi	r16, 0xFC	; 252
    1620:	1f 4f       	sbci	r17, 0xFF	; 255
    1622:	08 c0       	rjmp	.+16     	; 0x1634 <vfprintf+0x1e2>
    1624:	60 81       	ld	r22, Z
    1626:	71 81       	ldd	r23, Z+1	; 0x01
    1628:	88 27       	eor	r24, r24
    162a:	77 fd       	sbrc	r23, 7
    162c:	80 95       	com	r24
    162e:	98 2f       	mov	r25, r24
    1630:	0e 5f       	subi	r16, 0xFE	; 254
    1632:	1f 4f       	sbci	r17, 0xFF	; 255
    1634:	4f e6       	ldi	r20, 0x6F	; 111
    1636:	b4 2e       	mov	r11, r20
    1638:	b2 22       	and	r11, r18
    163a:	97 ff       	sbrs	r25, 7
    163c:	09 c0       	rjmp	.+18     	; 0x1650 <vfprintf+0x1fe>
    163e:	90 95       	com	r25
    1640:	80 95       	com	r24
    1642:	70 95       	com	r23
    1644:	61 95       	neg	r22
    1646:	7f 4f       	sbci	r23, 0xFF	; 255
    1648:	8f 4f       	sbci	r24, 0xFF	; 255
    164a:	9f 4f       	sbci	r25, 0xFF	; 255
    164c:	f0 e8       	ldi	r31, 0x80	; 128
    164e:	bf 2a       	or	r11, r31
    1650:	2a e0       	ldi	r18, 0x0A	; 10
    1652:	30 e0       	ldi	r19, 0x00	; 0
    1654:	a4 01       	movw	r20, r8
    1656:	0c d1       	rcall	.+536    	; 0x1870 <__ultoa_invert>
    1658:	a8 2e       	mov	r10, r24
    165a:	a8 18       	sub	r10, r8
    165c:	42 c0       	rjmp	.+132    	; 0x16e2 <vfprintf+0x290>
    165e:	85 37       	cpi	r24, 0x75	; 117
    1660:	31 f4       	brne	.+12     	; 0x166e <vfprintf+0x21c>
    1662:	3f ee       	ldi	r19, 0xEF	; 239
    1664:	b3 2e       	mov	r11, r19
    1666:	b2 22       	and	r11, r18
    1668:	2a e0       	ldi	r18, 0x0A	; 10
    166a:	30 e0       	ldi	r19, 0x00	; 0
    166c:	24 c0       	rjmp	.+72     	; 0x16b6 <vfprintf+0x264>
    166e:	99 ef       	ldi	r25, 0xF9	; 249
    1670:	b9 2e       	mov	r11, r25
    1672:	b2 22       	and	r11, r18
    1674:	8f 36       	cpi	r24, 0x6F	; 111
    1676:	b9 f0       	breq	.+46     	; 0x16a6 <vfprintf+0x254>
    1678:	20 f4       	brcc	.+8      	; 0x1682 <vfprintf+0x230>
    167a:	88 35       	cpi	r24, 0x58	; 88
    167c:	09 f0       	breq	.+2      	; 0x1680 <vfprintf+0x22e>
    167e:	ac c0       	rjmp	.+344    	; 0x17d8 <vfprintf+0x386>
    1680:	0d c0       	rjmp	.+26     	; 0x169c <vfprintf+0x24a>
    1682:	80 37       	cpi	r24, 0x70	; 112
    1684:	21 f0       	breq	.+8      	; 0x168e <vfprintf+0x23c>
    1686:	88 37       	cpi	r24, 0x78	; 120
    1688:	09 f0       	breq	.+2      	; 0x168c <vfprintf+0x23a>
    168a:	a6 c0       	rjmp	.+332    	; 0x17d8 <vfprintf+0x386>
    168c:	02 c0       	rjmp	.+4      	; 0x1692 <vfprintf+0x240>
    168e:	20 e1       	ldi	r18, 0x10	; 16
    1690:	b2 2a       	or	r11, r18
    1692:	b4 fe       	sbrs	r11, 4
    1694:	0b c0       	rjmp	.+22     	; 0x16ac <vfprintf+0x25a>
    1696:	84 e0       	ldi	r24, 0x04	; 4
    1698:	b8 2a       	or	r11, r24
    169a:	08 c0       	rjmp	.+16     	; 0x16ac <vfprintf+0x25a>
    169c:	24 ff       	sbrs	r18, 4
    169e:	09 c0       	rjmp	.+18     	; 0x16b2 <vfprintf+0x260>
    16a0:	e6 e0       	ldi	r30, 0x06	; 6
    16a2:	be 2a       	or	r11, r30
    16a4:	06 c0       	rjmp	.+12     	; 0x16b2 <vfprintf+0x260>
    16a6:	28 e0       	ldi	r18, 0x08	; 8
    16a8:	30 e0       	ldi	r19, 0x00	; 0
    16aa:	05 c0       	rjmp	.+10     	; 0x16b6 <vfprintf+0x264>
    16ac:	20 e1       	ldi	r18, 0x10	; 16
    16ae:	30 e0       	ldi	r19, 0x00	; 0
    16b0:	02 c0       	rjmp	.+4      	; 0x16b6 <vfprintf+0x264>
    16b2:	20 e1       	ldi	r18, 0x10	; 16
    16b4:	32 e0       	ldi	r19, 0x02	; 2
    16b6:	f8 01       	movw	r30, r16
    16b8:	b7 fe       	sbrs	r11, 7
    16ba:	07 c0       	rjmp	.+14     	; 0x16ca <vfprintf+0x278>
    16bc:	60 81       	ld	r22, Z
    16be:	71 81       	ldd	r23, Z+1	; 0x01
    16c0:	82 81       	ldd	r24, Z+2	; 0x02
    16c2:	93 81       	ldd	r25, Z+3	; 0x03
    16c4:	0c 5f       	subi	r16, 0xFC	; 252
    16c6:	1f 4f       	sbci	r17, 0xFF	; 255
    16c8:	06 c0       	rjmp	.+12     	; 0x16d6 <vfprintf+0x284>
    16ca:	60 81       	ld	r22, Z
    16cc:	71 81       	ldd	r23, Z+1	; 0x01
    16ce:	80 e0       	ldi	r24, 0x00	; 0
    16d0:	90 e0       	ldi	r25, 0x00	; 0
    16d2:	0e 5f       	subi	r16, 0xFE	; 254
    16d4:	1f 4f       	sbci	r17, 0xFF	; 255
    16d6:	a4 01       	movw	r20, r8
    16d8:	cb d0       	rcall	.+406    	; 0x1870 <__ultoa_invert>
    16da:	a8 2e       	mov	r10, r24
    16dc:	a8 18       	sub	r10, r8
    16de:	ff e7       	ldi	r31, 0x7F	; 127
    16e0:	bf 22       	and	r11, r31
    16e2:	b6 fe       	sbrs	r11, 6
    16e4:	0b c0       	rjmp	.+22     	; 0x16fc <vfprintf+0x2aa>
    16e6:	2b 2d       	mov	r18, r11
    16e8:	2e 7f       	andi	r18, 0xFE	; 254
    16ea:	a5 14       	cp	r10, r5
    16ec:	50 f4       	brcc	.+20     	; 0x1702 <vfprintf+0x2b0>
    16ee:	b4 fe       	sbrs	r11, 4
    16f0:	0a c0       	rjmp	.+20     	; 0x1706 <vfprintf+0x2b4>
    16f2:	b2 fc       	sbrc	r11, 2
    16f4:	08 c0       	rjmp	.+16     	; 0x1706 <vfprintf+0x2b4>
    16f6:	2b 2d       	mov	r18, r11
    16f8:	2e 7e       	andi	r18, 0xEE	; 238
    16fa:	05 c0       	rjmp	.+10     	; 0x1706 <vfprintf+0x2b4>
    16fc:	7a 2c       	mov	r7, r10
    16fe:	2b 2d       	mov	r18, r11
    1700:	03 c0       	rjmp	.+6      	; 0x1708 <vfprintf+0x2b6>
    1702:	7a 2c       	mov	r7, r10
    1704:	01 c0       	rjmp	.+2      	; 0x1708 <vfprintf+0x2b6>
    1706:	75 2c       	mov	r7, r5
    1708:	24 ff       	sbrs	r18, 4
    170a:	0d c0       	rjmp	.+26     	; 0x1726 <vfprintf+0x2d4>
    170c:	fe 01       	movw	r30, r28
    170e:	ea 0d       	add	r30, r10
    1710:	f1 1d       	adc	r31, r1
    1712:	80 81       	ld	r24, Z
    1714:	80 33       	cpi	r24, 0x30	; 48
    1716:	11 f4       	brne	.+4      	; 0x171c <vfprintf+0x2ca>
    1718:	29 7e       	andi	r18, 0xE9	; 233
    171a:	09 c0       	rjmp	.+18     	; 0x172e <vfprintf+0x2dc>
    171c:	22 ff       	sbrs	r18, 2
    171e:	06 c0       	rjmp	.+12     	; 0x172c <vfprintf+0x2da>
    1720:	73 94       	inc	r7
    1722:	73 94       	inc	r7
    1724:	04 c0       	rjmp	.+8      	; 0x172e <vfprintf+0x2dc>
    1726:	82 2f       	mov	r24, r18
    1728:	86 78       	andi	r24, 0x86	; 134
    172a:	09 f0       	breq	.+2      	; 0x172e <vfprintf+0x2dc>
    172c:	73 94       	inc	r7
    172e:	23 fd       	sbrc	r18, 3
    1730:	13 c0       	rjmp	.+38     	; 0x1758 <vfprintf+0x306>
    1732:	20 ff       	sbrs	r18, 0
    1734:	0e c0       	rjmp	.+28     	; 0x1752 <vfprintf+0x300>
    1736:	5a 2c       	mov	r5, r10
    1738:	73 14       	cp	r7, r3
    173a:	58 f4       	brcc	.+22     	; 0x1752 <vfprintf+0x300>
    173c:	53 0c       	add	r5, r3
    173e:	57 18       	sub	r5, r7
    1740:	73 2c       	mov	r7, r3
    1742:	07 c0       	rjmp	.+14     	; 0x1752 <vfprintf+0x300>
    1744:	b7 01       	movw	r22, r14
    1746:	80 e2       	ldi	r24, 0x20	; 32
    1748:	90 e0       	ldi	r25, 0x00	; 0
    174a:	2c 87       	std	Y+12, r18	; 0x0c
    174c:	65 d0       	rcall	.+202    	; 0x1818 <fputc>
    174e:	73 94       	inc	r7
    1750:	2c 85       	ldd	r18, Y+12	; 0x0c
    1752:	73 14       	cp	r7, r3
    1754:	b8 f3       	brcs	.-18     	; 0x1744 <vfprintf+0x2f2>
    1756:	04 c0       	rjmp	.+8      	; 0x1760 <vfprintf+0x30e>
    1758:	73 14       	cp	r7, r3
    175a:	10 f4       	brcc	.+4      	; 0x1760 <vfprintf+0x30e>
    175c:	37 18       	sub	r3, r7
    175e:	01 c0       	rjmp	.+2      	; 0x1762 <vfprintf+0x310>
    1760:	31 2c       	mov	r3, r1
    1762:	24 ff       	sbrs	r18, 4
    1764:	11 c0       	rjmp	.+34     	; 0x1788 <vfprintf+0x336>
    1766:	b7 01       	movw	r22, r14
    1768:	80 e3       	ldi	r24, 0x30	; 48
    176a:	90 e0       	ldi	r25, 0x00	; 0
    176c:	2c 87       	std	Y+12, r18	; 0x0c
    176e:	54 d0       	rcall	.+168    	; 0x1818 <fputc>
    1770:	2c 85       	ldd	r18, Y+12	; 0x0c
    1772:	22 ff       	sbrs	r18, 2
    1774:	1c c0       	rjmp	.+56     	; 0x17ae <vfprintf+0x35c>
    1776:	21 ff       	sbrs	r18, 1
    1778:	03 c0       	rjmp	.+6      	; 0x1780 <vfprintf+0x32e>
    177a:	88 e5       	ldi	r24, 0x58	; 88
    177c:	90 e0       	ldi	r25, 0x00	; 0
    177e:	02 c0       	rjmp	.+4      	; 0x1784 <vfprintf+0x332>
    1780:	88 e7       	ldi	r24, 0x78	; 120
    1782:	90 e0       	ldi	r25, 0x00	; 0
    1784:	b7 01       	movw	r22, r14
    1786:	0c c0       	rjmp	.+24     	; 0x17a0 <vfprintf+0x34e>
    1788:	82 2f       	mov	r24, r18
    178a:	86 78       	andi	r24, 0x86	; 134
    178c:	81 f0       	breq	.+32     	; 0x17ae <vfprintf+0x35c>
    178e:	21 fd       	sbrc	r18, 1
    1790:	02 c0       	rjmp	.+4      	; 0x1796 <vfprintf+0x344>
    1792:	80 e2       	ldi	r24, 0x20	; 32
    1794:	01 c0       	rjmp	.+2      	; 0x1798 <vfprintf+0x346>
    1796:	8b e2       	ldi	r24, 0x2B	; 43
    1798:	27 fd       	sbrc	r18, 7
    179a:	8d e2       	ldi	r24, 0x2D	; 45
    179c:	b7 01       	movw	r22, r14
    179e:	90 e0       	ldi	r25, 0x00	; 0
    17a0:	3b d0       	rcall	.+118    	; 0x1818 <fputc>
    17a2:	05 c0       	rjmp	.+10     	; 0x17ae <vfprintf+0x35c>
    17a4:	b7 01       	movw	r22, r14
    17a6:	80 e3       	ldi	r24, 0x30	; 48
    17a8:	90 e0       	ldi	r25, 0x00	; 0
    17aa:	36 d0       	rcall	.+108    	; 0x1818 <fputc>
    17ac:	5a 94       	dec	r5
    17ae:	a5 14       	cp	r10, r5
    17b0:	c8 f3       	brcs	.-14     	; 0x17a4 <vfprintf+0x352>
    17b2:	aa 94       	dec	r10
    17b4:	f4 01       	movw	r30, r8
    17b6:	ea 0d       	add	r30, r10
    17b8:	f1 1d       	adc	r31, r1
    17ba:	b7 01       	movw	r22, r14
    17bc:	80 81       	ld	r24, Z
    17be:	90 e0       	ldi	r25, 0x00	; 0
    17c0:	2b d0       	rcall	.+86     	; 0x1818 <fputc>
    17c2:	a1 10       	cpse	r10, r1
    17c4:	f6 cf       	rjmp	.-20     	; 0x17b2 <vfprintf+0x360>
    17c6:	05 c0       	rjmp	.+10     	; 0x17d2 <vfprintf+0x380>
    17c8:	b7 01       	movw	r22, r14
    17ca:	80 e2       	ldi	r24, 0x20	; 32
    17cc:	90 e0       	ldi	r25, 0x00	; 0
    17ce:	24 d0       	rcall	.+72     	; 0x1818 <fputc>
    17d0:	3a 94       	dec	r3
    17d2:	31 10       	cpse	r3, r1
    17d4:	f9 cf       	rjmp	.-14     	; 0x17c8 <vfprintf+0x376>
    17d6:	50 ce       	rjmp	.-864    	; 0x1478 <vfprintf+0x26>
    17d8:	f7 01       	movw	r30, r14
    17da:	26 81       	ldd	r18, Z+6	; 0x06
    17dc:	37 81       	ldd	r19, Z+7	; 0x07
    17de:	02 c0       	rjmp	.+4      	; 0x17e4 <vfprintf+0x392>
    17e0:	2f ef       	ldi	r18, 0xFF	; 255
    17e2:	3f ef       	ldi	r19, 0xFF	; 255
    17e4:	c9 01       	movw	r24, r18
    17e6:	2c 96       	adiw	r28, 0x0c	; 12
    17e8:	e2 e1       	ldi	r30, 0x12	; 18
    17ea:	bc c0       	rjmp	.+376    	; 0x1964 <__epilogue_restores__>

000017ec <strnlen_P>:
    17ec:	fc 01       	movw	r30, r24
    17ee:	05 90       	lpm	r0, Z+
    17f0:	61 50       	subi	r22, 0x01	; 1
    17f2:	70 40       	sbci	r23, 0x00	; 0
    17f4:	01 10       	cpse	r0, r1
    17f6:	d8 f7       	brcc	.-10     	; 0x17ee <strnlen_P+0x2>
    17f8:	80 95       	com	r24
    17fa:	90 95       	com	r25
    17fc:	8e 0f       	add	r24, r30
    17fe:	9f 1f       	adc	r25, r31
    1800:	08 95       	ret

00001802 <strnlen>:
    1802:	fc 01       	movw	r30, r24
    1804:	61 50       	subi	r22, 0x01	; 1
    1806:	70 40       	sbci	r23, 0x00	; 0
    1808:	01 90       	ld	r0, Z+
    180a:	01 10       	cpse	r0, r1
    180c:	d8 f7       	brcc	.-10     	; 0x1804 <strnlen+0x2>
    180e:	80 95       	com	r24
    1810:	90 95       	com	r25
    1812:	8e 0f       	add	r24, r30
    1814:	9f 1f       	adc	r25, r31
    1816:	08 95       	ret

00001818 <fputc>:
    1818:	0f 93       	push	r16
    181a:	1f 93       	push	r17
    181c:	cf 93       	push	r28
    181e:	df 93       	push	r29
    1820:	8c 01       	movw	r16, r24
    1822:	eb 01       	movw	r28, r22
    1824:	8b 81       	ldd	r24, Y+3	; 0x03
    1826:	81 fd       	sbrc	r24, 1
    1828:	03 c0       	rjmp	.+6      	; 0x1830 <fputc+0x18>
    182a:	0f ef       	ldi	r16, 0xFF	; 255
    182c:	1f ef       	ldi	r17, 0xFF	; 255
    182e:	1a c0       	rjmp	.+52     	; 0x1864 <fputc+0x4c>
    1830:	82 ff       	sbrs	r24, 2
    1832:	0d c0       	rjmp	.+26     	; 0x184e <fputc+0x36>
    1834:	2e 81       	ldd	r18, Y+6	; 0x06
    1836:	3f 81       	ldd	r19, Y+7	; 0x07
    1838:	8c 81       	ldd	r24, Y+4	; 0x04
    183a:	9d 81       	ldd	r25, Y+5	; 0x05
    183c:	28 17       	cp	r18, r24
    183e:	39 07       	cpc	r19, r25
    1840:	64 f4       	brge	.+24     	; 0x185a <fputc+0x42>
    1842:	e8 81       	ld	r30, Y
    1844:	f9 81       	ldd	r31, Y+1	; 0x01
    1846:	01 93       	st	Z+, r16
    1848:	f9 83       	std	Y+1, r31	; 0x01
    184a:	e8 83       	st	Y, r30
    184c:	06 c0       	rjmp	.+12     	; 0x185a <fputc+0x42>
    184e:	e8 85       	ldd	r30, Y+8	; 0x08
    1850:	f9 85       	ldd	r31, Y+9	; 0x09
    1852:	80 2f       	mov	r24, r16
    1854:	09 95       	icall
    1856:	89 2b       	or	r24, r25
    1858:	41 f7       	brne	.-48     	; 0x182a <fputc+0x12>
    185a:	8e 81       	ldd	r24, Y+6	; 0x06
    185c:	9f 81       	ldd	r25, Y+7	; 0x07
    185e:	01 96       	adiw	r24, 0x01	; 1
    1860:	9f 83       	std	Y+7, r25	; 0x07
    1862:	8e 83       	std	Y+6, r24	; 0x06
    1864:	c8 01       	movw	r24, r16
    1866:	df 91       	pop	r29
    1868:	cf 91       	pop	r28
    186a:	1f 91       	pop	r17
    186c:	0f 91       	pop	r16
    186e:	08 95       	ret

00001870 <__ultoa_invert>:
    1870:	fa 01       	movw	r30, r20
    1872:	aa 27       	eor	r26, r26
    1874:	28 30       	cpi	r18, 0x08	; 8
    1876:	51 f1       	breq	.+84     	; 0x18cc <__ultoa_invert+0x5c>
    1878:	20 31       	cpi	r18, 0x10	; 16
    187a:	81 f1       	breq	.+96     	; 0x18dc <__ultoa_invert+0x6c>
    187c:	e8 94       	clt
    187e:	6f 93       	push	r22
    1880:	6e 7f       	andi	r22, 0xFE	; 254
    1882:	6e 5f       	subi	r22, 0xFE	; 254
    1884:	7f 4f       	sbci	r23, 0xFF	; 255
    1886:	8f 4f       	sbci	r24, 0xFF	; 255
    1888:	9f 4f       	sbci	r25, 0xFF	; 255
    188a:	af 4f       	sbci	r26, 0xFF	; 255
    188c:	b1 e0       	ldi	r27, 0x01	; 1
    188e:	3e d0       	rcall	.+124    	; 0x190c <__ultoa_invert+0x9c>
    1890:	b4 e0       	ldi	r27, 0x04	; 4
    1892:	3c d0       	rcall	.+120    	; 0x190c <__ultoa_invert+0x9c>
    1894:	67 0f       	add	r22, r23
    1896:	78 1f       	adc	r23, r24
    1898:	89 1f       	adc	r24, r25
    189a:	9a 1f       	adc	r25, r26
    189c:	a1 1d       	adc	r26, r1
    189e:	68 0f       	add	r22, r24
    18a0:	79 1f       	adc	r23, r25
    18a2:	8a 1f       	adc	r24, r26
    18a4:	91 1d       	adc	r25, r1
    18a6:	a1 1d       	adc	r26, r1
    18a8:	6a 0f       	add	r22, r26
    18aa:	71 1d       	adc	r23, r1
    18ac:	81 1d       	adc	r24, r1
    18ae:	91 1d       	adc	r25, r1
    18b0:	a1 1d       	adc	r26, r1
    18b2:	20 d0       	rcall	.+64     	; 0x18f4 <__ultoa_invert+0x84>
    18b4:	09 f4       	brne	.+2      	; 0x18b8 <__ultoa_invert+0x48>
    18b6:	68 94       	set
    18b8:	3f 91       	pop	r19
    18ba:	2a e0       	ldi	r18, 0x0A	; 10
    18bc:	26 9f       	mul	r18, r22
    18be:	11 24       	eor	r1, r1
    18c0:	30 19       	sub	r19, r0
    18c2:	30 5d       	subi	r19, 0xD0	; 208
    18c4:	31 93       	st	Z+, r19
    18c6:	de f6       	brtc	.-74     	; 0x187e <__ultoa_invert+0xe>
    18c8:	cf 01       	movw	r24, r30
    18ca:	08 95       	ret
    18cc:	46 2f       	mov	r20, r22
    18ce:	47 70       	andi	r20, 0x07	; 7
    18d0:	40 5d       	subi	r20, 0xD0	; 208
    18d2:	41 93       	st	Z+, r20
    18d4:	b3 e0       	ldi	r27, 0x03	; 3
    18d6:	0f d0       	rcall	.+30     	; 0x18f6 <__ultoa_invert+0x86>
    18d8:	c9 f7       	brne	.-14     	; 0x18cc <__ultoa_invert+0x5c>
    18da:	f6 cf       	rjmp	.-20     	; 0x18c8 <__ultoa_invert+0x58>
    18dc:	46 2f       	mov	r20, r22
    18de:	4f 70       	andi	r20, 0x0F	; 15
    18e0:	40 5d       	subi	r20, 0xD0	; 208
    18e2:	4a 33       	cpi	r20, 0x3A	; 58
    18e4:	18 f0       	brcs	.+6      	; 0x18ec <__ultoa_invert+0x7c>
    18e6:	49 5d       	subi	r20, 0xD9	; 217
    18e8:	31 fd       	sbrc	r19, 1
    18ea:	40 52       	subi	r20, 0x20	; 32
    18ec:	41 93       	st	Z+, r20
    18ee:	02 d0       	rcall	.+4      	; 0x18f4 <__ultoa_invert+0x84>
    18f0:	a9 f7       	brne	.-22     	; 0x18dc <__ultoa_invert+0x6c>
    18f2:	ea cf       	rjmp	.-44     	; 0x18c8 <__ultoa_invert+0x58>
    18f4:	b4 e0       	ldi	r27, 0x04	; 4
    18f6:	a6 95       	lsr	r26
    18f8:	97 95       	ror	r25
    18fa:	87 95       	ror	r24
    18fc:	77 95       	ror	r23
    18fe:	67 95       	ror	r22
    1900:	ba 95       	dec	r27
    1902:	c9 f7       	brne	.-14     	; 0x18f6 <__ultoa_invert+0x86>
    1904:	00 97       	sbiw	r24, 0x00	; 0
    1906:	61 05       	cpc	r22, r1
    1908:	71 05       	cpc	r23, r1
    190a:	08 95       	ret
    190c:	9b 01       	movw	r18, r22
    190e:	ac 01       	movw	r20, r24
    1910:	0a 2e       	mov	r0, r26
    1912:	06 94       	lsr	r0
    1914:	57 95       	ror	r21
    1916:	47 95       	ror	r20
    1918:	37 95       	ror	r19
    191a:	27 95       	ror	r18
    191c:	ba 95       	dec	r27
    191e:	c9 f7       	brne	.-14     	; 0x1912 <__ultoa_invert+0xa2>
    1920:	62 0f       	add	r22, r18
    1922:	73 1f       	adc	r23, r19
    1924:	84 1f       	adc	r24, r20
    1926:	95 1f       	adc	r25, r21
    1928:	a0 1d       	adc	r26, r0
    192a:	08 95       	ret

0000192c <__prologue_saves__>:
    192c:	2f 92       	push	r2
    192e:	3f 92       	push	r3
    1930:	4f 92       	push	r4
    1932:	5f 92       	push	r5
    1934:	6f 92       	push	r6
    1936:	7f 92       	push	r7
    1938:	8f 92       	push	r8
    193a:	9f 92       	push	r9
    193c:	af 92       	push	r10
    193e:	bf 92       	push	r11
    1940:	cf 92       	push	r12
    1942:	df 92       	push	r13
    1944:	ef 92       	push	r14
    1946:	ff 92       	push	r15
    1948:	0f 93       	push	r16
    194a:	1f 93       	push	r17
    194c:	cf 93       	push	r28
    194e:	df 93       	push	r29
    1950:	cd b7       	in	r28, 0x3d	; 61
    1952:	de b7       	in	r29, 0x3e	; 62
    1954:	ca 1b       	sub	r28, r26
    1956:	db 0b       	sbc	r29, r27
    1958:	0f b6       	in	r0, 0x3f	; 63
    195a:	f8 94       	cli
    195c:	de bf       	out	0x3e, r29	; 62
    195e:	0f be       	out	0x3f, r0	; 63
    1960:	cd bf       	out	0x3d, r28	; 61
    1962:	09 94       	ijmp

00001964 <__epilogue_restores__>:
    1964:	2a 88       	ldd	r2, Y+18	; 0x12
    1966:	39 88       	ldd	r3, Y+17	; 0x11
    1968:	48 88       	ldd	r4, Y+16	; 0x10
    196a:	5f 84       	ldd	r5, Y+15	; 0x0f
    196c:	6e 84       	ldd	r6, Y+14	; 0x0e
    196e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1970:	8c 84       	ldd	r8, Y+12	; 0x0c
    1972:	9b 84       	ldd	r9, Y+11	; 0x0b
    1974:	aa 84       	ldd	r10, Y+10	; 0x0a
    1976:	b9 84       	ldd	r11, Y+9	; 0x09
    1978:	c8 84       	ldd	r12, Y+8	; 0x08
    197a:	df 80       	ldd	r13, Y+7	; 0x07
    197c:	ee 80       	ldd	r14, Y+6	; 0x06
    197e:	fd 80       	ldd	r15, Y+5	; 0x05
    1980:	0c 81       	ldd	r16, Y+4	; 0x04
    1982:	1b 81       	ldd	r17, Y+3	; 0x03
    1984:	aa 81       	ldd	r26, Y+2	; 0x02
    1986:	b9 81       	ldd	r27, Y+1	; 0x01
    1988:	ce 0f       	add	r28, r30
    198a:	d1 1d       	adc	r29, r1
    198c:	0f b6       	in	r0, 0x3f	; 63
    198e:	f8 94       	cli
    1990:	de bf       	out	0x3e, r29	; 62
    1992:	0f be       	out	0x3f, r0	; 63
    1994:	cd bf       	out	0x3d, r28	; 61
    1996:	ed 01       	movw	r28, r26
    1998:	08 95       	ret

0000199a <_exit>:
    199a:	f8 94       	cli

0000199c <__stop_program>:
    199c:	ff cf       	rjmp	.-2      	; 0x199c <__stop_program>
