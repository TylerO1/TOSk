
VolumeReader.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000007a  00800100  00001860  000018f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001860  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001c9  0080017a  0080017a  0000196e  2**0
                  ALLOC
  3 .stab         00003558  00000000  00000000  00001970  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001338  00000000  00000000  00004ec8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000005e  00000000  00000000  00006200  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000001e8  00000000  00000000  0000625e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000032ed  00000000  00000000  00006446  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001161  00000000  00000000  00009733  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000171c  00000000  00000000  0000a894  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000428  00000000  00000000  0000bfb0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000ed0  00000000  00000000  0000c3d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000011f9  00000000  00000000  0000d2a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000148  00000000  00000000  0000e4a1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	35 c0       	rjmp	.+106    	; 0x6c <__ctors_end>
       2:	00 00       	nop
       4:	5a c0       	rjmp	.+180    	; 0xba <__bad_interrupt>
       6:	00 00       	nop
       8:	58 c0       	rjmp	.+176    	; 0xba <__bad_interrupt>
       a:	00 00       	nop
       c:	56 c0       	rjmp	.+172    	; 0xba <__bad_interrupt>
       e:	00 00       	nop
      10:	54 c0       	rjmp	.+168    	; 0xba <__bad_interrupt>
      12:	00 00       	nop
      14:	52 c0       	rjmp	.+164    	; 0xba <__bad_interrupt>
      16:	00 00       	nop
      18:	50 c0       	rjmp	.+160    	; 0xba <__bad_interrupt>
      1a:	00 00       	nop
      1c:	4e c0       	rjmp	.+156    	; 0xba <__bad_interrupt>
      1e:	00 00       	nop
      20:	4c c0       	rjmp	.+152    	; 0xba <__bad_interrupt>
      22:	00 00       	nop
      24:	4a c0       	rjmp	.+148    	; 0xba <__bad_interrupt>
      26:	00 00       	nop
      28:	48 c0       	rjmp	.+144    	; 0xba <__bad_interrupt>
      2a:	00 00       	nop
      2c:	46 c0       	rjmp	.+140    	; 0xba <__bad_interrupt>
      2e:	00 00       	nop
      30:	44 c0       	rjmp	.+136    	; 0xba <__bad_interrupt>
      32:	00 00       	nop
      34:	42 c0       	rjmp	.+132    	; 0xba <__bad_interrupt>
      36:	00 00       	nop
      38:	40 c0       	rjmp	.+128    	; 0xba <__bad_interrupt>
      3a:	00 00       	nop
      3c:	3e c0       	rjmp	.+124    	; 0xba <__bad_interrupt>
      3e:	00 00       	nop
      40:	0c 94 b5 08 	jmp	0x116a	; 0x116a <__vector_16>
      44:	3a c0       	rjmp	.+116    	; 0xba <__bad_interrupt>
      46:	00 00       	nop
      48:	ee c5       	rjmp	.+3036   	; 0xc26 <__vector_18>
      4a:	00 00       	nop
      4c:	2d c6       	rjmp	.+3162   	; 0xca8 <__vector_19>
      4e:	00 00       	nop
      50:	34 c0       	rjmp	.+104    	; 0xba <__bad_interrupt>
      52:	00 00       	nop
      54:	32 c0       	rjmp	.+100    	; 0xba <__bad_interrupt>
      56:	00 00       	nop
      58:	30 c0       	rjmp	.+96     	; 0xba <__bad_interrupt>
      5a:	00 00       	nop
      5c:	2e c0       	rjmp	.+92     	; 0xba <__bad_interrupt>
      5e:	00 00       	nop
      60:	2c c0       	rjmp	.+88     	; 0xba <__bad_interrupt>
      62:	00 00       	nop
      64:	2a c0       	rjmp	.+84     	; 0xba <__bad_interrupt>
	...

00000068 <__ctors_start>:
      68:	13 04       	cpc	r1, r3
      6a:	0e 07       	cpc	r16, r30

0000006c <__ctors_end>:
      6c:	11 24       	eor	r1, r1
      6e:	1f be       	out	0x3f, r1	; 63
      70:	cf ef       	ldi	r28, 0xFF	; 255
      72:	d8 e0       	ldi	r29, 0x08	; 8
      74:	de bf       	out	0x3e, r29	; 62
      76:	cd bf       	out	0x3d, r28	; 61

00000078 <__do_copy_data>:
      78:	11 e0       	ldi	r17, 0x01	; 1
      7a:	a0 e0       	ldi	r26, 0x00	; 0
      7c:	b1 e0       	ldi	r27, 0x01	; 1
      7e:	e0 e6       	ldi	r30, 0x60	; 96
      80:	f8 e1       	ldi	r31, 0x18	; 24
      82:	02 c0       	rjmp	.+4      	; 0x88 <__do_copy_data+0x10>
      84:	05 90       	lpm	r0, Z+
      86:	0d 92       	st	X+, r0
      88:	aa 37       	cpi	r26, 0x7A	; 122
      8a:	b1 07       	cpc	r27, r17
      8c:	d9 f7       	brne	.-10     	; 0x84 <__do_copy_data+0xc>

0000008e <__do_clear_bss>:
      8e:	23 e0       	ldi	r18, 0x03	; 3
      90:	aa e7       	ldi	r26, 0x7A	; 122
      92:	b1 e0       	ldi	r27, 0x01	; 1
      94:	01 c0       	rjmp	.+2      	; 0x98 <.do_clear_bss_start>

00000096 <.do_clear_bss_loop>:
      96:	1d 92       	st	X+, r1

00000098 <.do_clear_bss_start>:
      98:	a3 34       	cpi	r26, 0x43	; 67
      9a:	b2 07       	cpc	r27, r18
      9c:	e1 f7       	brne	.-8      	; 0x96 <.do_clear_bss_loop>

0000009e <__do_global_ctors>:
      9e:	10 e0       	ldi	r17, 0x00	; 0
      a0:	cc e6       	ldi	r28, 0x6C	; 108
      a2:	d0 e0       	ldi	r29, 0x00	; 0
      a4:	04 c0       	rjmp	.+8      	; 0xae <__do_global_ctors+0x10>
      a6:	22 97       	sbiw	r28, 0x02	; 2
      a8:	fe 01       	movw	r30, r28
      aa:	0e 94 5e 09 	call	0x12bc	; 0x12bc <__tablejump__>
      ae:	c8 36       	cpi	r28, 0x68	; 104
      b0:	d1 07       	cpc	r29, r17
      b2:	c9 f7       	brne	.-14     	; 0xa6 <__do_global_ctors+0x8>
      b4:	09 d7       	rcall	.+3602   	; 0xec8 <main>
      b6:	0c 94 2e 0c 	jmp	0x185c	; 0x185c <_exit>

000000ba <__bad_interrupt>:
      ba:	a2 cf       	rjmp	.-188    	; 0x0 <__vectors>

000000bc <_ZN17CArduinoProcessor13SetReadStatusE17arduinoPinNames_E>:
}

PinClaimedStatus_E CArduinoProcessor::StatusOfBoardsPin(arduinoPinNames_E *pinInQuestion)
{
	return Registers[*pinInQuestion].pinIsClaimed;
}
      bc:	70 e0       	ldi	r23, 0x00	; 0
      be:	fb 01       	movw	r30, r22
      c0:	ee 0f       	add	r30, r30
      c2:	ff 1f       	adc	r31, r31
      c4:	ee 0f       	add	r30, r30
      c6:	ff 1f       	adc	r31, r31
      c8:	ee 0f       	add	r30, r30
      ca:	ff 1f       	adc	r31, r31
      cc:	e5 58       	subi	r30, 0x85	; 133
      ce:	fe 4f       	sbci	r31, 0xFE	; 254
      d0:	87 81       	ldd	r24, Z+7	; 0x07
      d2:	81 11       	cpse	r24, r1
      d4:	1f c0       	rjmp	.+62     	; 0x114 <_ZN17CArduinoProcessor13SetReadStatusE17arduinoPinNames_E+0x58>
      d6:	fb 01       	movw	r30, r22
      d8:	ee 0f       	add	r30, r30
      da:	ff 1f       	adc	r31, r31
      dc:	ee 0f       	add	r30, r30
      de:	ff 1f       	adc	r31, r31
      e0:	ee 0f       	add	r30, r30
      e2:	ff 1f       	adc	r31, r31
      e4:	e5 58       	subi	r30, 0x85	; 133
      e6:	fe 4f       	sbci	r31, 0xFE	; 254
      e8:	86 81       	ldd	r24, Z+6	; 0x06
      ea:	a4 81       	ldd	r26, Z+4	; 0x04
      ec:	b5 81       	ldd	r27, Z+5	; 0x05
      ee:	2c 91       	ld	r18, X
      f0:	41 e0       	ldi	r20, 0x01	; 1
      f2:	50 e0       	ldi	r21, 0x00	; 0
      f4:	ba 01       	movw	r22, r20
      f6:	02 c0       	rjmp	.+4      	; 0xfc <_ZN17CArduinoProcessor13SetReadStatusE17arduinoPinNames_E+0x40>
      f8:	66 0f       	add	r22, r22
      fa:	77 1f       	adc	r23, r23
      fc:	8a 95       	dec	r24
      fe:	e2 f7       	brpl	.-8      	; 0xf8 <_ZN17CArduinoProcessor13SetReadStatusE17arduinoPinNames_E+0x3c>
     100:	cb 01       	movw	r24, r22
     102:	80 95       	com	r24
     104:	90 95       	com	r25
     106:	30 e0       	ldi	r19, 0x00	; 0
     108:	82 23       	and	r24, r18
     10a:	93 23       	and	r25, r19
     10c:	8c 93       	st	X, r24
     10e:	81 e0       	ldi	r24, 0x01	; 1
     110:	87 83       	std	Z+7, r24	; 0x07
     112:	08 95       	ret
     114:	80 e0       	ldi	r24, 0x00	; 0
     116:	08 95       	ret

00000118 <_ZN17CArduinoProcessor15SetPullUpStatusE17arduinoPinNames_E>:
     118:	70 e0       	ldi	r23, 0x00	; 0
     11a:	fb 01       	movw	r30, r22
     11c:	ee 0f       	add	r30, r30
     11e:	ff 1f       	adc	r31, r31
     120:	ee 0f       	add	r30, r30
     122:	ff 1f       	adc	r31, r31
     124:	ee 0f       	add	r30, r30
     126:	ff 1f       	adc	r31, r31
     128:	e5 58       	subi	r30, 0x85	; 133
     12a:	fe 4f       	sbci	r31, 0xFE	; 254
     12c:	87 81       	ldd	r24, Z+7	; 0x07
     12e:	81 30       	cpi	r24, 0x01	; 1
     130:	d1 f4       	brne	.+52     	; 0x166 <_ZN17CArduinoProcessor15SetPullUpStatusE17arduinoPinNames_E+0x4e>
     132:	fb 01       	movw	r30, r22
     134:	ee 0f       	add	r30, r30
     136:	ff 1f       	adc	r31, r31
     138:	ee 0f       	add	r30, r30
     13a:	ff 1f       	adc	r31, r31
     13c:	ee 0f       	add	r30, r30
     13e:	ff 1f       	adc	r31, r31
     140:	e5 58       	subi	r30, 0x85	; 133
     142:	fe 4f       	sbci	r31, 0xFE	; 254
     144:	36 81       	ldd	r19, Z+6	; 0x06
     146:	a0 81       	ld	r26, Z
     148:	b1 81       	ldd	r27, Z+1	; 0x01
     14a:	2c 91       	ld	r18, X
     14c:	81 e0       	ldi	r24, 0x01	; 1
     14e:	90 e0       	ldi	r25, 0x00	; 0
     150:	02 c0       	rjmp	.+4      	; 0x156 <_ZN17CArduinoProcessor15SetPullUpStatusE17arduinoPinNames_E+0x3e>
     152:	88 0f       	add	r24, r24
     154:	99 1f       	adc	r25, r25
     156:	3a 95       	dec	r19
     158:	e2 f7       	brpl	.-8      	; 0x152 <_ZN17CArduinoProcessor15SetPullUpStatusE17arduinoPinNames_E+0x3a>
     15a:	82 2b       	or	r24, r18
     15c:	8c 93       	st	X, r24
     15e:	82 e0       	ldi	r24, 0x02	; 2
     160:	87 83       	std	Z+7, r24	; 0x07
     162:	81 e0       	ldi	r24, 0x01	; 1
     164:	08 95       	ret
     166:	80 e0       	ldi	r24, 0x00	; 0
     168:	08 95       	ret

0000016a <_ZN17CArduinoProcessor14ReadDigitalPinEP17arduinoPinNames_E>:
     16a:	db 01       	movw	r26, r22
     16c:	ec 91       	ld	r30, X
     16e:	f0 e0       	ldi	r31, 0x00	; 0
     170:	ee 0f       	add	r30, r30
     172:	ff 1f       	adc	r31, r31
     174:	ee 0f       	add	r30, r30
     176:	ff 1f       	adc	r31, r31
     178:	ee 0f       	add	r30, r30
     17a:	ff 1f       	adc	r31, r31
     17c:	e5 58       	subi	r30, 0x85	; 133
     17e:	fe 4f       	sbci	r31, 0xFE	; 254
     180:	a2 81       	ldd	r26, Z+2	; 0x02
     182:	b3 81       	ldd	r27, Z+3	; 0x03
     184:	8c 91       	ld	r24, X
     186:	26 81       	ldd	r18, Z+6	; 0x06
     188:	66 81       	ldd	r22, Z+6	; 0x06
     18a:	41 e0       	ldi	r20, 0x01	; 1
     18c:	50 e0       	ldi	r21, 0x00	; 0
     18e:	fa 01       	movw	r30, r20
     190:	02 c0       	rjmp	.+4      	; 0x196 <_ZN17CArduinoProcessor14ReadDigitalPinEP17arduinoPinNames_E+0x2c>
     192:	ee 0f       	add	r30, r30
     194:	ff 1f       	adc	r31, r31
     196:	2a 95       	dec	r18
     198:	e2 f7       	brpl	.-8      	; 0x192 <_ZN17CArduinoProcessor14ReadDigitalPinEP17arduinoPinNames_E+0x28>
     19a:	9f 01       	movw	r18, r30
     19c:	90 e0       	ldi	r25, 0x00	; 0
     19e:	28 23       	and	r18, r24
     1a0:	39 23       	and	r19, r25
     1a2:	02 c0       	rjmp	.+4      	; 0x1a8 <_ZN17CArduinoProcessor14ReadDigitalPinEP17arduinoPinNames_E+0x3e>
     1a4:	35 95       	asr	r19
     1a6:	27 95       	ror	r18
     1a8:	6a 95       	dec	r22
     1aa:	e2 f7       	brpl	.-8      	; 0x1a4 <_ZN17CArduinoProcessor14ReadDigitalPinEP17arduinoPinNames_E+0x3a>
     1ac:	82 2f       	mov	r24, r18
     1ae:	93 2f       	mov	r25, r19
     1b0:	08 95       	ret

000001b2 <_ZN17CArduinoProcessor23ReadMultipleDigitalPinsEP13portPinUser_sPh>:
     1b2:	fb 01       	movw	r30, r22
     1b4:	80 81       	ld	r24, Z
     1b6:	82 30       	cpi	r24, 0x02	; 2
     1b8:	51 f0       	breq	.+20     	; 0x1ce <_ZN17CArduinoProcessor23ReadMultipleDigitalPinsEP13portPinUser_sPh+0x1c>
     1ba:	83 30       	cpi	r24, 0x03	; 3
     1bc:	79 f0       	breq	.+30     	; 0x1dc <_ZN17CArduinoProcessor23ReadMultipleDigitalPinsEP13portPinUser_sPh+0x2a>
     1be:	81 30       	cpi	r24, 0x01	; 1
     1c0:	99 f4       	brne	.+38     	; 0x1e8 <_ZN17CArduinoProcessor23ReadMultipleDigitalPinsEP13portPinUser_sPh+0x36>
     1c2:	83 b1       	in	r24, 0x03	; 3
     1c4:	91 81       	ldd	r25, Z+1	; 0x01
     1c6:	89 23       	and	r24, r25
     1c8:	fa 01       	movw	r30, r20
     1ca:	80 83       	st	Z, r24
     1cc:	08 95       	ret
     1ce:	86 b1       	in	r24, 0x06	; 6
     1d0:	fb 01       	movw	r30, r22
     1d2:	91 81       	ldd	r25, Z+1	; 0x01
     1d4:	89 23       	and	r24, r25
     1d6:	fa 01       	movw	r30, r20
     1d8:	80 83       	st	Z, r24
     1da:	08 95       	ret
     1dc:	89 b1       	in	r24, 0x09	; 9
     1de:	fb 01       	movw	r30, r22
     1e0:	91 81       	ldd	r25, Z+1	; 0x01
     1e2:	89 23       	and	r24, r25
     1e4:	fa 01       	movw	r30, r20
     1e6:	80 83       	st	Z, r24
     1e8:	08 95       	ret

000001ea <_ZN17CArduinoProcessor8FindPortE17arduinoPinNames_E>:

arduinoPortNames_E CArduinoProcessor::FindPort( arduinoPinNames_E Pin )
{
	arduinoPortNames_E Port;
	
	switch (Pin)
     1ea:	6e 30       	cpi	r22, 0x0E	; 14
     1ec:	18 f4       	brcc	.+6      	; 0x1f4 <_ZN17CArduinoProcessor8FindPortE17arduinoPinNames_E+0xa>
     1ee:	68 30       	cpi	r22, 0x08	; 8
     1f0:	50 f4       	brcc	.+20     	; 0x206 <_ZN17CArduinoProcessor8FindPortE17arduinoPinNames_E+0x1c>
     1f2:	03 c0       	rjmp	.+6      	; 0x1fa <_ZN17CArduinoProcessor8FindPortE17arduinoPinNames_E+0x10>
     1f4:	64 31       	cpi	r22, 0x14	; 20
     1f6:	28 f4       	brcc	.+10     	; 0x202 <_ZN17CArduinoProcessor8FindPortE17arduinoPinNames_E+0x18>
     1f8:	02 c0       	rjmp	.+4      	; 0x1fe <_ZN17CArduinoProcessor8FindPortE17arduinoPinNames_E+0x14>
		case Pd3:
		case Pd4:
		case Pd5:
		case Pd6:
		case Pd7:
		Port = e_PORTD;
     1fa:	83 e0       	ldi	r24, 0x03	; 3
     1fc:	08 95       	ret
		case Pc1:
		case Pc2:
		case Pc3:
		case Pc4:
		case Pc5:
		Port = e_PORTC;
     1fe:	82 e0       	ldi	r24, 0x02	; 2
		break;
     200:	08 95       	ret
		default:
		Port = e_INVALIDPORTASSIGNMMENT;
     202:	84 e0       	ldi	r24, 0x04	; 4
		break;
     204:	08 95       	ret
		case Pb1:
		case Pb2:
		case Pb3:
		case Pb4:
		case Pb5:
		Port = e_PORTB;
     206:	81 e0       	ldi	r24, 0x01	; 1
		Port = e_INVALIDPORTASSIGNMMENT;
		break;
	}
	
	return Port;
}
     208:	08 95       	ret

0000020a <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh>:

void CArduinoProcessor::PackPinsToBitfield(arduinoPinNames_E pins[8], int *NumberOfPinsToPack, uint8_t *Bitfield)
{
     20a:	af 92       	push	r10
     20c:	bf 92       	push	r11
     20e:	df 92       	push	r13
     210:	ef 92       	push	r14
     212:	ff 92       	push	r15
     214:	0f 93       	push	r16
     216:	1f 93       	push	r17
     218:	cf 93       	push	r28
     21a:	df 93       	push	r29
     21c:	da 01       	movw	r26, r20
     21e:	59 01       	movw	r10, r18
	arduinoPortNames_E PortUsed = e_INVALIDPORTASSIGNMMENT;
	
	for (int i = 0; i < *NumberOfPinsToPack; i++)
     220:	8d 91       	ld	r24, X+
     222:	9c 91       	ld	r25, X
     224:	11 97       	sbiw	r26, 0x01	; 1
     226:	18 16       	cp	r1, r24
     228:	19 06       	cpc	r1, r25
     22a:	0c f0       	brlt	.+2      	; 0x22e <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x24>
     22c:	c4 c0       	rjmp	.+392    	; 0x3b6 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x1ac>
     22e:	e6 2f       	mov	r30, r22
     230:	f7 2f       	mov	r31, r23
     232:	80 e0       	ldi	r24, 0x00	; 0
     234:	90 e0       	ldi	r25, 0x00	; 0
	return Port;
}

void CArduinoProcessor::PackPinsToBitfield(arduinoPinNames_E pins[8], int *NumberOfPinsToPack, uint8_t *Bitfield)
{
	arduinoPortNames_E PortUsed = e_INVALIDPORTASSIGNMMENT;
     236:	04 e0       	ldi	r16, 0x04	; 4
					PortUsed = e_INVALIDPORTASSIGNMMENT;
				}
			}
			else
			{
				*Bitfield = ( 1 << Registers[pins[i]].AVRlibPinWord );
     238:	21 e0       	ldi	r18, 0x01	; 1
     23a:	30 e0       	ldi	r19, 0x00	; 0
				PortUsed = e_PORTC;
     23c:	68 94       	set
     23e:	ee 24       	eor	r14, r14
     240:	e1 f8       	bld	r14, 1
					PortUsed = e_PORTC;
				}
				else
				{
					*Bitfield = 0;
					PortUsed = e_INVALIDPORTASSIGNMMENT;
     242:	14 e0       	ldi	r17, 0x04	; 4
				}
			}
			else
			{
				*Bitfield = ( 1 << Registers[pins[i]].AVRlibPinWord );
				PortUsed = e_PORTB;
     244:	ff 24       	eor	r15, r15
     246:	f3 94       	inc	r15
				}
			}
			else
			{
				*Bitfield = ( 1 << Registers[pins[i]].AVRlibPinWord );
				PortUsed = e_PORTD;
     248:	0f 2e       	mov	r0, r31
     24a:	f3 e0       	ldi	r31, 0x03	; 3
     24c:	df 2e       	mov	r13, r31
     24e:	f0 2d       	mov	r31, r0
{
	arduinoPortNames_E PortUsed = e_INVALIDPORTASSIGNMMENT;
	
	for (int i = 0; i < *NumberOfPinsToPack; i++)
	{
		switch (pins[i])
     250:	41 91       	ld	r20, Z+
     252:	4e 30       	cpi	r20, 0x0E	; 14
     254:	18 f4       	brcc	.+6      	; 0x25c <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x52>
     256:	48 30       	cpi	r20, 0x08	; 8
     258:	d8 f5       	brcc	.+118    	; 0x2d0 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0xc6>
     25a:	04 c0       	rjmp	.+8      	; 0x264 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x5a>
     25c:	44 31       	cpi	r20, 0x14	; 20
     25e:	08 f0       	brcs	.+2      	; 0x262 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x58>
     260:	a2 c0       	rjmp	.+324    	; 0x3a6 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x19c>
     262:	6c c0       	rjmp	.+216    	; 0x33c <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x132>
			case Pd4:
			case Pd5:
			case Pd6:
			case Pd7:
			// If this isn't the first pass
			if ( i != 0 )
     264:	00 97       	sbiw	r24, 0x00	; 0
     266:	f9 f0       	breq	.+62     	; 0x2a6 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x9c>
			{
				// If the last port used is the same as this one's keep on working, otherwise exit
				if (PortUsed == e_PORTD) 
     268:	03 30       	cpi	r16, 0x03	; 3
     26a:	c9 f4       	brne	.+50     	; 0x29e <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x94>
				{
					*Bitfield += ( 1 << Registers[pins[i]].AVRlibPinWord);
     26c:	50 e0       	ldi	r21, 0x00	; 0
     26e:	44 0f       	add	r20, r20
     270:	55 1f       	adc	r21, r21
     272:	44 0f       	add	r20, r20
     274:	55 1f       	adc	r21, r21
     276:	44 0f       	add	r20, r20
     278:	55 1f       	adc	r21, r21
     27a:	45 58       	subi	r20, 0x85	; 133
     27c:	5e 4f       	sbci	r21, 0xFE	; 254
     27e:	ea 01       	movw	r28, r20
     280:	4e 81       	ldd	r20, Y+6	; 0x06
     282:	e5 01       	movw	r28, r10
     284:	68 81       	ld	r22, Y
     286:	e9 01       	movw	r28, r18
     288:	02 c0       	rjmp	.+4      	; 0x28e <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x84>
     28a:	cc 0f       	add	r28, r28
     28c:	dd 1f       	adc	r29, r29
     28e:	4a 95       	dec	r20
     290:	e2 f7       	brpl	.-8      	; 0x28a <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x80>
     292:	ae 01       	movw	r20, r28
     294:	46 0f       	add	r20, r22
     296:	51 1d       	adc	r21, r1
     298:	e5 01       	movw	r28, r10
     29a:	48 83       	st	Y, r20
     29c:	84 c0       	rjmp	.+264    	; 0x3a6 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x19c>
					PortUsed = e_PORTD;
				}
				else
				{
					*Bitfield = 0;
     29e:	e5 01       	movw	r28, r10
     2a0:	18 82       	st	Y, r1
					PortUsed = e_INVALIDPORTASSIGNMMENT;
     2a2:	01 2f       	mov	r16, r17
     2a4:	80 c0       	rjmp	.+256    	; 0x3a6 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x19c>
				}
			}
			else
			{
				*Bitfield = ( 1 << Registers[pins[i]].AVRlibPinWord );
     2a6:	50 e0       	ldi	r21, 0x00	; 0
     2a8:	44 0f       	add	r20, r20
     2aa:	55 1f       	adc	r21, r21
     2ac:	44 0f       	add	r20, r20
     2ae:	55 1f       	adc	r21, r21
     2b0:	44 0f       	add	r20, r20
     2b2:	55 1f       	adc	r21, r21
     2b4:	45 58       	subi	r20, 0x85	; 133
     2b6:	5e 4f       	sbci	r21, 0xFE	; 254
     2b8:	ea 01       	movw	r28, r20
     2ba:	4e 81       	ldd	r20, Y+6	; 0x06
     2bc:	d2 2f       	mov	r29, r18
     2be:	01 c0       	rjmp	.+2      	; 0x2c2 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0xb8>
     2c0:	dd 0f       	add	r29, r29
     2c2:	4a 95       	dec	r20
     2c4:	ea f7       	brpl	.-6      	; 0x2c0 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0xb6>
     2c6:	4d 2f       	mov	r20, r29
     2c8:	e5 01       	movw	r28, r10
     2ca:	48 83       	st	Y, r20
				PortUsed = e_PORTD;
     2cc:	0d 2d       	mov	r16, r13
     2ce:	6b c0       	rjmp	.+214    	; 0x3a6 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x19c>
			case Pb2:
			case Pb3:
			case Pb4:
			case Pb5:
			// If this isn't the first pass
			if ( i != 0 )
     2d0:	00 97       	sbiw	r24, 0x00	; 0
     2d2:	f9 f0       	breq	.+62     	; 0x312 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x108>
			{
				// If the last port used is the same as this one's keep on working, otherwise exit
				if (PortUsed == e_PORTB)
     2d4:	01 30       	cpi	r16, 0x01	; 1
     2d6:	c9 f4       	brne	.+50     	; 0x30a <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x100>
				{
					*Bitfield += ( 1 << Registers[pins[i]].AVRlibPinWord );
     2d8:	50 e0       	ldi	r21, 0x00	; 0
     2da:	44 0f       	add	r20, r20
     2dc:	55 1f       	adc	r21, r21
     2de:	44 0f       	add	r20, r20
     2e0:	55 1f       	adc	r21, r21
     2e2:	44 0f       	add	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	45 58       	subi	r20, 0x85	; 133
     2e8:	5e 4f       	sbci	r21, 0xFE	; 254
     2ea:	ea 01       	movw	r28, r20
     2ec:	4e 81       	ldd	r20, Y+6	; 0x06
     2ee:	e5 01       	movw	r28, r10
     2f0:	68 81       	ld	r22, Y
     2f2:	e9 01       	movw	r28, r18
     2f4:	02 c0       	rjmp	.+4      	; 0x2fa <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0xf0>
     2f6:	cc 0f       	add	r28, r28
     2f8:	dd 1f       	adc	r29, r29
     2fa:	4a 95       	dec	r20
     2fc:	e2 f7       	brpl	.-8      	; 0x2f6 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0xec>
     2fe:	ae 01       	movw	r20, r28
     300:	46 0f       	add	r20, r22
     302:	51 1d       	adc	r21, r1
     304:	e5 01       	movw	r28, r10
     306:	48 83       	st	Y, r20
     308:	4e c0       	rjmp	.+156    	; 0x3a6 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x19c>
					PortUsed = e_PORTB;
				}
				else
				{
					*Bitfield = 0;
     30a:	e5 01       	movw	r28, r10
     30c:	18 82       	st	Y, r1
					PortUsed = e_INVALIDPORTASSIGNMMENT;
     30e:	01 2f       	mov	r16, r17
     310:	4a c0       	rjmp	.+148    	; 0x3a6 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x19c>
				}
			}
			else
			{
				*Bitfield = ( 1 << Registers[pins[i]].AVRlibPinWord );
     312:	50 e0       	ldi	r21, 0x00	; 0
     314:	44 0f       	add	r20, r20
     316:	55 1f       	adc	r21, r21
     318:	44 0f       	add	r20, r20
     31a:	55 1f       	adc	r21, r21
     31c:	44 0f       	add	r20, r20
     31e:	55 1f       	adc	r21, r21
     320:	45 58       	subi	r20, 0x85	; 133
     322:	5e 4f       	sbci	r21, 0xFE	; 254
     324:	ea 01       	movw	r28, r20
     326:	4e 81       	ldd	r20, Y+6	; 0x06
     328:	d2 2f       	mov	r29, r18
     32a:	01 c0       	rjmp	.+2      	; 0x32e <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x124>
     32c:	dd 0f       	add	r29, r29
     32e:	4a 95       	dec	r20
     330:	ea f7       	brpl	.-6      	; 0x32c <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x122>
     332:	4d 2f       	mov	r20, r29
     334:	e5 01       	movw	r28, r10
     336:	48 83       	st	Y, r20
				PortUsed = e_PORTB;
     338:	0f 2d       	mov	r16, r15
     33a:	35 c0       	rjmp	.+106    	; 0x3a6 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x19c>
			case Pc2:
			case Pc3:
			case Pc4:
			case Pc5:
			// If this isn't the first pass
			if ( i != 0 )
     33c:	00 97       	sbiw	r24, 0x00	; 0
     33e:	f9 f0       	breq	.+62     	; 0x37e <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x174>
			{
				// If the last port used is the same as this one's keep on working, otherwise exit
				if (PortUsed == e_PORTC)
     340:	02 30       	cpi	r16, 0x02	; 2
     342:	c9 f4       	brne	.+50     	; 0x376 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x16c>
				{
					*Bitfield += ( 1 << Registers[pins[i]].AVRlibPinWord );
     344:	50 e0       	ldi	r21, 0x00	; 0
     346:	44 0f       	add	r20, r20
     348:	55 1f       	adc	r21, r21
     34a:	44 0f       	add	r20, r20
     34c:	55 1f       	adc	r21, r21
     34e:	44 0f       	add	r20, r20
     350:	55 1f       	adc	r21, r21
     352:	45 58       	subi	r20, 0x85	; 133
     354:	5e 4f       	sbci	r21, 0xFE	; 254
     356:	ea 01       	movw	r28, r20
     358:	4e 81       	ldd	r20, Y+6	; 0x06
     35a:	e5 01       	movw	r28, r10
     35c:	68 81       	ld	r22, Y
     35e:	e9 01       	movw	r28, r18
     360:	02 c0       	rjmp	.+4      	; 0x366 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x15c>
     362:	cc 0f       	add	r28, r28
     364:	dd 1f       	adc	r29, r29
     366:	4a 95       	dec	r20
     368:	e2 f7       	brpl	.-8      	; 0x362 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x158>
     36a:	ae 01       	movw	r20, r28
     36c:	46 0f       	add	r20, r22
     36e:	51 1d       	adc	r21, r1
     370:	e5 01       	movw	r28, r10
     372:	48 83       	st	Y, r20
     374:	18 c0       	rjmp	.+48     	; 0x3a6 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x19c>
					PortUsed = e_PORTC;
				}
				else
				{
					*Bitfield = 0;
     376:	e5 01       	movw	r28, r10
     378:	18 82       	st	Y, r1
					PortUsed = e_INVALIDPORTASSIGNMMENT;
     37a:	01 2f       	mov	r16, r17
     37c:	14 c0       	rjmp	.+40     	; 0x3a6 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x19c>
				}
			}
			else
			{
				*Bitfield = ( 1 << Registers[pins[i]].AVRlibPinWord );
     37e:	50 e0       	ldi	r21, 0x00	; 0
     380:	44 0f       	add	r20, r20
     382:	55 1f       	adc	r21, r21
     384:	44 0f       	add	r20, r20
     386:	55 1f       	adc	r21, r21
     388:	44 0f       	add	r20, r20
     38a:	55 1f       	adc	r21, r21
     38c:	45 58       	subi	r20, 0x85	; 133
     38e:	5e 4f       	sbci	r21, 0xFE	; 254
     390:	ea 01       	movw	r28, r20
     392:	4e 81       	ldd	r20, Y+6	; 0x06
     394:	d2 2f       	mov	r29, r18
     396:	01 c0       	rjmp	.+2      	; 0x39a <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x190>
     398:	dd 0f       	add	r29, r29
     39a:	4a 95       	dec	r20
     39c:	ea f7       	brpl	.-6      	; 0x398 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x18e>
     39e:	4d 2f       	mov	r20, r29
     3a0:	e5 01       	movw	r28, r10
     3a2:	48 83       	st	Y, r20
				PortUsed = e_PORTC;
     3a4:	0e 2d       	mov	r16, r14

void CArduinoProcessor::PackPinsToBitfield(arduinoPinNames_E pins[8], int *NumberOfPinsToPack, uint8_t *Bitfield)
{
	arduinoPortNames_E PortUsed = e_INVALIDPORTASSIGNMMENT;
	
	for (int i = 0; i < *NumberOfPinsToPack; i++)
     3a6:	01 96       	adiw	r24, 0x01	; 1
     3a8:	6d 91       	ld	r22, X+
     3aa:	7c 91       	ld	r23, X
     3ac:	11 97       	sbiw	r26, 0x01	; 1
     3ae:	86 17       	cp	r24, r22
     3b0:	97 07       	cpc	r25, r23
     3b2:	0c f4       	brge	.+2      	; 0x3b6 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x1ac>
     3b4:	4d cf       	rjmp	.-358    	; 0x250 <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh+0x46>
			break;
		}
	}
	
	return;
}
     3b6:	df 91       	pop	r29
     3b8:	cf 91       	pop	r28
     3ba:	1f 91       	pop	r17
     3bc:	0f 91       	pop	r16
     3be:	ff 90       	pop	r15
     3c0:	ef 90       	pop	r14
     3c2:	df 90       	pop	r13
     3c4:	bf 90       	pop	r11
     3c6:	af 90       	pop	r10
     3c8:	08 95       	ret

000003ca <_ZN17CArduinoProcessor9createMapEv>:

void CArduinoProcessor::createMap()
{
	if(RegistersAlreadySet== false)
     3ca:	80 91 7a 01 	lds	r24, 0x017A
     3ce:	81 11       	cpse	r24, r1
     3d0:	5b c1       	rjmp	.+694    	; 0x688 <_ZN17CArduinoProcessor9createMapEv+0x2be>
	{
		Registers[Pd0].port = &PORTD;
     3d2:	4b e2       	ldi	r20, 0x2B	; 43
     3d4:	50 e0       	ldi	r21, 0x00	; 0
     3d6:	50 93 7c 01 	sts	0x017C, r21
     3da:	40 93 7b 01 	sts	0x017B, r20
		Registers[Pd0].pin = &PIND;
     3de:	29 e2       	ldi	r18, 0x29	; 41
     3e0:	30 e0       	ldi	r19, 0x00	; 0
     3e2:	30 93 7e 01 	sts	0x017E, r19
     3e6:	20 93 7d 01 	sts	0x017D, r18
		Registers[Pd0].DDR = &DDRD;
     3ea:	8a e2       	ldi	r24, 0x2A	; 42
     3ec:	90 e0       	ldi	r25, 0x00	; 0
     3ee:	90 93 80 01 	sts	0x0180, r25
     3f2:	80 93 7f 01 	sts	0x017F, r24
		Registers[Pd0].AVRlibPinWord = PORTD0;
     3f6:	10 92 81 01 	sts	0x0181, r1
		Registers[Pd0].pinIsClaimed = Unclaimed;
     3fa:	10 92 82 01 	sts	0x0182, r1

		Registers[Pd1].port = &PORTD;
     3fe:	50 93 84 01 	sts	0x0184, r21
     402:	40 93 83 01 	sts	0x0183, r20
		Registers[Pd1].pin = &PIND;
     406:	30 93 86 01 	sts	0x0186, r19
     40a:	20 93 85 01 	sts	0x0185, r18
		Registers[Pd1].DDR = &DDRD;
     40e:	90 93 88 01 	sts	0x0188, r25
     412:	80 93 87 01 	sts	0x0187, r24
		Registers[Pd1].AVRlibPinWord = PORTD1;
     416:	61 e0       	ldi	r22, 0x01	; 1
     418:	60 93 89 01 	sts	0x0189, r22
		Registers[Pd1].pinIsClaimed = Unclaimed;
     41c:	10 92 8a 01 	sts	0x018A, r1

		Registers[Pd2].port = &PORTD;
     420:	50 93 8c 01 	sts	0x018C, r21
     424:	40 93 8b 01 	sts	0x018B, r20
		Registers[Pd2].pin = &PIND;
     428:	30 93 8e 01 	sts	0x018E, r19
     42c:	20 93 8d 01 	sts	0x018D, r18
		Registers[Pd2].DDR = &DDRD;
     430:	90 93 90 01 	sts	0x0190, r25
     434:	80 93 8f 01 	sts	0x018F, r24
		Registers[Pd2].AVRlibPinWord = PORTD2;
     438:	a2 e0       	ldi	r26, 0x02	; 2
     43a:	a0 93 91 01 	sts	0x0191, r26
		Registers[Pd2].pinIsClaimed = Unclaimed;
     43e:	10 92 92 01 	sts	0x0192, r1

		Registers[Pd3].port = &PORTD;
     442:	50 93 94 01 	sts	0x0194, r21
     446:	40 93 93 01 	sts	0x0193, r20
		Registers[Pd3].pin = &PIND;
     44a:	30 93 96 01 	sts	0x0196, r19
     44e:	20 93 95 01 	sts	0x0195, r18
		Registers[Pd3].DDR = &DDRD;
     452:	90 93 98 01 	sts	0x0198, r25
     456:	80 93 97 01 	sts	0x0197, r24
		Registers[Pd3].AVRlibPinWord = PORTD3;
     45a:	f3 e0       	ldi	r31, 0x03	; 3
     45c:	f0 93 99 01 	sts	0x0199, r31
		Registers[Pd3].pinIsClaimed = Unclaimed;
     460:	10 92 9a 01 	sts	0x019A, r1

		Registers[Pd4].port = &PORTD;
     464:	50 93 9c 01 	sts	0x019C, r21
     468:	40 93 9b 01 	sts	0x019B, r20
		Registers[Pd4].pin = &PIND;
     46c:	30 93 9e 01 	sts	0x019E, r19
     470:	20 93 9d 01 	sts	0x019D, r18
		Registers[Pd4].DDR = &DDRD;
     474:	90 93 a0 01 	sts	0x01A0, r25
     478:	80 93 9f 01 	sts	0x019F, r24
		Registers[Pd4].AVRlibPinWord = PORTD4;
     47c:	e4 e0       	ldi	r30, 0x04	; 4
     47e:	e0 93 a1 01 	sts	0x01A1, r30
		Registers[Pd4].pinIsClaimed = Unclaimed;
     482:	10 92 a2 01 	sts	0x01A2, r1

		Registers[Pd5].port = &PORTD;
     486:	50 93 a4 01 	sts	0x01A4, r21
     48a:	40 93 a3 01 	sts	0x01A3, r20
		Registers[Pd5].pin = &PIND;
     48e:	30 93 a6 01 	sts	0x01A6, r19
     492:	20 93 a5 01 	sts	0x01A5, r18
		Registers[Pd5].DDR = &DDRD;
     496:	90 93 a8 01 	sts	0x01A8, r25
     49a:	80 93 a7 01 	sts	0x01A7, r24
		Registers[Pd5].AVRlibPinWord = PORTD5;
     49e:	75 e0       	ldi	r23, 0x05	; 5
     4a0:	70 93 a9 01 	sts	0x01A9, r23
		Registers[Pd5].pinIsClaimed = Unclaimed;
     4a4:	10 92 aa 01 	sts	0x01AA, r1

		Registers[Pd6].port = &PORTD;
     4a8:	50 93 ac 01 	sts	0x01AC, r21
     4ac:	40 93 ab 01 	sts	0x01AB, r20
		Registers[Pd6].pin = &PIND;
     4b0:	30 93 ae 01 	sts	0x01AE, r19
     4b4:	20 93 ad 01 	sts	0x01AD, r18
		Registers[Pd6].DDR = &DDRD;
     4b8:	90 93 b0 01 	sts	0x01B0, r25
     4bc:	80 93 af 01 	sts	0x01AF, r24
		Registers[Pd6].AVRlibPinWord = PORTD6;
     4c0:	b6 e0       	ldi	r27, 0x06	; 6
     4c2:	b0 93 b1 01 	sts	0x01B1, r27
		Registers[Pd6].pinIsClaimed = Unclaimed;
     4c6:	10 92 b2 01 	sts	0x01B2, r1

		Registers[Pd7].port = &PORTD;
     4ca:	50 93 b4 01 	sts	0x01B4, r21
     4ce:	40 93 b3 01 	sts	0x01B3, r20
		Registers[Pd7].pin = &PIND;
     4d2:	30 93 b6 01 	sts	0x01B6, r19
     4d6:	20 93 b5 01 	sts	0x01B5, r18
		Registers[Pd7].DDR = &DDRD;
     4da:	90 93 b8 01 	sts	0x01B8, r25
     4de:	80 93 b7 01 	sts	0x01B7, r24
		Registers[Pd7].AVRlibPinWord = PORTD7;
     4e2:	87 e0       	ldi	r24, 0x07	; 7
     4e4:	80 93 b9 01 	sts	0x01B9, r24
		Registers[Pd7].pinIsClaimed = Unclaimed;
     4e8:	10 92 ba 01 	sts	0x01BA, r1



		Registers[Pb0].port = &PORTB;
     4ec:	45 e2       	ldi	r20, 0x25	; 37
     4ee:	50 e0       	ldi	r21, 0x00	; 0
     4f0:	50 93 bc 01 	sts	0x01BC, r21
     4f4:	40 93 bb 01 	sts	0x01BB, r20
		Registers[Pb0].pin = &PINB;
     4f8:	23 e2       	ldi	r18, 0x23	; 35
     4fa:	30 e0       	ldi	r19, 0x00	; 0
     4fc:	30 93 be 01 	sts	0x01BE, r19
     500:	20 93 bd 01 	sts	0x01BD, r18
		Registers[Pb0].DDR = &DDRB;
     504:	84 e2       	ldi	r24, 0x24	; 36
     506:	90 e0       	ldi	r25, 0x00	; 0
     508:	90 93 c0 01 	sts	0x01C0, r25
     50c:	80 93 bf 01 	sts	0x01BF, r24
		Registers[Pb0].AVRlibPinWord = PORTB0;
     510:	10 92 c1 01 	sts	0x01C1, r1
		Registers[Pb0].pinIsClaimed = Unclaimed;
     514:	10 92 c2 01 	sts	0x01C2, r1

		Registers[Pb1].port = &PORTB;
     518:	50 93 c4 01 	sts	0x01C4, r21
     51c:	40 93 c3 01 	sts	0x01C3, r20
		Registers[Pb1].pin = &PINB;
     520:	30 93 c6 01 	sts	0x01C6, r19
     524:	20 93 c5 01 	sts	0x01C5, r18
		Registers[Pb1].DDR = &DDRB;
     528:	90 93 c8 01 	sts	0x01C8, r25
     52c:	80 93 c7 01 	sts	0x01C7, r24
		Registers[Pb1].AVRlibPinWord = PORTB1;
     530:	60 93 c9 01 	sts	0x01C9, r22
		Registers[Pb1].pinIsClaimed = Unclaimed;
     534:	10 92 ca 01 	sts	0x01CA, r1

		Registers[Pb2].port = &PORTB;
     538:	50 93 cc 01 	sts	0x01CC, r21
     53c:	40 93 cb 01 	sts	0x01CB, r20
		Registers[Pb2].pin = &PINB;
     540:	30 93 ce 01 	sts	0x01CE, r19
     544:	20 93 cd 01 	sts	0x01CD, r18
		Registers[Pb2].DDR = &DDRB;
     548:	90 93 d0 01 	sts	0x01D0, r25
     54c:	80 93 cf 01 	sts	0x01CF, r24
		Registers[Pb2].AVRlibPinWord = PORTB2;
     550:	a0 93 d1 01 	sts	0x01D1, r26
		Registers[Pb2].pinIsClaimed = Unclaimed;
     554:	10 92 d2 01 	sts	0x01D2, r1

		Registers[Pb3].port = &PORTB;
     558:	50 93 d4 01 	sts	0x01D4, r21
     55c:	40 93 d3 01 	sts	0x01D3, r20
		Registers[Pb3].pin = &PINB;
     560:	30 93 d6 01 	sts	0x01D6, r19
     564:	20 93 d5 01 	sts	0x01D5, r18
		Registers[Pb3].DDR = &DDRB;
     568:	90 93 d8 01 	sts	0x01D8, r25
     56c:	80 93 d7 01 	sts	0x01D7, r24
		Registers[Pb3].AVRlibPinWord = PORTB3;
     570:	f0 93 d9 01 	sts	0x01D9, r31
		Registers[Pb3].pinIsClaimed = Unclaimed;
     574:	10 92 da 01 	sts	0x01DA, r1

		Registers[Pb4].port = &PORTB;
     578:	50 93 dc 01 	sts	0x01DC, r21
     57c:	40 93 db 01 	sts	0x01DB, r20
		Registers[Pb4].pin = &PINB;
     580:	30 93 de 01 	sts	0x01DE, r19
     584:	20 93 dd 01 	sts	0x01DD, r18
		Registers[Pb4].DDR = &DDRB;
     588:	90 93 e0 01 	sts	0x01E0, r25
     58c:	80 93 df 01 	sts	0x01DF, r24
		Registers[Pb4].AVRlibPinWord = PORTB4;
     590:	e0 93 e1 01 	sts	0x01E1, r30
		Registers[Pb4].pinIsClaimed = Unclaimed;
     594:	10 92 e2 01 	sts	0x01E2, r1

		Registers[Pb5].port = &PORTB;
     598:	50 93 e4 01 	sts	0x01E4, r21
     59c:	40 93 e3 01 	sts	0x01E3, r20
		Registers[Pb5].pin = &PINB;
     5a0:	30 93 e6 01 	sts	0x01E6, r19
     5a4:	20 93 e5 01 	sts	0x01E5, r18
		Registers[Pb5].DDR = &DDRB;
     5a8:	90 93 e8 01 	sts	0x01E8, r25
     5ac:	80 93 e7 01 	sts	0x01E7, r24
		Registers[Pb5].AVRlibPinWord = PORTB5;
     5b0:	70 93 e9 01 	sts	0x01E9, r23
		Registers[Pb5].pinIsClaimed = Unclaimed;
     5b4:	10 92 ea 01 	sts	0x01EA, r1



		Registers[Pc0].port = &PORTC;
     5b8:	48 e2       	ldi	r20, 0x28	; 40
     5ba:	50 e0       	ldi	r21, 0x00	; 0
     5bc:	50 93 ec 01 	sts	0x01EC, r21
     5c0:	40 93 eb 01 	sts	0x01EB, r20
		Registers[Pc0].pin = &PINC;
     5c4:	26 e2       	ldi	r18, 0x26	; 38
     5c6:	30 e0       	ldi	r19, 0x00	; 0
     5c8:	30 93 ee 01 	sts	0x01EE, r19
     5cc:	20 93 ed 01 	sts	0x01ED, r18
		Registers[Pc0].DDR = &DDRC;
     5d0:	87 e2       	ldi	r24, 0x27	; 39
     5d2:	90 e0       	ldi	r25, 0x00	; 0
     5d4:	90 93 f0 01 	sts	0x01F0, r25
     5d8:	80 93 ef 01 	sts	0x01EF, r24
		Registers[Pc0].AVRlibPinWord = PORTC0;
     5dc:	10 92 f1 01 	sts	0x01F1, r1
		Registers[Pc0].pinIsClaimed = Unclaimed;
     5e0:	10 92 f2 01 	sts	0x01F2, r1

		Registers[Pc1].port = &PORTC;
     5e4:	50 93 f4 01 	sts	0x01F4, r21
     5e8:	40 93 f3 01 	sts	0x01F3, r20
		Registers[Pc1].pin = &PINC;
     5ec:	30 93 f6 01 	sts	0x01F6, r19
     5f0:	20 93 f5 01 	sts	0x01F5, r18
		Registers[Pc1].DDR = &DDRC;
     5f4:	90 93 f8 01 	sts	0x01F8, r25
     5f8:	80 93 f7 01 	sts	0x01F7, r24
		Registers[Pc1].AVRlibPinWord = PORTC1;
     5fc:	60 93 f9 01 	sts	0x01F9, r22
		Registers[Pc1].pinIsClaimed = Unclaimed;
     600:	10 92 fa 01 	sts	0x01FA, r1

		Registers[Pc2].port = &PORTC;
     604:	50 93 fc 01 	sts	0x01FC, r21
     608:	40 93 fb 01 	sts	0x01FB, r20
		Registers[Pc2].pin = &PINC;
     60c:	30 93 fe 01 	sts	0x01FE, r19
     610:	20 93 fd 01 	sts	0x01FD, r18
		Registers[Pc2].DDR = &DDRC;
     614:	90 93 00 02 	sts	0x0200, r25
     618:	80 93 ff 01 	sts	0x01FF, r24
		Registers[Pc2].AVRlibPinWord = PORTC2;
     61c:	a0 93 01 02 	sts	0x0201, r26
		Registers[Pc2].pinIsClaimed = Unclaimed;
     620:	10 92 02 02 	sts	0x0202, r1

		Registers[Pc3].port = &PORTC;
     624:	50 93 04 02 	sts	0x0204, r21
     628:	40 93 03 02 	sts	0x0203, r20
		Registers[Pc3].pin = &PINC;
     62c:	30 93 06 02 	sts	0x0206, r19
     630:	20 93 05 02 	sts	0x0205, r18
		Registers[Pc3].DDR = &DDRC;
     634:	90 93 08 02 	sts	0x0208, r25
     638:	80 93 07 02 	sts	0x0207, r24
		Registers[Pc3].AVRlibPinWord = PORTC3;
     63c:	f0 93 09 02 	sts	0x0209, r31
		Registers[Pc3].pinIsClaimed = Unclaimed;
     640:	10 92 0a 02 	sts	0x020A, r1

		Registers[Pc4].port = &PORTC;
     644:	50 93 0c 02 	sts	0x020C, r21
     648:	40 93 0b 02 	sts	0x020B, r20
		Registers[Pc4].pin = &PINC;
     64c:	30 93 0e 02 	sts	0x020E, r19
     650:	20 93 0d 02 	sts	0x020D, r18
		Registers[Pc4].DDR = &DDRC;
     654:	90 93 10 02 	sts	0x0210, r25
     658:	80 93 0f 02 	sts	0x020F, r24
		Registers[Pc4].AVRlibPinWord = PORTC4;
     65c:	e0 93 11 02 	sts	0x0211, r30
		Registers[Pc4].pinIsClaimed = Unclaimed;
     660:	10 92 12 02 	sts	0x0212, r1

		Registers[Pc5].port = &PORTC;
     664:	50 93 14 02 	sts	0x0214, r21
     668:	40 93 13 02 	sts	0x0213, r20
		Registers[Pc5].pin = &PINC;
     66c:	30 93 16 02 	sts	0x0216, r19
     670:	20 93 15 02 	sts	0x0215, r18
		Registers[Pc5].DDR = &DDRC;
     674:	90 93 18 02 	sts	0x0218, r25
     678:	80 93 17 02 	sts	0x0217, r24
		Registers[Pc5].AVRlibPinWord = PORTC5;
     67c:	70 93 19 02 	sts	0x0219, r23
		Registers[Pc5].pinIsClaimed = Unclaimed;
     680:	10 92 1a 02 	sts	0x021A, r1
		
		RegistersAlreadySet = true;
     684:	60 93 7a 01 	sts	0x017A, r22
     688:	08 95       	ret

0000068a <_ZN17CArduinoProcessorC1Ev>:
//External functions

 CArduinoProcessor::CArduinoProcessor( void )
 {
	// Set up the Pin Register Map
	createMap();
     68a:	9f ce       	rjmp	.-706    	; 0x3ca <_ZN17CArduinoProcessor9createMapEv>
     68c:	08 95       	ret

0000068e <_ZN7CButtonC1E17arduinoPinNames_E>:
{
	ButtonFailureStatus = BUTTON_INITIALIZED_INCORRECTLY;
	ButtonStatus = BUTTON_ERROR;
}

 CButton::CButton( arduinoPinNames_E A )
     68e:	1f 93       	push	r17
     690:	cf 93       	push	r28
     692:	df 93       	push	r29
     694:	ec 01       	movw	r28, r24
     696:	16 2f       	mov	r17, r22
#ifdef __AVR_ATmega328P__ //Duemilanove and Uno
#include "ATmega328P.h"
#endif


class CArduinoInterface : public CArduinoProcessor
     698:	f8 df       	rcall	.-16     	; 0x68a <_ZN17CArduinoProcessorC1Ev>
{
	ButtonPin = A;
     69a:	1b 83       	std	Y+3, r17	; 0x03
	
	if (this->SetReadStatus(ButtonPin) == false)
     69c:	61 2f       	mov	r22, r17
     69e:	ce 01       	movw	r24, r28
     6a0:	0d dd       	rcall	.-1510   	; 0xbc <_ZN17CArduinoProcessor13SetReadStatusE17arduinoPinNames_E>
     6a2:	81 11       	cpse	r24, r1
     6a4:	04 c0       	rjmp	.+8      	; 0x6ae <_ZN7CButtonC1E17arduinoPinNames_E+0x20>
	{
		ButtonFailureState = BUTTON_PIN_ALREADY_CLAIMED;
     6a6:	82 e0       	ldi	r24, 0x02	; 2
     6a8:	88 83       	st	Y, r24
		ButtonStatus = BUTTON_ERROR;
     6aa:	19 82       	std	Y+1, r1	; 0x01
     6ac:	0a c0       	rjmp	.+20     	; 0x6c2 <_ZN7CButtonC1E17arduinoPinNames_E+0x34>
	}
	else if(this->SetPullUpStatus(ButtonPin) == false)
     6ae:	6b 81       	ldd	r22, Y+3	; 0x03
     6b0:	ce 01       	movw	r24, r28
     6b2:	32 dd       	rcall	.-1436   	; 0x118 <_ZN17CArduinoProcessor15SetPullUpStatusE17arduinoPinNames_E>
     6b4:	81 11       	cpse	r24, r1
     6b6:	04 c0       	rjmp	.+8      	; 0x6c0 <_ZN7CButtonC1E17arduinoPinNames_E+0x32>
	{
		ButtonFailureState = BUTTON_PIN_ALREADY_CLAIMED;
     6b8:	82 e0       	ldi	r24, 0x02	; 2
     6ba:	88 83       	st	Y, r24
		ButtonStatus = BUTTON_ERROR;
     6bc:	19 82       	std	Y+1, r1	; 0x01
     6be:	01 c0       	rjmp	.+2      	; 0x6c2 <_ZN7CButtonC1E17arduinoPinNames_E+0x34>
	}
	else
	{
		ButtonFailureState = BUTTON_NO_FAILURE;
     6c0:	18 82       	st	Y, r1
	}
}
     6c2:	df 91       	pop	r29
     6c4:	cf 91       	pop	r28
     6c6:	1f 91       	pop	r17
     6c8:	08 95       	ret

000006ca <_ZN7CButton10ReadButtonEv>:

void CButton::ReadButton( void )
{
     6ca:	cf 93       	push	r28
     6cc:	df 93       	push	r29
     6ce:	ec 01       	movw	r28, r24
	if (ButtonFailureState == BUTTON_NO_FAILURE)
     6d0:	88 81       	ld	r24, Y
     6d2:	81 11       	cpse	r24, r1
     6d4:	0c c0       	rjmp	.+24     	; 0x6ee <_ZN7CButton10ReadButtonEv+0x24>
	{
		if (this->ReadDigitalPin(&ButtonPin) == 0)
     6d6:	be 01       	movw	r22, r28
     6d8:	6d 5f       	subi	r22, 0xFD	; 253
     6da:	7f 4f       	sbci	r23, 0xFF	; 255
     6dc:	ce 01       	movw	r24, r28
     6de:	45 dd       	rcall	.-1398   	; 0x16a <_ZN17CArduinoProcessor14ReadDigitalPinEP17arduinoPinNames_E>
     6e0:	89 2b       	or	r24, r25
     6e2:	19 f4       	brne	.+6      	; 0x6ea <_ZN7CButton10ReadButtonEv+0x20>
		{
			ButtonStatus = BUTTON_PRESSED;
     6e4:	81 e0       	ldi	r24, 0x01	; 1
     6e6:	89 83       	std	Y+1, r24	; 0x01
     6e8:	02 c0       	rjmp	.+4      	; 0x6ee <_ZN7CButton10ReadButtonEv+0x24>
		} 
		else
		{
			ButtonStatus = BUTTON_RELEASED;
     6ea:	82 e0       	ldi	r24, 0x02	; 2
     6ec:	89 83       	std	Y+1, r24	; 0x01
		}
		
	}
}
     6ee:	df 91       	pop	r29
     6f0:	cf 91       	pop	r28
     6f2:	08 95       	ret

000006f4 <_ZN7CButton14GetButtonStateEv>:

ButtonStates CButton::GetButtonState( void )
{
	static ButtonStates Output;
	
	if (ButtonFailureStatus != BUTTON_NO_FAILURE)
     6f4:	fc 01       	movw	r30, r24
     6f6:	22 81       	ldd	r18, Z+2	; 0x02
     6f8:	22 23       	and	r18, r18
     6fa:	19 f0       	breq	.+6      	; 0x702 <_ZN7CButton14GetButtonStateEv+0xe>
	{
		Output = BUTTON_ERROR;
     6fc:	10 92 1b 02 	sts	0x021B, r1
     700:	04 c0       	rjmp	.+8      	; 0x70a <_ZN7CButton14GetButtonStateEv+0x16>
	} 
	else
	{
		Output = ButtonStatus;
     702:	fc 01       	movw	r30, r24
     704:	81 81       	ldd	r24, Z+1	; 0x01
     706:	80 93 1b 02 	sts	0x021B, r24
	}
	
	return Output;
	
     70a:	80 91 1b 02 	lds	r24, 0x021B
     70e:	08 95       	ret

00000710 <setup>:
 {
	 // Setup and start the interrupts
	 //SensorInputInterruptsInit();
	 
	 // Setup and start serial communication
	 Serial.begin(BAUDRATE);
     710:	40 e0       	ldi	r20, 0x00	; 0
     712:	52 ec       	ldi	r21, 0xC2	; 194
     714:	61 e0       	ldi	r22, 0x01	; 1
     716:	70 e0       	ldi	r23, 0x00	; 0
     718:	80 e9       	ldi	r24, 0x90	; 144
     71a:	92 e0       	ldi	r25, 0x02	; 2
     71c:	00 d3       	rcall	.+1536   	; 0xd1e <_ZN14HardwareSerial5beginEm>
	 
	 /* Show build information via serial interface */
#if defined(ENABLE_TEXT_MESSAGE)
	ShowBuildInfo();
     71e:	a6 c1       	rjmp	.+844    	; 0xa6c <_Z13ShowBuildInfov>

00000720 <loop>:
#endif	

 }

 void loop()
 {
     720:	af 92       	push	r10
     722:	bf 92       	push	r11
     724:	cf 92       	push	r12
     726:	df 92       	push	r13
     728:	ef 92       	push	r14
     72a:	ff 92       	push	r15
     72c:	0f 93       	push	r16
     72e:	1f 93       	push	r17
     730:	cf 93       	push	r28
     732:	df 93       	push	r29
	 static char string[64];
	 static char buffer[33];
	 static char buffer2[33];
	 char Portbee;
	 EncoderRoom1.ReadEncoder();
     734:	85 e4       	ldi	r24, 0x45	; 69
     736:	92 e0       	ldi	r25, 0x02	; 2
     738:	0f d1       	rcall	.+542    	; 0x958 <_ZN14CRotaryEncoder11ReadEncoderEv>
	 ButtonRoom1.ReadButton();
     73a:	80 e4       	ldi	r24, 0x40	; 64
     73c:	92 e0       	ldi	r25, 0x02	; 2
     73e:	c5 df       	rcall	.-118    	; 0x6ca <_ZN7CButton10ReadButtonEv>
	 
	 EncoderRoom2.ReadEncoder();
     740:	89 e3       	ldi	r24, 0x39	; 57
     742:	92 e0       	ldi	r25, 0x02	; 2
     744:	09 d1       	rcall	.+530    	; 0x958 <_ZN14CRotaryEncoder11ReadEncoderEv>
	 ButtonRoom2.ReadButton();
     746:	84 e3       	ldi	r24, 0x34	; 52
     748:	92 e0       	ldi	r25, 0x02	; 2
     74a:	bf df       	rcall	.-130    	; 0x6ca <_ZN7CButton10ReadButtonEv>
	 
	 EncoderRoom3.ReadEncoder();
     74c:	8d e2       	ldi	r24, 0x2D	; 45
     74e:	92 e0       	ldi	r25, 0x02	; 2
     750:	03 d1       	rcall	.+518    	; 0x958 <_ZN14CRotaryEncoder11ReadEncoderEv>
	 ButtonRoom3.ReadButton();
     752:	88 e2       	ldi	r24, 0x28	; 40
     754:	92 e0       	ldi	r25, 0x02	; 2
     756:	b9 df       	rcall	.-142    	; 0x6ca <_ZN7CButton10ReadButtonEv>
	 
	 EncoderRoom4.ReadEncoder();
     758:	81 e2       	ldi	r24, 0x21	; 33
     75a:	92 e0       	ldi	r25, 0x02	; 2
     75c:	fd d0       	rcall	.+506    	; 0x958 <_ZN14CRotaryEncoder11ReadEncoderEv>
	 ButtonRoom4.ReadButton();
     75e:	8c e1       	ldi	r24, 0x1C	; 28
     760:	92 e0       	ldi	r25, 0x02	; 2
     762:	b3 df       	rcall	.-154    	; 0x6ca <_ZN7CButton10ReadButtonEv>
	 sprintf(string, "%d %d %d %d %d %d %d %d\n",
	 //sprintf(string, "%d %d %d %d %d %d\n",
	 EncoderRoom1.GetEncoderLevel(), ButtonRoom1.GetButtonState(),
	 EncoderRoom2.GetEncoderLevel(), ButtonRoom2.GetButtonState(),
	 EncoderRoom3.GetEncoderLevel(), ButtonRoom3.GetButtonState(),
	 EncoderRoom4.GetEncoderLevel(), ButtonRoom4.GetButtonState() );
     764:	8c e1       	ldi	r24, 0x1C	; 28
     766:	92 e0       	ldi	r25, 0x02	; 2
     768:	c5 df       	rcall	.-118    	; 0x6f4 <_ZN7CButton14GetButtonStateEv>
     76a:	a8 2e       	mov	r10, r24
     76c:	81 e2       	ldi	r24, 0x21	; 33
     76e:	92 e0       	ldi	r25, 0x02	; 2
     770:	57 d1       	rcall	.+686    	; 0xa20 <_ZN14CRotaryEncoder15GetEncoderLevelEv>
     772:	c8 2e       	mov	r12, r24
     774:	b9 2e       	mov	r11, r25
	 
	 sprintf(string, "%d %d %d %d %d %d %d %d\n",
	 //sprintf(string, "%d %d %d %d %d %d\n",
	 EncoderRoom1.GetEncoderLevel(), ButtonRoom1.GetButtonState(),
	 EncoderRoom2.GetEncoderLevel(), ButtonRoom2.GetButtonState(),
	 EncoderRoom3.GetEncoderLevel(), ButtonRoom3.GetButtonState(),
     776:	88 e2       	ldi	r24, 0x28	; 40
     778:	92 e0       	ldi	r25, 0x02	; 2
     77a:	bc df       	rcall	.-136    	; 0x6f4 <_ZN7CButton14GetButtonStateEv>
     77c:	d8 2e       	mov	r13, r24
	 EncoderRoom4.GetEncoderLevel(), ButtonRoom4.GetButtonState() );
     77e:	8d e2       	ldi	r24, 0x2D	; 45
     780:	92 e0       	ldi	r25, 0x02	; 2
     782:	4e d1       	rcall	.+668    	; 0xa20 <_ZN14CRotaryEncoder15GetEncoderLevelEv>
     784:	f8 2e       	mov	r15, r24
     786:	e9 2e       	mov	r14, r25
	 ButtonRoom4.ReadButton();
	 
	 sprintf(string, "%d %d %d %d %d %d %d %d\n",
	 //sprintf(string, "%d %d %d %d %d %d\n",
	 EncoderRoom1.GetEncoderLevel(), ButtonRoom1.GetButtonState(),
	 EncoderRoom2.GetEncoderLevel(), ButtonRoom2.GetButtonState(),
     788:	84 e3       	ldi	r24, 0x34	; 52
     78a:	92 e0       	ldi	r25, 0x02	; 2
     78c:	b3 df       	rcall	.-154    	; 0x6f4 <_ZN7CButton14GetButtonStateEv>
     78e:	08 2f       	mov	r16, r24
	 EncoderRoom3.GetEncoderLevel(), ButtonRoom3.GetButtonState(),
	 EncoderRoom4.GetEncoderLevel(), ButtonRoom4.GetButtonState() );
     790:	89 e3       	ldi	r24, 0x39	; 57
     792:	92 e0       	ldi	r25, 0x02	; 2
     794:	45 d1       	rcall	.+650    	; 0xa20 <_ZN14CRotaryEncoder15GetEncoderLevelEv>
     796:	d8 2f       	mov	r29, r24
     798:	19 2f       	mov	r17, r25
	 EncoderRoom4.ReadEncoder();
	 ButtonRoom4.ReadButton();
	 
	 sprintf(string, "%d %d %d %d %d %d %d %d\n",
	 //sprintf(string, "%d %d %d %d %d %d\n",
	 EncoderRoom1.GetEncoderLevel(), ButtonRoom1.GetButtonState(),
     79a:	80 e4       	ldi	r24, 0x40	; 64
     79c:	92 e0       	ldi	r25, 0x02	; 2
     79e:	aa df       	rcall	.-172    	; 0x6f4 <_ZN7CButton14GetButtonStateEv>
     7a0:	c8 2f       	mov	r28, r24
	 EncoderRoom2.GetEncoderLevel(), ButtonRoom2.GetButtonState(),
	 EncoderRoom3.GetEncoderLevel(), ButtonRoom3.GetButtonState(),
	 EncoderRoom4.GetEncoderLevel(), ButtonRoom4.GetButtonState() );
     7a2:	85 e4       	ldi	r24, 0x45	; 69
     7a4:	92 e0       	ldi	r25, 0x02	; 2
     7a6:	3c d1       	rcall	.+632    	; 0xa20 <_ZN14CRotaryEncoder15GetEncoderLevelEv>
     7a8:	1f 92       	push	r1
     7aa:	af 92       	push	r10
     7ac:	bf 92       	push	r11
     7ae:	cf 92       	push	r12
     7b0:	1f 92       	push	r1
     7b2:	df 92       	push	r13
     7b4:	ef 92       	push	r14
     7b6:	ff 92       	push	r15
     7b8:	1f 92       	push	r1
     7ba:	0f 93       	push	r16
     7bc:	1f 93       	push	r17
     7be:	df 93       	push	r29
     7c0:	1f 92       	push	r1
     7c2:	cf 93       	push	r28
     7c4:	9f 93       	push	r25
     7c6:	8f 93       	push	r24
     7c8:	82 e0       	ldi	r24, 0x02	; 2
     7ca:	91 e0       	ldi	r25, 0x01	; 1
     7cc:	9f 93       	push	r25
     7ce:	8f 93       	push	r24
     7d0:	cc e4       	ldi	r28, 0x4C	; 76
     7d2:	d2 e0       	ldi	r29, 0x02	; 2
     7d4:	df 93       	push	r29
     7d6:	cf 93       	push	r28
     7d8:	7e d5       	rcall	.+2812   	; 0x12d6 <sprintf>
    int getWriteError() { return write_error; }
    void clearWriteError() { setWriteError(0); }
  
    virtual size_t write(uint8_t) = 0;
    size_t write(const char *str) {
      if (str == NULL) return 0;
     7da:	8d b7       	in	r24, 0x3d	; 61
     7dc:	9e b7       	in	r25, 0x3e	; 62
     7de:	44 96       	adiw	r24, 0x14	; 20
     7e0:	0f b6       	in	r0, 0x3f	; 63
     7e2:	f8 94       	cli
     7e4:	9e bf       	out	0x3e, r25	; 62
     7e6:	0f be       	out	0x3f, r0	; 63
     7e8:	8d bf       	out	0x3d, r24	; 61
      return write((const uint8_t *)str, strlen(str));
     7ea:	09 90       	ld	r0, Y+
     7ec:	00 20       	and	r0, r0
     7ee:	e9 f7       	brne	.-6      	; 0x7ea <loop+0xca>
     7f0:	21 97       	sbiw	r28, 0x01	; 1
     7f2:	ae 01       	movw	r20, r28
     7f4:	4c 54       	subi	r20, 0x4C	; 76
     7f6:	52 40       	sbci	r21, 0x02	; 2
     7f8:	e0 91 90 02 	lds	r30, 0x0290
     7fc:	f0 91 91 02 	lds	r31, 0x0291
     800:	02 80       	ldd	r0, Z+2	; 0x02
     802:	f3 81       	ldd	r31, Z+3	; 0x03
     804:	e0 2d       	mov	r30, r0
     806:	6c e4       	ldi	r22, 0x4C	; 76
     808:	72 e0       	ldi	r23, 0x02	; 2
     80a:	80 e9       	ldi	r24, 0x90	; 144
     80c:	92 e0       	ldi	r25, 0x02	; 2
     80e:	09 95       	icall
		 //itoa (Portbee, buffer, 2);
		 //sprintf(string, "%s\n", buffer);
		 //Serial.write(string);
	 //}
	 
 }
     810:	df 91       	pop	r29
     812:	cf 91       	pop	r28
     814:	1f 91       	pop	r17
     816:	0f 91       	pop	r16
     818:	ff 90       	pop	r15
     81a:	ef 90       	pop	r14
     81c:	df 90       	pop	r13
     81e:	cf 90       	pop	r12
     820:	bf 90       	pop	r11
     822:	af 90       	pop	r10
     824:	08 95       	ret

00000826 <_GLOBAL__sub_I_MESSAGE>:

// Local function prototypes
void SensorInputInterruptsInit(void);

// Global Objects
CRotaryEncoder EncoderRoom1(Pb0, Pb1);
     826:	49 e0       	ldi	r20, 0x09	; 9
     828:	68 e0       	ldi	r22, 0x08	; 8
     82a:	85 e4       	ldi	r24, 0x45	; 69
     82c:	92 e0       	ldi	r25, 0x02	; 2
     82e:	1f d0       	rcall	.+62     	; 0x86e <_ZN14CRotaryEncoderC1E17arduinoPinNames_ES0_>
CButton		ButtonRoom1(Pb2);
     830:	6a e0       	ldi	r22, 0x0A	; 10
     832:	80 e4       	ldi	r24, 0x40	; 64
     834:	92 e0       	ldi	r25, 0x02	; 2
     836:	2b df       	rcall	.-426    	; 0x68e <_ZN7CButtonC1E17arduinoPinNames_E>
 
CRotaryEncoder EncoderRoom2(Pb3, Pb4);
     838:	4c e0       	ldi	r20, 0x0C	; 12
     83a:	6b e0       	ldi	r22, 0x0B	; 11
     83c:	89 e3       	ldi	r24, 0x39	; 57
     83e:	92 e0       	ldi	r25, 0x02	; 2
     840:	16 d0       	rcall	.+44     	; 0x86e <_ZN14CRotaryEncoderC1E17arduinoPinNames_ES0_>
CButton		ButtonRoom2(Pb5);
     842:	6d e0       	ldi	r22, 0x0D	; 13
     844:	84 e3       	ldi	r24, 0x34	; 52
     846:	92 e0       	ldi	r25, 0x02	; 2
     848:	22 df       	rcall	.-444    	; 0x68e <_ZN7CButtonC1E17arduinoPinNames_E>
 
CRotaryEncoder EncoderRoom3(Pb0, Pb1);
     84a:	49 e0       	ldi	r20, 0x09	; 9
     84c:	68 e0       	ldi	r22, 0x08	; 8
     84e:	8d e2       	ldi	r24, 0x2D	; 45
     850:	92 e0       	ldi	r25, 0x02	; 2
     852:	0d d0       	rcall	.+26     	; 0x86e <_ZN14CRotaryEncoderC1E17arduinoPinNames_ES0_>
CButton		ButtonRoom3(Pb2);
     854:	6a e0       	ldi	r22, 0x0A	; 10
     856:	88 e2       	ldi	r24, 0x28	; 40
     858:	92 e0       	ldi	r25, 0x02	; 2
     85a:	19 df       	rcall	.-462    	; 0x68e <_ZN7CButtonC1E17arduinoPinNames_E>
 
CRotaryEncoder EncoderRoom4(Pb0, Pb1);
     85c:	49 e0       	ldi	r20, 0x09	; 9
     85e:	68 e0       	ldi	r22, 0x08	; 8
     860:	81 e2       	ldi	r24, 0x21	; 33
     862:	92 e0       	ldi	r25, 0x02	; 2
     864:	04 d0       	rcall	.+8      	; 0x86e <_ZN14CRotaryEncoderC1E17arduinoPinNames_ES0_>
CButton		ButtonRoom4(Pb2);
     866:	6a e0       	ldi	r22, 0x0A	; 10
     868:	8c e1       	ldi	r24, 0x1C	; 28
     86a:	92 e0       	ldi	r25, 0x02	; 2
     86c:	10 cf       	rjmp	.-480    	; 0x68e <_ZN7CButtonC1E17arduinoPinNames_E>

0000086e <_ZN14CRotaryEncoderC1E17arduinoPinNames_ES0_>:
CRotaryEncoder::CRotaryEncoder()
{
	EncoderFailureState =ENCODER_INITIALIZED_INCORRECTLY;
}

CRotaryEncoder::CRotaryEncoder(arduinoPinNames_E A, arduinoPinNames_E B)
     86e:	ef 92       	push	r14
     870:	ff 92       	push	r15
     872:	0f 93       	push	r16
     874:	1f 93       	push	r17
     876:	cf 93       	push	r28
     878:	df 93       	push	r29
     87a:	cd b7       	in	r28, 0x3d	; 61
     87c:	de b7       	in	r29, 0x3e	; 62
     87e:	2a 97       	sbiw	r28, 0x0a	; 10
     880:	0f b6       	in	r0, 0x3f	; 63
     882:	f8 94       	cli
     884:	de bf       	out	0x3e, r29	; 62
     886:	0f be       	out	0x3f, r0	; 63
     888:	cd bf       	out	0x3d, r28	; 61
     88a:	8c 01       	movw	r16, r24
     88c:	f6 2e       	mov	r15, r22
     88e:	e4 2e       	mov	r14, r20
     890:	fc de       	rcall	.-520    	; 0x68a <_ZN17CArduinoProcessorC1Ev>
{
	arduinoPinNames_E CreateBitfield[8];
	int NumberOfPinsForBitfield = 2;
     892:	82 e0       	ldi	r24, 0x02	; 2
     894:	90 e0       	ldi	r25, 0x00	; 0
     896:	9a 87       	std	Y+10, r25	; 0x0a
     898:	89 87       	std	Y+9, r24	; 0x09
	
	pinA = A;
     89a:	f8 01       	movw	r30, r16
     89c:	f3 82       	std	Z+3, r15	; 0x03
	pinB = B;
     89e:	e4 82       	std	Z+4, r14	; 0x04
	
	// Check for errors, if none then assign the pins to Encoder_input
	if (this->FindPort(pinA) != this->FindPort(pinB))
     8a0:	6f 2d       	mov	r22, r15
     8a2:	c8 01       	movw	r24, r16
     8a4:	a2 dc       	rcall	.-1724   	; 0x1ea <_ZN17CArduinoProcessor8FindPortE17arduinoPinNames_E>
     8a6:	f8 2e       	mov	r15, r24
     8a8:	f8 01       	movw	r30, r16
     8aa:	64 81       	ldd	r22, Z+4	; 0x04
     8ac:	c8 01       	movw	r24, r16
     8ae:	9d dc       	rcall	.-1734   	; 0x1ea <_ZN17CArduinoProcessor8FindPortE17arduinoPinNames_E>
     8b0:	f8 16       	cp	r15, r24
     8b2:	21 f0       	breq	.+8      	; 0x8bc <_ZN14CRotaryEncoderC1E17arduinoPinNames_ES0_+0x4e>
	{
		EncoderFailureState = ENCODER_PINS_NOT_ON_SAME_PORT;
     8b4:	83 e0       	ldi	r24, 0x03	; 3
     8b6:	f8 01       	movw	r30, r16
     8b8:	80 83       	st	Z, r24
     8ba:	41 c0       	rjmp	.+130    	; 0x93e <__stack+0x3f>
	}
	else if (this->SetReadStatus(pinA) == false)
     8bc:	f8 01       	movw	r30, r16
     8be:	63 81       	ldd	r22, Z+3	; 0x03
     8c0:	c8 01       	movw	r24, r16
     8c2:	fc db       	rcall	.-2056   	; 0xbc <_ZN17CArduinoProcessor13SetReadStatusE17arduinoPinNames_E>
     8c4:	81 11       	cpse	r24, r1
     8c6:	04 c0       	rjmp	.+8      	; 0x8d0 <_ZN14CRotaryEncoderC1E17arduinoPinNames_ES0_+0x62>
	{
		EncoderFailureState = ENCODER_PIN_ALREADY_CLAIMED;
     8c8:	82 e0       	ldi	r24, 0x02	; 2
     8ca:	f8 01       	movw	r30, r16
     8cc:	80 83       	st	Z, r24
     8ce:	37 c0       	rjmp	.+110    	; 0x93e <__stack+0x3f>
	}
	else if (this->SetPullUpStatus(pinA) == false)
     8d0:	f8 01       	movw	r30, r16
     8d2:	63 81       	ldd	r22, Z+3	; 0x03
     8d4:	c8 01       	movw	r24, r16
     8d6:	20 dc       	rcall	.-1984   	; 0x118 <_ZN17CArduinoProcessor15SetPullUpStatusE17arduinoPinNames_E>
     8d8:	81 11       	cpse	r24, r1
     8da:	04 c0       	rjmp	.+8      	; 0x8e4 <_ZN14CRotaryEncoderC1E17arduinoPinNames_ES0_+0x76>
	{
		EncoderFailureState = ENCODER_PIN_ALREADY_CLAIMED;
     8dc:	82 e0       	ldi	r24, 0x02	; 2
     8de:	f8 01       	movw	r30, r16
     8e0:	80 83       	st	Z, r24
     8e2:	2d c0       	rjmp	.+90     	; 0x93e <__stack+0x3f>
	}
	else if (this->SetReadStatus(pinB) == false)
     8e4:	f8 01       	movw	r30, r16
     8e6:	64 81       	ldd	r22, Z+4	; 0x04
     8e8:	c8 01       	movw	r24, r16
     8ea:	e8 db       	rcall	.-2096   	; 0xbc <_ZN17CArduinoProcessor13SetReadStatusE17arduinoPinNames_E>
     8ec:	81 11       	cpse	r24, r1
     8ee:	04 c0       	rjmp	.+8      	; 0x8f8 <_ZN14CRotaryEncoderC1E17arduinoPinNames_ES0_+0x8a>
	{
		EncoderFailureState = ENCODER_PIN_ALREADY_CLAIMED;
     8f0:	82 e0       	ldi	r24, 0x02	; 2
     8f2:	f8 01       	movw	r30, r16
     8f4:	80 83       	st	Z, r24
     8f6:	23 c0       	rjmp	.+70     	; 0x93e <__stack+0x3f>
	}
	else if (this->SetPullUpStatus(pinB) == false)
     8f8:	f8 01       	movw	r30, r16
     8fa:	64 81       	ldd	r22, Z+4	; 0x04
     8fc:	c8 01       	movw	r24, r16
     8fe:	0c dc       	rcall	.-2024   	; 0x118 <_ZN17CArduinoProcessor15SetPullUpStatusE17arduinoPinNames_E>
     900:	81 11       	cpse	r24, r1
     902:	04 c0       	rjmp	.+8      	; 0x90c <__stack+0xd>
	{
		EncoderFailureState = ENCODER_PIN_ALREADY_CLAIMED;
     904:	82 e0       	ldi	r24, 0x02	; 2
     906:	f8 01       	movw	r30, r16
     908:	80 83       	st	Z, r24
     90a:	19 c0       	rjmp	.+50     	; 0x93e <__stack+0x3f>
	}
	else
	{
		EncoderFailureState = ENCODER_NO_FAILURE;
     90c:	f8 01       	movw	r30, r16
     90e:	10 82       	st	Z, r1
		Encoder_input.port = this->FindPort(pinA);
     910:	63 81       	ldd	r22, Z+3	; 0x03
     912:	c8 01       	movw	r24, r16
     914:	6a dc       	rcall	.-1836   	; 0x1ea <_ZN17CArduinoProcessor8FindPortE17arduinoPinNames_E>
     916:	f8 01       	movw	r30, r16
     918:	81 83       	std	Z+1, r24	; 0x01
		CreateBitfield[0] = pinA;
     91a:	83 81       	ldd	r24, Z+3	; 0x03
     91c:	89 83       	std	Y+1, r24	; 0x01
		CreateBitfield[1] = pinB;
     91e:	84 81       	ldd	r24, Z+4	; 0x04
     920:	8a 83       	std	Y+2, r24	; 0x02
		this->PackPinsToBitfield(CreateBitfield, &NumberOfPinsForBitfield, &Encoder_input.pins);
     922:	98 01       	movw	r18, r16
     924:	2e 5f       	subi	r18, 0xFE	; 254
     926:	3f 4f       	sbci	r19, 0xFF	; 255
     928:	ae 01       	movw	r20, r28
     92a:	47 5f       	subi	r20, 0xF7	; 247
     92c:	5f 4f       	sbci	r21, 0xFF	; 255
     92e:	be 01       	movw	r22, r28
     930:	6f 5f       	subi	r22, 0xFF	; 255
     932:	7f 4f       	sbci	r23, 0xFF	; 255
     934:	c8 01       	movw	r24, r16
     936:	69 dc       	rcall	.-1838   	; 0x20a <_ZN17CArduinoProcessor18PackPinsToBitfieldEP17arduinoPinNames_EPiPh>
		
		EncoderPosition = 0;	
     938:	f8 01       	movw	r30, r16
     93a:	16 82       	std	Z+6, r1	; 0x06
     93c:	15 82       	std	Z+5, r1	; 0x05
	}
}
     93e:	2a 96       	adiw	r28, 0x0a	; 10
     940:	0f b6       	in	r0, 0x3f	; 63
     942:	f8 94       	cli
     944:	de bf       	out	0x3e, r29	; 62
     946:	0f be       	out	0x3f, r0	; 63
     948:	cd bf       	out	0x3d, r28	; 61
     94a:	df 91       	pop	r29
     94c:	cf 91       	pop	r28
     94e:	1f 91       	pop	r17
     950:	0f 91       	pop	r16
     952:	ff 90       	pop	r15
     954:	ef 90       	pop	r14
     956:	08 95       	ret

00000958 <_ZN14CRotaryEncoder11ReadEncoderEv>:

void CRotaryEncoder::ReadEncoder( void )
{
     958:	cf 93       	push	r28
     95a:	df 93       	push	r29
     95c:	ec 01       	movw	r28, r24
	static uint8_t OldReading = 0;
	static uint8_t CurrentReading = 0;
	static uint8_t Pin1State = 0;
	static uint8_t Pin2State = 0;
	
	if (EncoderFailureState == ENCODER_NO_FAILURE)
     95e:	88 81       	ld	r24, Y
     960:	81 11       	cpse	r24, r1
     962:	5b c0       	rjmp	.+182    	; 0xa1a <_ZN14CRotaryEncoder11ReadEncoderEv+0xc2>
	{
		this->ReadMultipleDigitalPins(&Encoder_input, &CurrentReading);
     964:	be 01       	movw	r22, r28
     966:	6f 5f       	subi	r22, 0xFF	; 255
     968:	7f 4f       	sbci	r23, 0xFF	; 255
     96a:	4c e8       	ldi	r20, 0x8C	; 140
     96c:	52 e0       	ldi	r21, 0x02	; 2
     96e:	ce 01       	movw	r24, r28
     970:	20 dc       	rcall	.-1984   	; 0x1b2 <_ZN17CArduinoProcessor23ReadMultipleDigitalPinsEP13portPinUser_sPh>
		
		Pin1State = ( ( CurrentReading & ( 1 << Registers[pinA].AVRlibPinWord ) ) >> Registers[pinA].AVRlibPinWord );
     972:	40 91 8c 02 	lds	r20, 0x028C
     976:	50 e0       	ldi	r21, 0x00	; 0
     978:	eb 81       	ldd	r30, Y+3	; 0x03
     97a:	f0 e0       	ldi	r31, 0x00	; 0
     97c:	ee 0f       	add	r30, r30
     97e:	ff 1f       	adc	r31, r31
     980:	ee 0f       	add	r30, r30
     982:	ff 1f       	adc	r31, r31
     984:	ee 0f       	add	r30, r30
     986:	ff 1f       	adc	r31, r31
     988:	e5 58       	subi	r30, 0x85	; 133
     98a:	fe 4f       	sbci	r31, 0xFE	; 254
     98c:	26 81       	ldd	r18, Z+6	; 0x06
     98e:	86 81       	ldd	r24, Z+6	; 0x06
     990:	61 e0       	ldi	r22, 0x01	; 1
     992:	70 e0       	ldi	r23, 0x00	; 0
     994:	fb 01       	movw	r30, r22
     996:	02 c0       	rjmp	.+4      	; 0x99c <_ZN14CRotaryEncoder11ReadEncoderEv+0x44>
     998:	ee 0f       	add	r30, r30
     99a:	ff 1f       	adc	r31, r31
     99c:	2a 95       	dec	r18
     99e:	e2 f7       	brpl	.-8      	; 0x998 <_ZN14CRotaryEncoder11ReadEncoderEv+0x40>
     9a0:	9f 01       	movw	r18, r30
     9a2:	24 23       	and	r18, r20
     9a4:	35 23       	and	r19, r21
     9a6:	02 c0       	rjmp	.+4      	; 0x9ac <_ZN14CRotaryEncoder11ReadEncoderEv+0x54>
     9a8:	35 95       	asr	r19
     9aa:	27 95       	ror	r18
     9ac:	8a 95       	dec	r24
     9ae:	e2 f7       	brpl	.-8      	; 0x9a8 <_ZN14CRotaryEncoder11ReadEncoderEv+0x50>
     9b0:	20 93 8d 02 	sts	0x028D, r18
		Pin2State = ( ( CurrentReading & ( 1 << Registers[pinB].AVRlibPinWord ) ) >> Registers[pinB].AVRlibPinWord );
     9b4:	ec 81       	ldd	r30, Y+4	; 0x04
     9b6:	f0 e0       	ldi	r31, 0x00	; 0
     9b8:	ee 0f       	add	r30, r30
     9ba:	ff 1f       	adc	r31, r31
     9bc:	ee 0f       	add	r30, r30
     9be:	ff 1f       	adc	r31, r31
     9c0:	ee 0f       	add	r30, r30
     9c2:	ff 1f       	adc	r31, r31
     9c4:	e5 58       	subi	r30, 0x85	; 133
     9c6:	fe 4f       	sbci	r31, 0xFE	; 254
     9c8:	96 81       	ldd	r25, Z+6	; 0x06
     9ca:	86 81       	ldd	r24, Z+6	; 0x06
     9cc:	02 c0       	rjmp	.+4      	; 0x9d2 <_ZN14CRotaryEncoder11ReadEncoderEv+0x7a>
     9ce:	66 0f       	add	r22, r22
     9d0:	77 1f       	adc	r23, r23
     9d2:	9a 95       	dec	r25
     9d4:	e2 f7       	brpl	.-8      	; 0x9ce <_ZN14CRotaryEncoder11ReadEncoderEv+0x76>
     9d6:	46 23       	and	r20, r22
     9d8:	57 23       	and	r21, r23
     9da:	ba 01       	movw	r22, r20
     9dc:	02 c0       	rjmp	.+4      	; 0x9e2 <_ZN14CRotaryEncoder11ReadEncoderEv+0x8a>
     9de:	75 95       	asr	r23
     9e0:	67 95       	ror	r22
     9e2:	8a 95       	dec	r24
     9e4:	e2 f7       	brpl	.-8      	; 0x9de <_ZN14CRotaryEncoder11ReadEncoderEv+0x86>
     9e6:	cb 01       	movw	r24, r22
     9e8:	60 93 8e 02 	sts	0x028E, r22
		
		OldReading <<= 2;
     9ec:	e0 91 8f 02 	lds	r30, 0x028F
     9f0:	ee 0f       	add	r30, r30
     9f2:	ee 0f       	add	r30, r30
		OldReading |= (Pin1State | (Pin2State << 1) );
     9f4:	2e 2b       	or	r18, r30
     9f6:	88 0f       	add	r24, r24
     9f8:	28 2b       	or	r18, r24
     9fa:	20 93 8f 02 	sts	0x028F, r18
		
		EncoderPosition += enc_states[OldReading & 0x0f];
     9fe:	8d 81       	ldd	r24, Y+5	; 0x05
     a00:	9e 81       	ldd	r25, Y+6	; 0x06
     a02:	2f 70       	andi	r18, 0x0F	; 15
     a04:	e2 2f       	mov	r30, r18
     a06:	f0 e0       	ldi	r31, 0x00	; 0
     a08:	e5 5d       	subi	r30, 0xD5	; 213
     a0a:	fe 4f       	sbci	r31, 0xFE	; 254
     a0c:	20 81       	ld	r18, Z
     a0e:	82 0f       	add	r24, r18
     a10:	91 1d       	adc	r25, r1
     a12:	27 fd       	sbrc	r18, 7
     a14:	9a 95       	dec	r25
     a16:	9e 83       	std	Y+6, r25	; 0x06
     a18:	8d 83       	std	Y+5, r24	; 0x05
	}
}
     a1a:	df 91       	pop	r29
     a1c:	cf 91       	pop	r28
     a1e:	08 95       	ret

00000a20 <_ZN14CRotaryEncoder15GetEncoderLevelEv>:

int CRotaryEncoder::GetEncoderLevel()
{	
	
	return EncoderPosition;
     a20:	fc 01       	movw	r30, r24
     a22:	25 81       	ldd	r18, Z+5	; 0x05
     a24:	36 81       	ldd	r19, Z+6	; 0x06
     a26:	82 2f       	mov	r24, r18
     a28:	93 2f       	mov	r25, r19
     a2a:	08 95       	ret

00000a2c <_Z12GetBuildDatePvj>:
static const char BUILD_DATE[] PROGMEM = "2014-09-01 03-20-PM"; 
#endif 
 
/* Return the header message */  
void GetBuildDate( void *buffer, size_t bufferSize )  
{   
     a2c:	46 2f       	mov	r20, r22
     a2e:	57 2f       	mov	r21, r23
#if defined(BUILDINFO_RAM) 
	memcpy( buffer, BUILD_DATE, bufferSize ); 
     a30:	2b e3       	ldi	r18, 0x3B	; 59
     a32:	31 e0       	ldi	r19, 0x01	; 1
     a34:	62 2f       	mov	r22, r18
     a36:	73 2f       	mov	r23, r19
     a38:	45 c4       	rjmp	.+2186   	; 0x12c4 <memcpy>

00000a3a <_Z10GetFreeRamv>:
#ifndef Arduino_h
#include <Arduino.h>
#endif

int GetFreeRam ()
{
     a3a:	cf 93       	push	r28
     a3c:	df 93       	push	r29
     a3e:	00 d0       	rcall	.+0      	; 0xa40 <_Z10GetFreeRamv+0x6>
     a40:	cd b7       	in	r28, 0x3d	; 61
     a42:	de b7       	in	r29, 0x3e	; 62
	extern int __heap_start, *__brkval;
	int v;
	return (int) &v - (__brkval == 0 ? (int) &__heap_start : (int) __brkval);
     a44:	80 91 00 01 	lds	r24, 0x0100
     a48:	90 91 01 01 	lds	r25, 0x0101
     a4c:	00 97       	sbiw	r24, 0x00	; 0
     a4e:	11 f4       	brne	.+4      	; 0xa54 <_Z10GetFreeRamv+0x1a>
     a50:	83 e4       	ldi	r24, 0x43	; 67
     a52:	93 e0       	ldi	r25, 0x03	; 3
     a54:	9e 01       	movw	r18, r28
     a56:	2f 5f       	subi	r18, 0xFF	; 255
     a58:	3f 4f       	sbci	r19, 0xFF	; 255
     a5a:	28 1b       	sub	r18, r24
     a5c:	39 0b       	sbc	r19, r25
}
     a5e:	82 2f       	mov	r24, r18
     a60:	93 2f       	mov	r25, r19
     a62:	0f 90       	pop	r0
     a64:	0f 90       	pop	r0
     a66:	df 91       	pop	r29
     a68:	cf 91       	pop	r28
     a6a:	08 95       	ret

00000a6c <_Z13ShowBuildInfov>:

void ShowBuildInfo()
{
     a6c:	cf 93       	push	r28
     a6e:	df 93       	push	r29
     a70:	cd b7       	in	r28, 0x3d	; 61
     a72:	de b7       	in	r29, 0x3e	; 62
     a74:	64 97       	sbiw	r28, 0x14	; 20
     a76:	0f b6       	in	r0, 0x3f	; 63
     a78:	f8 94       	cli
     a7a:	de bf       	out	0x3e, r29	; 62
     a7c:	0f be       	out	0x3f, r0	; 63
     a7e:	cd bf       	out	0x3d, r28	; 61
	char buffer[HeaderMsgSize];
	GetBuildDate((void*)&buffer,sizeof(buffer));
     a80:	64 e1       	ldi	r22, 0x14	; 20
     a82:	70 e0       	ldi	r23, 0x00	; 0
     a84:	ce 01       	movw	r24, r28
     a86:	01 96       	adiw	r24, 0x01	; 1
     a88:	d1 df       	rcall	.-94     	; 0xa2c <_Z12GetBuildDatePvj>
	Serial.print("Date:");
     a8a:	6f e4       	ldi	r22, 0x4F	; 79
     a8c:	71 e0       	ldi	r23, 0x01	; 1
     a8e:	80 e9       	ldi	r24, 0x90	; 144
     a90:	92 e0       	ldi	r25, 0x02	; 2
     a92:	61 d2       	rcall	.+1218   	; 0xf56 <_ZN5Print5printEPKc>
	Serial.println((char*)&buffer);
     a94:	be 01       	movw	r22, r28
     a96:	6f 5f       	subi	r22, 0xFF	; 255
     a98:	7f 4f       	sbci	r23, 0xFF	; 255
     a9a:	80 e9       	ldi	r24, 0x90	; 144
     a9c:	92 e0       	ldi	r25, 0x02	; 2
     a9e:	77 d2       	rcall	.+1262   	; 0xf8e <_ZN5Print7printlnEPKc>
	Serial.print("Build:");
     aa0:	65 e5       	ldi	r22, 0x55	; 85
     aa2:	71 e0       	ldi	r23, 0x01	; 1
     aa4:	80 e9       	ldi	r24, 0x90	; 144
     aa6:	92 e0       	ldi	r25, 0x02	; 2
     aa8:	56 d2       	rcall	.+1196   	; 0xf56 <_ZN5Print5printEPKc>
	Serial.println(GetBuildNumber());
     aaa:	1e d0       	rcall	.+60     	; 0xae8 <_Z14GetBuildNumberv>
     aac:	4a e0       	ldi	r20, 0x0A	; 10
     aae:	50 e0       	ldi	r21, 0x00	; 0
     ab0:	bc 01       	movw	r22, r24
     ab2:	80 e9       	ldi	r24, 0x90	; 144
     ab4:	92 e0       	ldi	r25, 0x02	; 2
     ab6:	e3 d2       	rcall	.+1478   	; 0x107e <_ZN5Print7printlnEji>
	Serial.print("Free RAM (B):");
     ab8:	6c e5       	ldi	r22, 0x5C	; 92
     aba:	71 e0       	ldi	r23, 0x01	; 1
     abc:	80 e9       	ldi	r24, 0x90	; 144
     abe:	92 e0       	ldi	r25, 0x02	; 2
     ac0:	4a d2       	rcall	.+1172   	; 0xf56 <_ZN5Print5printEPKc>
	Serial.println( GetFreeRam());
     ac2:	bb df       	rcall	.-138    	; 0xa3a <_Z10GetFreeRamv>
     ac4:	4a e0       	ldi	r20, 0x0A	; 10
     ac6:	50 e0       	ldi	r21, 0x00	; 0
     ac8:	bc 01       	movw	r22, r24
     aca:	80 e9       	ldi	r24, 0x90	; 144
     acc:	92 e0       	ldi	r25, 0x02	; 2
     ace:	35 d3       	rcall	.+1642   	; 0x113a <_ZN5Print7printlnEii>
	Serial.println();
     ad0:	80 e9       	ldi	r24, 0x90	; 144
     ad2:	92 e0       	ldi	r25, 0x02	; 2
     ad4:	48 d2       	rcall	.+1168   	; 0xf66 <_ZN5Print7printlnEv>
     ad6:	64 96       	adiw	r28, 0x14	; 20
     ad8:	0f b6       	in	r0, 0x3f	; 63
     ada:	f8 94       	cli
     adc:	de bf       	out	0x3e, r29	; 62
     ade:	0f be       	out	0x3f, r0	; 63
     ae0:	cd bf       	out	0x3d, r28	; 61
     ae2:	df 91       	pop	r29
     ae4:	cf 91       	pop	r28
     ae6:	08 95       	ret

00000ae8 <_Z14GetBuildNumberv>:
    val = eeprom_read_word( &BUILD_NUMBER ); 
#elif defined(BUILDINFO_PROGMEM) 
    val = pgm_read_word(&BUILD_NUMBER); 
#endif 
    return val; 
} 
     ae8:	87 e2       	ldi	r24, 0x27	; 39
     aea:	90 e0       	ldi	r25, 0x00	; 0
     aec:	08 95       	ret

00000aee <_ZN14HardwareSerial9availableEv>:
     aee:	fc 01       	movw	r30, r24
     af0:	84 85       	ldd	r24, Z+12	; 0x0c
     af2:	95 85       	ldd	r25, Z+13	; 0x0d
     af4:	fc 01       	movw	r30, r24
     af6:	e0 5c       	subi	r30, 0xC0	; 192
     af8:	ff 4f       	sbci	r31, 0xFF	; 255
     afa:	20 81       	ld	r18, Z
     afc:	31 81       	ldd	r19, Z+1	; 0x01
     afe:	fc 01       	movw	r30, r24
     b00:	ee 5b       	subi	r30, 0xBE	; 190
     b02:	ff 4f       	sbci	r31, 0xFF	; 255
     b04:	80 81       	ld	r24, Z
     b06:	91 81       	ldd	r25, Z+1	; 0x01
     b08:	28 1b       	sub	r18, r24
     b0a:	39 0b       	sbc	r19, r25
     b0c:	2f 73       	andi	r18, 0x3F	; 63
     b0e:	33 27       	eor	r19, r19
     b10:	c9 01       	movw	r24, r18
     b12:	08 95       	ret

00000b14 <_ZN14HardwareSerial4peekEv>:
     b14:	fc 01       	movw	r30, r24
     b16:	84 85       	ldd	r24, Z+12	; 0x0c
     b18:	95 85       	ldd	r25, Z+13	; 0x0d
     b1a:	fc 01       	movw	r30, r24
     b1c:	e0 5c       	subi	r30, 0xC0	; 192
     b1e:	ff 4f       	sbci	r31, 0xFF	; 255
     b20:	40 81       	ld	r20, Z
     b22:	51 81       	ldd	r21, Z+1	; 0x01
     b24:	fc 01       	movw	r30, r24
     b26:	ee 5b       	subi	r30, 0xBE	; 190
     b28:	ff 4f       	sbci	r31, 0xFF	; 255
     b2a:	20 81       	ld	r18, Z
     b2c:	31 81       	ldd	r19, Z+1	; 0x01
     b2e:	42 17       	cp	r20, r18
     b30:	53 07       	cpc	r21, r19
     b32:	41 f0       	breq	.+16     	; 0xb44 <_ZN14HardwareSerial4peekEv+0x30>
     b34:	01 90       	ld	r0, Z+
     b36:	f0 81       	ld	r31, Z
     b38:	e0 2d       	mov	r30, r0
     b3a:	e8 0f       	add	r30, r24
     b3c:	f9 1f       	adc	r31, r25
     b3e:	20 81       	ld	r18, Z
     b40:	30 e0       	ldi	r19, 0x00	; 0
     b42:	02 c0       	rjmp	.+4      	; 0xb48 <_ZN14HardwareSerial4peekEv+0x34>
     b44:	2f ef       	ldi	r18, 0xFF	; 255
     b46:	3f ef       	ldi	r19, 0xFF	; 255
     b48:	c9 01       	movw	r24, r18
     b4a:	08 95       	ret

00000b4c <_ZN14HardwareSerial4readEv>:
     b4c:	fc 01       	movw	r30, r24
     b4e:	84 85       	ldd	r24, Z+12	; 0x0c
     b50:	95 85       	ldd	r25, Z+13	; 0x0d
     b52:	fc 01       	movw	r30, r24
     b54:	e0 5c       	subi	r30, 0xC0	; 192
     b56:	ff 4f       	sbci	r31, 0xFF	; 255
     b58:	40 81       	ld	r20, Z
     b5a:	51 81       	ldd	r21, Z+1	; 0x01
     b5c:	fc 01       	movw	r30, r24
     b5e:	ee 5b       	subi	r30, 0xBE	; 190
     b60:	ff 4f       	sbci	r31, 0xFF	; 255
     b62:	20 81       	ld	r18, Z
     b64:	31 81       	ldd	r19, Z+1	; 0x01
     b66:	42 17       	cp	r20, r18
     b68:	53 07       	cpc	r21, r19
     b6a:	81 f0       	breq	.+32     	; 0xb8c <_ZN14HardwareSerial4readEv+0x40>
     b6c:	a0 81       	ld	r26, Z
     b6e:	b1 81       	ldd	r27, Z+1	; 0x01
     b70:	a8 0f       	add	r26, r24
     b72:	b9 1f       	adc	r27, r25
     b74:	8c 91       	ld	r24, X
     b76:	20 81       	ld	r18, Z
     b78:	31 81       	ldd	r19, Z+1	; 0x01
     b7a:	2f 5f       	subi	r18, 0xFF	; 255
     b7c:	3f 4f       	sbci	r19, 0xFF	; 255
     b7e:	2f 73       	andi	r18, 0x3F	; 63
     b80:	33 27       	eor	r19, r19
     b82:	31 83       	std	Z+1, r19	; 0x01
     b84:	20 83       	st	Z, r18
     b86:	28 2f       	mov	r18, r24
     b88:	30 e0       	ldi	r19, 0x00	; 0
     b8a:	02 c0       	rjmp	.+4      	; 0xb90 <_ZN14HardwareSerial4readEv+0x44>
     b8c:	2f ef       	ldi	r18, 0xFF	; 255
     b8e:	3f ef       	ldi	r19, 0xFF	; 255
     b90:	c9 01       	movw	r24, r18
     b92:	08 95       	ret

00000b94 <_ZN14HardwareSerial5flushEv>:
     b94:	fc 01       	movw	r30, r24
     b96:	81 a1       	ldd	r24, Z+33	; 0x21
     b98:	88 23       	and	r24, r24
     b9a:	29 f0       	breq	.+10     	; 0xba6 <_ZN14HardwareSerial5flushEv+0x12>
     b9c:	a4 89       	ldd	r26, Z+20	; 0x14
     b9e:	b5 89       	ldd	r27, Z+21	; 0x15
     ba0:	8c 91       	ld	r24, X
     ba2:	86 ff       	sbrs	r24, 6
     ba4:	fb cf       	rjmp	.-10     	; 0xb9c <_ZN14HardwareSerial5flushEv+0x8>
     ba6:	11 a2       	std	Z+33, r1	; 0x21
     ba8:	08 95       	ret

00000baa <_ZN14HardwareSerial5writeEh>:
     baa:	cf 93       	push	r28
     bac:	df 93       	push	r29
     bae:	fc 01       	movw	r30, r24
     bb0:	26 85       	ldd	r18, Z+14	; 0x0e
     bb2:	37 85       	ldd	r19, Z+15	; 0x0f
     bb4:	d9 01       	movw	r26, r18
     bb6:	a0 5c       	subi	r26, 0xC0	; 192
     bb8:	bf 4f       	sbci	r27, 0xFF	; 255
     bba:	8d 91       	ld	r24, X+
     bbc:	9c 91       	ld	r25, X
     bbe:	11 97       	sbiw	r26, 0x01	; 1
     bc0:	01 96       	adiw	r24, 0x01	; 1
     bc2:	8f 73       	andi	r24, 0x3F	; 63
     bc4:	99 27       	eor	r25, r25
     bc6:	e9 01       	movw	r28, r18
     bc8:	ce 5b       	subi	r28, 0xBE	; 190
     bca:	df 4f       	sbci	r29, 0xFF	; 255
     bcc:	48 81       	ld	r20, Y
     bce:	59 81       	ldd	r21, Y+1	; 0x01
     bd0:	84 17       	cp	r24, r20
     bd2:	95 07       	cpc	r25, r21
     bd4:	d9 f3       	breq	.-10     	; 0xbcc <_ZN14HardwareSerial5writeEh+0x22>
     bd6:	0d 90       	ld	r0, X+
     bd8:	bc 91       	ld	r27, X
     bda:	a0 2d       	mov	r26, r0
     bdc:	a2 0f       	add	r26, r18
     bde:	b3 1f       	adc	r27, r19
     be0:	6c 93       	st	X, r22
     be2:	a6 85       	ldd	r26, Z+14	; 0x0e
     be4:	b7 85       	ldd	r27, Z+15	; 0x0f
     be6:	a0 5c       	subi	r26, 0xC0	; 192
     be8:	bf 4f       	sbci	r27, 0xFF	; 255
     bea:	11 96       	adiw	r26, 0x01	; 1
     bec:	9c 93       	st	X, r25
     bee:	8e 93       	st	-X, r24
     bf0:	a6 89       	ldd	r26, Z+22	; 0x16
     bf2:	b7 89       	ldd	r27, Z+23	; 0x17
     bf4:	2c 91       	ld	r18, X
     bf6:	81 e0       	ldi	r24, 0x01	; 1
     bf8:	90 e0       	ldi	r25, 0x00	; 0
     bfa:	07 8c       	ldd	r0, Z+31	; 0x1f
     bfc:	02 c0       	rjmp	.+4      	; 0xc02 <_ZN14HardwareSerial5writeEh+0x58>
     bfe:	88 0f       	add	r24, r24
     c00:	99 1f       	adc	r25, r25
     c02:	0a 94       	dec	r0
     c04:	e2 f7       	brpl	.-8      	; 0xbfe <_ZN14HardwareSerial5writeEh+0x54>
     c06:	28 2b       	or	r18, r24
     c08:	2c 93       	st	X, r18
     c0a:	81 e0       	ldi	r24, 0x01	; 1
     c0c:	81 a3       	std	Z+33, r24	; 0x21
     c0e:	04 88       	ldd	r0, Z+20	; 0x14
     c10:	f5 89       	ldd	r31, Z+21	; 0x15
     c12:	e0 2d       	mov	r30, r0
     c14:	80 81       	ld	r24, Z
     c16:	80 64       	ori	r24, 0x40	; 64
     c18:	80 83       	st	Z, r24
     c1a:	81 e0       	ldi	r24, 0x01	; 1
     c1c:	90 e0       	ldi	r25, 0x00	; 0
     c1e:	df 91       	pop	r29
     c20:	cf 91       	pop	r28
     c22:	08 95       	ret

00000c24 <_Z11serialEventv>:
     c24:	08 95       	ret

00000c26 <__vector_18>:
     c26:	1f 92       	push	r1
     c28:	0f 92       	push	r0
     c2a:	0f b6       	in	r0, 0x3f	; 63
     c2c:	0f 92       	push	r0
     c2e:	11 24       	eor	r1, r1
     c30:	2f 93       	push	r18
     c32:	3f 93       	push	r19
     c34:	4f 93       	push	r20
     c36:	8f 93       	push	r24
     c38:	9f 93       	push	r25
     c3a:	ef 93       	push	r30
     c3c:	ff 93       	push	r31
     c3e:	80 91 c0 00 	lds	r24, 0x00C0
     c42:	82 fd       	sbrc	r24, 2
     c44:	1c c0       	rjmp	.+56     	; 0xc7e <__vector_18+0x58>
     c46:	40 91 c6 00 	lds	r20, 0x00C6
     c4a:	80 91 36 03 	lds	r24, 0x0336
     c4e:	90 91 37 03 	lds	r25, 0x0337
     c52:	01 96       	adiw	r24, 0x01	; 1
     c54:	8f 73       	andi	r24, 0x3F	; 63
     c56:	99 27       	eor	r25, r25
     c58:	20 91 38 03 	lds	r18, 0x0338
     c5c:	30 91 39 03 	lds	r19, 0x0339
     c60:	82 17       	cp	r24, r18
     c62:	93 07       	cpc	r25, r19
     c64:	71 f0       	breq	.+28     	; 0xc82 <__vector_18+0x5c>
     c66:	e0 91 36 03 	lds	r30, 0x0336
     c6a:	f0 91 37 03 	lds	r31, 0x0337
     c6e:	ea 50       	subi	r30, 0x0A	; 10
     c70:	fd 4f       	sbci	r31, 0xFD	; 253
     c72:	40 83       	st	Z, r20
     c74:	90 93 37 03 	sts	0x0337, r25
     c78:	80 93 36 03 	sts	0x0336, r24
     c7c:	02 c0       	rjmp	.+4      	; 0xc82 <__vector_18+0x5c>
     c7e:	80 91 c6 00 	lds	r24, 0x00C6
     c82:	ff 91       	pop	r31
     c84:	ef 91       	pop	r30
     c86:	9f 91       	pop	r25
     c88:	8f 91       	pop	r24
     c8a:	4f 91       	pop	r20
     c8c:	3f 91       	pop	r19
     c8e:	2f 91       	pop	r18
     c90:	0f 90       	pop	r0
     c92:	0f be       	out	0x3f, r0	; 63
     c94:	0f 90       	pop	r0
     c96:	1f 90       	pop	r1
     c98:	18 95       	reti

00000c9a <_Z14serialEventRunv>:
     c9a:	80 e9       	ldi	r24, 0x90	; 144
     c9c:	92 e0       	ldi	r25, 0x02	; 2
     c9e:	27 df       	rcall	.-434    	; 0xaee <_ZN14HardwareSerial9availableEv>
     ca0:	89 2b       	or	r24, r25
     ca2:	09 f0       	breq	.+2      	; 0xca6 <_Z14serialEventRunv+0xc>
     ca4:	bf cf       	rjmp	.-130    	; 0xc24 <_Z11serialEventv>
     ca6:	08 95       	ret

00000ca8 <__vector_19>:
     ca8:	1f 92       	push	r1
     caa:	0f 92       	push	r0
     cac:	0f b6       	in	r0, 0x3f	; 63
     cae:	0f 92       	push	r0
     cb0:	11 24       	eor	r1, r1
     cb2:	2f 93       	push	r18
     cb4:	3f 93       	push	r19
     cb6:	8f 93       	push	r24
     cb8:	9f 93       	push	r25
     cba:	ef 93       	push	r30
     cbc:	ff 93       	push	r31
     cbe:	20 91 f2 02 	lds	r18, 0x02F2
     cc2:	30 91 f3 02 	lds	r19, 0x02F3
     cc6:	80 91 f4 02 	lds	r24, 0x02F4
     cca:	90 91 f5 02 	lds	r25, 0x02F5
     cce:	28 17       	cp	r18, r24
     cd0:	39 07       	cpc	r19, r25
     cd2:	31 f4       	brne	.+12     	; 0xce0 <__vector_19+0x38>
     cd4:	80 91 c1 00 	lds	r24, 0x00C1
     cd8:	8f 7d       	andi	r24, 0xDF	; 223
     cda:	80 93 c1 00 	sts	0x00C1, r24
     cde:	14 c0       	rjmp	.+40     	; 0xd08 <__vector_19+0x60>
     ce0:	e0 91 f4 02 	lds	r30, 0x02F4
     ce4:	f0 91 f5 02 	lds	r31, 0x02F5
     ce8:	ee 54       	subi	r30, 0x4E	; 78
     cea:	fd 4f       	sbci	r31, 0xFD	; 253
     cec:	20 81       	ld	r18, Z
     cee:	80 91 f4 02 	lds	r24, 0x02F4
     cf2:	90 91 f5 02 	lds	r25, 0x02F5
     cf6:	01 96       	adiw	r24, 0x01	; 1
     cf8:	8f 73       	andi	r24, 0x3F	; 63
     cfa:	99 27       	eor	r25, r25
     cfc:	90 93 f5 02 	sts	0x02F5, r25
     d00:	80 93 f4 02 	sts	0x02F4, r24
     d04:	20 93 c6 00 	sts	0x00C6, r18
     d08:	ff 91       	pop	r31
     d0a:	ef 91       	pop	r30
     d0c:	9f 91       	pop	r25
     d0e:	8f 91       	pop	r24
     d10:	3f 91       	pop	r19
     d12:	2f 91       	pop	r18
     d14:	0f 90       	pop	r0
     d16:	0f be       	out	0x3f, r0	; 63
     d18:	0f 90       	pop	r0
     d1a:	1f 90       	pop	r1
     d1c:	18 95       	reti

00000d1e <_ZN14HardwareSerial5beginEm>:
     d1e:	cf 92       	push	r12
     d20:	df 92       	push	r13
     d22:	ef 92       	push	r14
     d24:	ff 92       	push	r15
     d26:	cf 93       	push	r28
     d28:	df 93       	push	r29
     d2a:	ec 01       	movw	r28, r24
     d2c:	6a 01       	movw	r12, r20
     d2e:	7b 01       	movw	r14, r22
     d30:	41 15       	cp	r20, r1
     d32:	81 ee       	ldi	r24, 0xE1	; 225
     d34:	58 07       	cpc	r21, r24
     d36:	61 05       	cpc	r22, r1
     d38:	71 05       	cpc	r23, r1
     d3a:	f1 f0       	breq	.+60     	; 0xd78 <_ZN14HardwareSerial5beginEm+0x5a>
     d3c:	ec 89       	ldd	r30, Y+20	; 0x14
     d3e:	fd 89       	ldd	r31, Y+21	; 0x15
     d40:	81 e0       	ldi	r24, 0x01	; 1
     d42:	90 e0       	ldi	r25, 0x00	; 0
     d44:	08 a0       	ldd	r0, Y+32	; 0x20
     d46:	02 c0       	rjmp	.+4      	; 0xd4c <_ZN14HardwareSerial5beginEm+0x2e>
     d48:	88 0f       	add	r24, r24
     d4a:	99 1f       	adc	r25, r25
     d4c:	0a 94       	dec	r0
     d4e:	e2 f7       	brpl	.-8      	; 0xd48 <_ZN14HardwareSerial5beginEm+0x2a>
     d50:	80 83       	st	Z, r24
     d52:	60 e0       	ldi	r22, 0x00	; 0
     d54:	79 e0       	ldi	r23, 0x09	; 9
     d56:	8d e3       	ldi	r24, 0x3D	; 61
     d58:	90 e0       	ldi	r25, 0x00	; 0
     d5a:	a7 01       	movw	r20, r14
     d5c:	96 01       	movw	r18, r12
     d5e:	8a d2       	rcall	.+1300   	; 0x1274 <__udivmodsi4>
     d60:	21 50       	subi	r18, 0x01	; 1
     d62:	31 09       	sbc	r19, r1
     d64:	41 09       	sbc	r20, r1
     d66:	51 09       	sbc	r21, r1
     d68:	56 95       	lsr	r21
     d6a:	47 95       	ror	r20
     d6c:	37 95       	ror	r19
     d6e:	27 95       	ror	r18
     d70:	21 15       	cp	r18, r1
     d72:	80 e1       	ldi	r24, 0x10	; 16
     d74:	38 07       	cpc	r19, r24
     d76:	90 f0       	brcs	.+36     	; 0xd9c <_ZN14HardwareSerial5beginEm+0x7e>
     d78:	ec 89       	ldd	r30, Y+20	; 0x14
     d7a:	fd 89       	ldd	r31, Y+21	; 0x15
     d7c:	10 82       	st	Z, r1
     d7e:	60 e8       	ldi	r22, 0x80	; 128
     d80:	74 e8       	ldi	r23, 0x84	; 132
     d82:	8e e1       	ldi	r24, 0x1E	; 30
     d84:	90 e0       	ldi	r25, 0x00	; 0
     d86:	a7 01       	movw	r20, r14
     d88:	96 01       	movw	r18, r12
     d8a:	74 d2       	rcall	.+1256   	; 0x1274 <__udivmodsi4>
     d8c:	21 50       	subi	r18, 0x01	; 1
     d8e:	31 09       	sbc	r19, r1
     d90:	41 09       	sbc	r20, r1
     d92:	51 09       	sbc	r21, r1
     d94:	56 95       	lsr	r21
     d96:	47 95       	ror	r20
     d98:	37 95       	ror	r19
     d9a:	27 95       	ror	r18
     d9c:	e8 89       	ldd	r30, Y+16	; 0x10
     d9e:	f9 89       	ldd	r31, Y+17	; 0x11
     da0:	30 83       	st	Z, r19
     da2:	ea 89       	ldd	r30, Y+18	; 0x12
     da4:	fb 89       	ldd	r31, Y+19	; 0x13
     da6:	20 83       	st	Z, r18
     da8:	19 a2       	std	Y+33, r1	; 0x21
     daa:	ee 89       	ldd	r30, Y+22	; 0x16
     dac:	ff 89       	ldd	r31, Y+23	; 0x17
     dae:	40 81       	ld	r20, Z
     db0:	81 e0       	ldi	r24, 0x01	; 1
     db2:	90 e0       	ldi	r25, 0x00	; 0
     db4:	9c 01       	movw	r18, r24
     db6:	0c 8c       	ldd	r0, Y+28	; 0x1c
     db8:	02 c0       	rjmp	.+4      	; 0xdbe <_ZN14HardwareSerial5beginEm+0xa0>
     dba:	22 0f       	add	r18, r18
     dbc:	33 1f       	adc	r19, r19
     dbe:	0a 94       	dec	r0
     dc0:	e2 f7       	brpl	.-8      	; 0xdba <_ZN14HardwareSerial5beginEm+0x9c>
     dc2:	42 2b       	or	r20, r18
     dc4:	40 83       	st	Z, r20
     dc6:	ee 89       	ldd	r30, Y+22	; 0x16
     dc8:	ff 89       	ldd	r31, Y+23	; 0x17
     dca:	40 81       	ld	r20, Z
     dcc:	9c 01       	movw	r18, r24
     dce:	0d 8c       	ldd	r0, Y+29	; 0x1d
     dd0:	02 c0       	rjmp	.+4      	; 0xdd6 <_ZN14HardwareSerial5beginEm+0xb8>
     dd2:	22 0f       	add	r18, r18
     dd4:	33 1f       	adc	r19, r19
     dd6:	0a 94       	dec	r0
     dd8:	e2 f7       	brpl	.-8      	; 0xdd2 <_ZN14HardwareSerial5beginEm+0xb4>
     dda:	42 2b       	or	r20, r18
     ddc:	40 83       	st	Z, r20
     dde:	ee 89       	ldd	r30, Y+22	; 0x16
     de0:	ff 89       	ldd	r31, Y+23	; 0x17
     de2:	40 81       	ld	r20, Z
     de4:	9c 01       	movw	r18, r24
     de6:	0e 8c       	ldd	r0, Y+30	; 0x1e
     de8:	02 c0       	rjmp	.+4      	; 0xdee <_ZN14HardwareSerial5beginEm+0xd0>
     dea:	22 0f       	add	r18, r18
     dec:	33 1f       	adc	r19, r19
     dee:	0a 94       	dec	r0
     df0:	e2 f7       	brpl	.-8      	; 0xdea <_ZN14HardwareSerial5beginEm+0xcc>
     df2:	42 2b       	or	r20, r18
     df4:	40 83       	st	Z, r20
     df6:	ee 89       	ldd	r30, Y+22	; 0x16
     df8:	ff 89       	ldd	r31, Y+23	; 0x17
     dfa:	20 81       	ld	r18, Z
     dfc:	0f 8c       	ldd	r0, Y+31	; 0x1f
     dfe:	02 c0       	rjmp	.+4      	; 0xe04 <_ZN14HardwareSerial5beginEm+0xe6>
     e00:	88 0f       	add	r24, r24
     e02:	99 1f       	adc	r25, r25
     e04:	0a 94       	dec	r0
     e06:	e2 f7       	brpl	.-8      	; 0xe00 <_ZN14HardwareSerial5beginEm+0xe2>
     e08:	80 95       	com	r24
     e0a:	82 23       	and	r24, r18
     e0c:	80 83       	st	Z, r24
     e0e:	df 91       	pop	r29
     e10:	cf 91       	pop	r28
     e12:	ff 90       	pop	r15
     e14:	ef 90       	pop	r14
     e16:	df 90       	pop	r13
     e18:	cf 90       	pop	r12
     e1a:	08 95       	ret

00000e1c <_GLOBAL__sub_I_rx_buffer>:
     e1c:	10 92 93 02 	sts	0x0293, r1
     e20:	10 92 92 02 	sts	0x0292, r1
     e24:	88 ee       	ldi	r24, 0xE8	; 232
     e26:	93 e0       	ldi	r25, 0x03	; 3
     e28:	a0 e0       	ldi	r26, 0x00	; 0
     e2a:	b0 e0       	ldi	r27, 0x00	; 0
     e2c:	80 93 94 02 	sts	0x0294, r24
     e30:	90 93 95 02 	sts	0x0295, r25
     e34:	a0 93 96 02 	sts	0x0296, r26
     e38:	b0 93 97 02 	sts	0x0297, r27
     e3c:	8e e6       	ldi	r24, 0x6E	; 110
     e3e:	91 e0       	ldi	r25, 0x01	; 1
     e40:	90 93 91 02 	sts	0x0291, r25
     e44:	80 93 90 02 	sts	0x0290, r24
     e48:	86 ef       	ldi	r24, 0xF6	; 246
     e4a:	92 e0       	ldi	r25, 0x02	; 2
     e4c:	90 93 9d 02 	sts	0x029D, r25
     e50:	80 93 9c 02 	sts	0x029C, r24
     e54:	82 eb       	ldi	r24, 0xB2	; 178
     e56:	92 e0       	ldi	r25, 0x02	; 2
     e58:	90 93 9f 02 	sts	0x029F, r25
     e5c:	80 93 9e 02 	sts	0x029E, r24
     e60:	85 ec       	ldi	r24, 0xC5	; 197
     e62:	90 e0       	ldi	r25, 0x00	; 0
     e64:	90 93 a1 02 	sts	0x02A1, r25
     e68:	80 93 a0 02 	sts	0x02A0, r24
     e6c:	84 ec       	ldi	r24, 0xC4	; 196
     e6e:	90 e0       	ldi	r25, 0x00	; 0
     e70:	90 93 a3 02 	sts	0x02A3, r25
     e74:	80 93 a2 02 	sts	0x02A2, r24
     e78:	80 ec       	ldi	r24, 0xC0	; 192
     e7a:	90 e0       	ldi	r25, 0x00	; 0
     e7c:	90 93 a5 02 	sts	0x02A5, r25
     e80:	80 93 a4 02 	sts	0x02A4, r24
     e84:	81 ec       	ldi	r24, 0xC1	; 193
     e86:	90 e0       	ldi	r25, 0x00	; 0
     e88:	90 93 a7 02 	sts	0x02A7, r25
     e8c:	80 93 a6 02 	sts	0x02A6, r24
     e90:	82 ec       	ldi	r24, 0xC2	; 194
     e92:	90 e0       	ldi	r25, 0x00	; 0
     e94:	90 93 a9 02 	sts	0x02A9, r25
     e98:	80 93 a8 02 	sts	0x02A8, r24
     e9c:	86 ec       	ldi	r24, 0xC6	; 198
     e9e:	90 e0       	ldi	r25, 0x00	; 0
     ea0:	90 93 ab 02 	sts	0x02AB, r25
     ea4:	80 93 aa 02 	sts	0x02AA, r24
     ea8:	84 e0       	ldi	r24, 0x04	; 4
     eaa:	80 93 ac 02 	sts	0x02AC, r24
     eae:	83 e0       	ldi	r24, 0x03	; 3
     eb0:	80 93 ad 02 	sts	0x02AD, r24
     eb4:	87 e0       	ldi	r24, 0x07	; 7
     eb6:	80 93 ae 02 	sts	0x02AE, r24
     eba:	85 e0       	ldi	r24, 0x05	; 5
     ebc:	80 93 af 02 	sts	0x02AF, r24
     ec0:	81 e0       	ldi	r24, 0x01	; 1
     ec2:	80 93 b0 02 	sts	0x02B0, r24
     ec6:	08 95       	ret

00000ec8 <main>:
     ec8:	9a d1       	rcall	.+820    	; 0x11fe <init>
     eca:	22 dc       	rcall	.-1980   	; 0x710 <setup>
     ecc:	cd e4       	ldi	r28, 0x4D	; 77
     ece:	d6 e0       	ldi	r29, 0x06	; 6
     ed0:	27 dc       	rcall	.-1970   	; 0x720 <loop>
     ed2:	20 97       	sbiw	r28, 0x00	; 0
     ed4:	e9 f3       	breq	.-6      	; 0xed0 <main+0x8>
     ed6:	e1 de       	rcall	.-574    	; 0xc9a <_Z14serialEventRunv>
     ed8:	fb cf       	rjmp	.-10     	; 0xed0 <main+0x8>

00000eda <_ZN5Print5writeEPKhj>:
     eda:	cf 92       	push	r12
     edc:	df 92       	push	r13
     ede:	ef 92       	push	r14
     ee0:	ff 92       	push	r15
     ee2:	0f 93       	push	r16
     ee4:	1f 93       	push	r17
     ee6:	cf 93       	push	r28
     ee8:	df 93       	push	r29
     eea:	6c 01       	movw	r12, r24
     eec:	eb 01       	movw	r28, r22
     eee:	7a 01       	movw	r14, r20
     ef0:	e6 0e       	add	r14, r22
     ef2:	f7 1e       	adc	r15, r23
     ef4:	00 e0       	ldi	r16, 0x00	; 0
     ef6:	10 e0       	ldi	r17, 0x00	; 0
     ef8:	0b c0       	rjmp	.+22     	; 0xf10 <_ZN5Print5writeEPKhj+0x36>
     efa:	69 91       	ld	r22, Y+
     efc:	d6 01       	movw	r26, r12
     efe:	ed 91       	ld	r30, X+
     f00:	fc 91       	ld	r31, X
     f02:	01 90       	ld	r0, Z+
     f04:	f0 81       	ld	r31, Z
     f06:	e0 2d       	mov	r30, r0
     f08:	c6 01       	movw	r24, r12
     f0a:	09 95       	icall
     f0c:	08 0f       	add	r16, r24
     f0e:	19 1f       	adc	r17, r25
     f10:	ce 15       	cp	r28, r14
     f12:	df 05       	cpc	r29, r15
     f14:	91 f7       	brne	.-28     	; 0xefa <_ZN5Print5writeEPKhj+0x20>
     f16:	c8 01       	movw	r24, r16
     f18:	df 91       	pop	r29
     f1a:	cf 91       	pop	r28
     f1c:	1f 91       	pop	r17
     f1e:	0f 91       	pop	r16
     f20:	ff 90       	pop	r15
     f22:	ef 90       	pop	r14
     f24:	df 90       	pop	r13
     f26:	cf 90       	pop	r12
     f28:	08 95       	ret

00000f2a <_ZN5Print5writeEPKc>:
     f2a:	61 15       	cp	r22, r1
     f2c:	71 05       	cpc	r23, r1
     f2e:	81 f0       	breq	.+32     	; 0xf50 <_ZN5Print5writeEPKc+0x26>
     f30:	db 01       	movw	r26, r22
     f32:	0d 90       	ld	r0, X+
     f34:	00 20       	and	r0, r0
     f36:	e9 f7       	brne	.-6      	; 0xf32 <_ZN5Print5writeEPKc+0x8>
     f38:	ad 01       	movw	r20, r26
     f3a:	41 50       	subi	r20, 0x01	; 1
     f3c:	51 09       	sbc	r21, r1
     f3e:	46 1b       	sub	r20, r22
     f40:	57 0b       	sbc	r21, r23
     f42:	dc 01       	movw	r26, r24
     f44:	ed 91       	ld	r30, X+
     f46:	fc 91       	ld	r31, X
     f48:	02 80       	ldd	r0, Z+2	; 0x02
     f4a:	f3 81       	ldd	r31, Z+3	; 0x03
     f4c:	e0 2d       	mov	r30, r0
     f4e:	09 94       	ijmp
     f50:	80 e0       	ldi	r24, 0x00	; 0
     f52:	90 e0       	ldi	r25, 0x00	; 0
     f54:	08 95       	ret

00000f56 <_ZN5Print5printEPKc>:
     f56:	e9 cf       	rjmp	.-46     	; 0xf2a <_ZN5Print5writeEPKc>

00000f58 <_ZN5Print5printEc>:
     f58:	dc 01       	movw	r26, r24
     f5a:	ed 91       	ld	r30, X+
     f5c:	fc 91       	ld	r31, X
     f5e:	01 90       	ld	r0, Z+
     f60:	f0 81       	ld	r31, Z
     f62:	e0 2d       	mov	r30, r0
     f64:	09 94       	ijmp

00000f66 <_ZN5Print7printlnEv>:
     f66:	0f 93       	push	r16
     f68:	1f 93       	push	r17
     f6a:	cf 93       	push	r28
     f6c:	df 93       	push	r29
     f6e:	ec 01       	movw	r28, r24
     f70:	6d e0       	ldi	r22, 0x0D	; 13
     f72:	f2 df       	rcall	.-28     	; 0xf58 <_ZN5Print5printEc>
     f74:	8c 01       	movw	r16, r24
     f76:	6a e0       	ldi	r22, 0x0A	; 10
     f78:	ce 01       	movw	r24, r28
     f7a:	ee df       	rcall	.-36     	; 0xf58 <_ZN5Print5printEc>
     f7c:	9c 01       	movw	r18, r24
     f7e:	20 0f       	add	r18, r16
     f80:	31 1f       	adc	r19, r17
     f82:	c9 01       	movw	r24, r18
     f84:	df 91       	pop	r29
     f86:	cf 91       	pop	r28
     f88:	1f 91       	pop	r17
     f8a:	0f 91       	pop	r16
     f8c:	08 95       	ret

00000f8e <_ZN5Print7printlnEPKc>:
     f8e:	0f 93       	push	r16
     f90:	1f 93       	push	r17
     f92:	cf 93       	push	r28
     f94:	df 93       	push	r29
     f96:	ec 01       	movw	r28, r24
     f98:	c8 df       	rcall	.-112    	; 0xf2a <_ZN5Print5writeEPKc>
     f9a:	8c 01       	movw	r16, r24
     f9c:	ce 01       	movw	r24, r28
     f9e:	e3 df       	rcall	.-58     	; 0xf66 <_ZN5Print7printlnEv>
     fa0:	98 01       	movw	r18, r16
     fa2:	28 0f       	add	r18, r24
     fa4:	39 1f       	adc	r19, r25
     fa6:	c9 01       	movw	r24, r18
     fa8:	df 91       	pop	r29
     faa:	cf 91       	pop	r28
     fac:	1f 91       	pop	r17
     fae:	0f 91       	pop	r16
     fb0:	08 95       	ret

00000fb2 <_ZN5Print11printNumberEmh>:
     fb2:	4f 92       	push	r4
     fb4:	5f 92       	push	r5
     fb6:	6f 92       	push	r6
     fb8:	7f 92       	push	r7
     fba:	9f 92       	push	r9
     fbc:	af 92       	push	r10
     fbe:	bf 92       	push	r11
     fc0:	cf 92       	push	r12
     fc2:	df 92       	push	r13
     fc4:	ef 92       	push	r14
     fc6:	ff 92       	push	r15
     fc8:	0f 93       	push	r16
     fca:	1f 93       	push	r17
     fcc:	cf 93       	push	r28
     fce:	df 93       	push	r29
     fd0:	cd b7       	in	r28, 0x3d	; 61
     fd2:	de b7       	in	r29, 0x3e	; 62
     fd4:	a1 97       	sbiw	r28, 0x21	; 33
     fd6:	0f b6       	in	r0, 0x3f	; 63
     fd8:	f8 94       	cli
     fda:	de bf       	out	0x3e, r29	; 62
     fdc:	0f be       	out	0x3f, r0	; 63
     fde:	cd bf       	out	0x3d, r28	; 61
     fe0:	5c 01       	movw	r10, r24
     fe2:	6a 01       	movw	r12, r20
     fe4:	7b 01       	movw	r14, r22
     fe6:	92 2e       	mov	r9, r18
     fe8:	19 a2       	std	Y+33, r1	; 0x21
     fea:	81 e0       	ldi	r24, 0x01	; 1
     fec:	82 17       	cp	r24, r18
     fee:	10 f0       	brcs	.+4      	; 0xff4 <_ZN5Print11printNumberEmh+0x42>
     ff0:	8a e0       	ldi	r24, 0x0A	; 10
     ff2:	98 2e       	mov	r9, r24
     ff4:	8e 01       	movw	r16, r28
     ff6:	0f 5d       	subi	r16, 0xDF	; 223
     ff8:	1f 4f       	sbci	r17, 0xFF	; 255
     ffa:	49 2c       	mov	r4, r9
     ffc:	51 2c       	mov	r5, r1
     ffe:	61 2c       	mov	r6, r1
    1000:	71 2c       	mov	r7, r1
    1002:	c7 01       	movw	r24, r14
    1004:	b6 01       	movw	r22, r12
    1006:	a3 01       	movw	r20, r6
    1008:	92 01       	movw	r18, r4
    100a:	34 d1       	rcall	.+616    	; 0x1274 <__udivmodsi4>
    100c:	8c 2d       	mov	r24, r12
    100e:	92 9e       	mul	r9, r18
    1010:	80 19       	sub	r24, r0
    1012:	11 24       	eor	r1, r1
    1014:	01 50       	subi	r16, 0x01	; 1
    1016:	11 09       	sbc	r17, r1
    1018:	8a 30       	cpi	r24, 0x0A	; 10
    101a:	10 f4       	brcc	.+4      	; 0x1020 <_ZN5Print11printNumberEmh+0x6e>
    101c:	80 5d       	subi	r24, 0xD0	; 208
    101e:	01 c0       	rjmp	.+2      	; 0x1022 <_ZN5Print11printNumberEmh+0x70>
    1020:	89 5c       	subi	r24, 0xC9	; 201
    1022:	f8 01       	movw	r30, r16
    1024:	80 83       	st	Z, r24
    1026:	69 01       	movw	r12, r18
    1028:	7a 01       	movw	r14, r20
    102a:	c1 14       	cp	r12, r1
    102c:	d1 04       	cpc	r13, r1
    102e:	e1 04       	cpc	r14, r1
    1030:	f1 04       	cpc	r15, r1
    1032:	39 f7       	brne	.-50     	; 0x1002 <_ZN5Print11printNumberEmh+0x50>
    1034:	b8 01       	movw	r22, r16
    1036:	c5 01       	movw	r24, r10
    1038:	78 df       	rcall	.-272    	; 0xf2a <_ZN5Print5writeEPKc>
    103a:	a1 96       	adiw	r28, 0x21	; 33
    103c:	0f b6       	in	r0, 0x3f	; 63
    103e:	f8 94       	cli
    1040:	de bf       	out	0x3e, r29	; 62
    1042:	0f be       	out	0x3f, r0	; 63
    1044:	cd bf       	out	0x3d, r28	; 61
    1046:	df 91       	pop	r29
    1048:	cf 91       	pop	r28
    104a:	1f 91       	pop	r17
    104c:	0f 91       	pop	r16
    104e:	ff 90       	pop	r15
    1050:	ef 90       	pop	r14
    1052:	df 90       	pop	r13
    1054:	cf 90       	pop	r12
    1056:	bf 90       	pop	r11
    1058:	af 90       	pop	r10
    105a:	9f 90       	pop	r9
    105c:	7f 90       	pop	r7
    105e:	6f 90       	pop	r6
    1060:	5f 90       	pop	r5
    1062:	4f 90       	pop	r4
    1064:	08 95       	ret

00001066 <_ZN5Print5printEmi>:
    1066:	21 15       	cp	r18, r1
    1068:	31 05       	cpc	r19, r1
    106a:	41 f4       	brne	.+16     	; 0x107c <_ZN5Print5printEmi+0x16>
    106c:	dc 01       	movw	r26, r24
    106e:	ed 91       	ld	r30, X+
    1070:	fc 91       	ld	r31, X
    1072:	01 90       	ld	r0, Z+
    1074:	f0 81       	ld	r31, Z
    1076:	e0 2d       	mov	r30, r0
    1078:	64 2f       	mov	r22, r20
    107a:	09 94       	ijmp
    107c:	9a cf       	rjmp	.-204    	; 0xfb2 <_ZN5Print11printNumberEmh>

0000107e <_ZN5Print7printlnEji>:
    107e:	0f 93       	push	r16
    1080:	1f 93       	push	r17
    1082:	cf 93       	push	r28
    1084:	df 93       	push	r29
    1086:	ec 01       	movw	r28, r24
    1088:	9a 01       	movw	r18, r20
    108a:	ab 01       	movw	r20, r22
    108c:	60 e0       	ldi	r22, 0x00	; 0
    108e:	70 e0       	ldi	r23, 0x00	; 0
    1090:	ea df       	rcall	.-44     	; 0x1066 <_ZN5Print5printEmi>
    1092:	8c 01       	movw	r16, r24
    1094:	ce 01       	movw	r24, r28
    1096:	67 df       	rcall	.-306    	; 0xf66 <_ZN5Print7printlnEv>
    1098:	98 01       	movw	r18, r16
    109a:	28 0f       	add	r18, r24
    109c:	39 1f       	adc	r19, r25
    109e:	c9 01       	movw	r24, r18
    10a0:	df 91       	pop	r29
    10a2:	cf 91       	pop	r28
    10a4:	1f 91       	pop	r17
    10a6:	0f 91       	pop	r16
    10a8:	08 95       	ret

000010aa <_ZN5Print5printEli>:
    10aa:	cf 92       	push	r12
    10ac:	df 92       	push	r13
    10ae:	ef 92       	push	r14
    10b0:	ff 92       	push	r15
    10b2:	0f 93       	push	r16
    10b4:	1f 93       	push	r17
    10b6:	cf 93       	push	r28
    10b8:	df 93       	push	r29
    10ba:	ec 01       	movw	r28, r24
    10bc:	6a 01       	movw	r12, r20
    10be:	7b 01       	movw	r14, r22
    10c0:	21 15       	cp	r18, r1
    10c2:	31 05       	cpc	r19, r1
    10c4:	79 f4       	brne	.+30     	; 0x10e4 <_ZN5Print5printEli+0x3a>
    10c6:	e8 81       	ld	r30, Y
    10c8:	f9 81       	ldd	r31, Y+1	; 0x01
    10ca:	01 90       	ld	r0, Z+
    10cc:	f0 81       	ld	r31, Z
    10ce:	e0 2d       	mov	r30, r0
    10d0:	64 2f       	mov	r22, r20
    10d2:	df 91       	pop	r29
    10d4:	cf 91       	pop	r28
    10d6:	1f 91       	pop	r17
    10d8:	0f 91       	pop	r16
    10da:	ff 90       	pop	r15
    10dc:	ef 90       	pop	r14
    10de:	df 90       	pop	r13
    10e0:	cf 90       	pop	r12
    10e2:	09 94       	ijmp
    10e4:	2a 30       	cpi	r18, 0x0A	; 10
    10e6:	31 05       	cpc	r19, r1
    10e8:	19 f4       	brne	.+6      	; 0x10f0 <_ZN5Print5printEli+0x46>
    10ea:	77 fd       	sbrc	r23, 7
    10ec:	0d c0       	rjmp	.+26     	; 0x1108 <_ZN5Print5printEli+0x5e>
    10ee:	2a e0       	ldi	r18, 0x0A	; 10
    10f0:	b7 01       	movw	r22, r14
    10f2:	a6 01       	movw	r20, r12
    10f4:	ce 01       	movw	r24, r28
    10f6:	df 91       	pop	r29
    10f8:	cf 91       	pop	r28
    10fa:	1f 91       	pop	r17
    10fc:	0f 91       	pop	r16
    10fe:	ff 90       	pop	r15
    1100:	ef 90       	pop	r14
    1102:	df 90       	pop	r13
    1104:	cf 90       	pop	r12
    1106:	55 cf       	rjmp	.-342    	; 0xfb2 <_ZN5Print11printNumberEmh>
    1108:	6d e2       	ldi	r22, 0x2D	; 45
    110a:	26 df       	rcall	.-436    	; 0xf58 <_ZN5Print5printEc>
    110c:	8c 01       	movw	r16, r24
    110e:	44 27       	eor	r20, r20
    1110:	55 27       	eor	r21, r21
    1112:	ba 01       	movw	r22, r20
    1114:	4c 19       	sub	r20, r12
    1116:	5d 09       	sbc	r21, r13
    1118:	6e 09       	sbc	r22, r14
    111a:	7f 09       	sbc	r23, r15
    111c:	2a e0       	ldi	r18, 0x0A	; 10
    111e:	ce 01       	movw	r24, r28
    1120:	48 df       	rcall	.-368    	; 0xfb2 <_ZN5Print11printNumberEmh>
    1122:	08 0f       	add	r16, r24
    1124:	19 1f       	adc	r17, r25
    1126:	c8 01       	movw	r24, r16
    1128:	df 91       	pop	r29
    112a:	cf 91       	pop	r28
    112c:	1f 91       	pop	r17
    112e:	0f 91       	pop	r16
    1130:	ff 90       	pop	r15
    1132:	ef 90       	pop	r14
    1134:	df 90       	pop	r13
    1136:	cf 90       	pop	r12
    1138:	08 95       	ret

0000113a <_ZN5Print7printlnEii>:
    113a:	0f 93       	push	r16
    113c:	1f 93       	push	r17
    113e:	cf 93       	push	r28
    1140:	df 93       	push	r29
    1142:	ec 01       	movw	r28, r24
    1144:	9a 01       	movw	r18, r20
    1146:	ab 01       	movw	r20, r22
    1148:	66 27       	eor	r22, r22
    114a:	57 fd       	sbrc	r21, 7
    114c:	60 95       	com	r22
    114e:	76 2f       	mov	r23, r22
    1150:	ac df       	rcall	.-168    	; 0x10aa <_ZN5Print5printEli>
    1152:	8c 01       	movw	r16, r24
    1154:	ce 01       	movw	r24, r28
    1156:	07 df       	rcall	.-498    	; 0xf66 <_ZN5Print7printlnEv>
    1158:	98 01       	movw	r18, r16
    115a:	28 0f       	add	r18, r24
    115c:	39 1f       	adc	r19, r25
    115e:	c9 01       	movw	r24, r18
    1160:	df 91       	pop	r29
    1162:	cf 91       	pop	r28
    1164:	1f 91       	pop	r17
    1166:	0f 91       	pop	r16
    1168:	08 95       	ret

0000116a <__vector_16>:
    116a:	1f 92       	push	r1
    116c:	0f 92       	push	r0
    116e:	0f b6       	in	r0, 0x3f	; 63
    1170:	0f 92       	push	r0
    1172:	11 24       	eor	r1, r1
    1174:	2f 93       	push	r18
    1176:	3f 93       	push	r19
    1178:	8f 93       	push	r24
    117a:	9f 93       	push	r25
    117c:	af 93       	push	r26
    117e:	bf 93       	push	r27
    1180:	80 91 3a 03 	lds	r24, 0x033A
    1184:	90 91 3b 03 	lds	r25, 0x033B
    1188:	a0 91 3c 03 	lds	r26, 0x033C
    118c:	b0 91 3d 03 	lds	r27, 0x033D
    1190:	30 91 42 03 	lds	r19, 0x0342
    1194:	23 2f       	mov	r18, r19
    1196:	2d 5f       	subi	r18, 0xFD	; 253
    1198:	2d 37       	cpi	r18, 0x7D	; 125
    119a:	20 f4       	brcc	.+8      	; 0x11a4 <__vector_16+0x3a>
    119c:	01 96       	adiw	r24, 0x01	; 1
    119e:	a1 1d       	adc	r26, r1
    11a0:	b1 1d       	adc	r27, r1
    11a2:	05 c0       	rjmp	.+10     	; 0x11ae <__vector_16+0x44>
    11a4:	23 2f       	mov	r18, r19
    11a6:	2a 57       	subi	r18, 0x7A	; 122
    11a8:	02 96       	adiw	r24, 0x02	; 2
    11aa:	a1 1d       	adc	r26, r1
    11ac:	b1 1d       	adc	r27, r1
    11ae:	20 93 42 03 	sts	0x0342, r18
    11b2:	80 93 3a 03 	sts	0x033A, r24
    11b6:	90 93 3b 03 	sts	0x033B, r25
    11ba:	a0 93 3c 03 	sts	0x033C, r26
    11be:	b0 93 3d 03 	sts	0x033D, r27
    11c2:	80 91 3e 03 	lds	r24, 0x033E
    11c6:	90 91 3f 03 	lds	r25, 0x033F
    11ca:	a0 91 40 03 	lds	r26, 0x0340
    11ce:	b0 91 41 03 	lds	r27, 0x0341
    11d2:	01 96       	adiw	r24, 0x01	; 1
    11d4:	a1 1d       	adc	r26, r1
    11d6:	b1 1d       	adc	r27, r1
    11d8:	80 93 3e 03 	sts	0x033E, r24
    11dc:	90 93 3f 03 	sts	0x033F, r25
    11e0:	a0 93 40 03 	sts	0x0340, r26
    11e4:	b0 93 41 03 	sts	0x0341, r27
    11e8:	bf 91       	pop	r27
    11ea:	af 91       	pop	r26
    11ec:	9f 91       	pop	r25
    11ee:	8f 91       	pop	r24
    11f0:	3f 91       	pop	r19
    11f2:	2f 91       	pop	r18
    11f4:	0f 90       	pop	r0
    11f6:	0f be       	out	0x3f, r0	; 63
    11f8:	0f 90       	pop	r0
    11fa:	1f 90       	pop	r1
    11fc:	18 95       	reti

000011fe <init>:
    11fe:	78 94       	sei
    1200:	84 b5       	in	r24, 0x24	; 36
    1202:	82 60       	ori	r24, 0x02	; 2
    1204:	84 bd       	out	0x24, r24	; 36
    1206:	84 b5       	in	r24, 0x24	; 36
    1208:	81 60       	ori	r24, 0x01	; 1
    120a:	84 bd       	out	0x24, r24	; 36
    120c:	85 b5       	in	r24, 0x25	; 37
    120e:	82 60       	ori	r24, 0x02	; 2
    1210:	85 bd       	out	0x25, r24	; 37
    1212:	85 b5       	in	r24, 0x25	; 37
    1214:	81 60       	ori	r24, 0x01	; 1
    1216:	85 bd       	out	0x25, r24	; 37
    1218:	ee e6       	ldi	r30, 0x6E	; 110
    121a:	f0 e0       	ldi	r31, 0x00	; 0
    121c:	80 81       	ld	r24, Z
    121e:	81 60       	ori	r24, 0x01	; 1
    1220:	80 83       	st	Z, r24
    1222:	e1 e8       	ldi	r30, 0x81	; 129
    1224:	f0 e0       	ldi	r31, 0x00	; 0
    1226:	10 82       	st	Z, r1
    1228:	80 81       	ld	r24, Z
    122a:	82 60       	ori	r24, 0x02	; 2
    122c:	80 83       	st	Z, r24
    122e:	80 81       	ld	r24, Z
    1230:	81 60       	ori	r24, 0x01	; 1
    1232:	80 83       	st	Z, r24
    1234:	e0 e8       	ldi	r30, 0x80	; 128
    1236:	f0 e0       	ldi	r31, 0x00	; 0
    1238:	80 81       	ld	r24, Z
    123a:	81 60       	ori	r24, 0x01	; 1
    123c:	80 83       	st	Z, r24
    123e:	e1 eb       	ldi	r30, 0xB1	; 177
    1240:	f0 e0       	ldi	r31, 0x00	; 0
    1242:	80 81       	ld	r24, Z
    1244:	84 60       	ori	r24, 0x04	; 4
    1246:	80 83       	st	Z, r24
    1248:	e0 eb       	ldi	r30, 0xB0	; 176
    124a:	f0 e0       	ldi	r31, 0x00	; 0
    124c:	80 81       	ld	r24, Z
    124e:	81 60       	ori	r24, 0x01	; 1
    1250:	80 83       	st	Z, r24
    1252:	ea e7       	ldi	r30, 0x7A	; 122
    1254:	f0 e0       	ldi	r31, 0x00	; 0
    1256:	80 81       	ld	r24, Z
    1258:	84 60       	ori	r24, 0x04	; 4
    125a:	80 83       	st	Z, r24
    125c:	80 81       	ld	r24, Z
    125e:	82 60       	ori	r24, 0x02	; 2
    1260:	80 83       	st	Z, r24
    1262:	80 81       	ld	r24, Z
    1264:	81 60       	ori	r24, 0x01	; 1
    1266:	80 83       	st	Z, r24
    1268:	80 81       	ld	r24, Z
    126a:	80 68       	ori	r24, 0x80	; 128
    126c:	80 83       	st	Z, r24
    126e:	10 92 c1 00 	sts	0x00C1, r1
    1272:	08 95       	ret

00001274 <__udivmodsi4>:
    1274:	a1 e2       	ldi	r26, 0x21	; 33
    1276:	1a 2e       	mov	r1, r26
    1278:	aa 1b       	sub	r26, r26
    127a:	bb 1b       	sub	r27, r27
    127c:	fd 01       	movw	r30, r26
    127e:	0d c0       	rjmp	.+26     	; 0x129a <__udivmodsi4_ep>

00001280 <__udivmodsi4_loop>:
    1280:	aa 1f       	adc	r26, r26
    1282:	bb 1f       	adc	r27, r27
    1284:	ee 1f       	adc	r30, r30
    1286:	ff 1f       	adc	r31, r31
    1288:	a2 17       	cp	r26, r18
    128a:	b3 07       	cpc	r27, r19
    128c:	e4 07       	cpc	r30, r20
    128e:	f5 07       	cpc	r31, r21
    1290:	20 f0       	brcs	.+8      	; 0x129a <__udivmodsi4_ep>
    1292:	a2 1b       	sub	r26, r18
    1294:	b3 0b       	sbc	r27, r19
    1296:	e4 0b       	sbc	r30, r20
    1298:	f5 0b       	sbc	r31, r21

0000129a <__udivmodsi4_ep>:
    129a:	66 1f       	adc	r22, r22
    129c:	77 1f       	adc	r23, r23
    129e:	88 1f       	adc	r24, r24
    12a0:	99 1f       	adc	r25, r25
    12a2:	1a 94       	dec	r1
    12a4:	69 f7       	brne	.-38     	; 0x1280 <__udivmodsi4_loop>
    12a6:	60 95       	com	r22
    12a8:	70 95       	com	r23
    12aa:	80 95       	com	r24
    12ac:	90 95       	com	r25
    12ae:	9b 01       	movw	r18, r22
    12b0:	ac 01       	movw	r20, r24
    12b2:	bd 01       	movw	r22, r26
    12b4:	cf 01       	movw	r24, r30
    12b6:	08 95       	ret

000012b8 <__tablejump2__>:
    12b8:	ee 0f       	add	r30, r30
    12ba:	ff 1f       	adc	r31, r31

000012bc <__tablejump__>:
    12bc:	05 90       	lpm	r0, Z+
    12be:	f4 91       	lpm	r31, Z
    12c0:	e0 2d       	mov	r30, r0
    12c2:	09 94       	ijmp

000012c4 <memcpy>:
    12c4:	fb 01       	movw	r30, r22
    12c6:	dc 01       	movw	r26, r24
    12c8:	02 c0       	rjmp	.+4      	; 0x12ce <memcpy+0xa>
    12ca:	01 90       	ld	r0, Z+
    12cc:	0d 92       	st	X+, r0
    12ce:	41 50       	subi	r20, 0x01	; 1
    12d0:	50 40       	sbci	r21, 0x00	; 0
    12d2:	d8 f7       	brcc	.-10     	; 0x12ca <memcpy+0x6>
    12d4:	08 95       	ret

000012d6 <sprintf>:
    12d6:	ae e0       	ldi	r26, 0x0E	; 14
    12d8:	b0 e0       	ldi	r27, 0x00	; 0
    12da:	e0 e7       	ldi	r30, 0x70	; 112
    12dc:	f9 e0       	ldi	r31, 0x09	; 9
    12de:	95 c2       	rjmp	.+1322   	; 0x180a <__prologue_saves__+0x1c>
    12e0:	0d 89       	ldd	r16, Y+21	; 0x15
    12e2:	1e 89       	ldd	r17, Y+22	; 0x16
    12e4:	86 e0       	ldi	r24, 0x06	; 6
    12e6:	8c 83       	std	Y+4, r24	; 0x04
    12e8:	1a 83       	std	Y+2, r17	; 0x02
    12ea:	09 83       	std	Y+1, r16	; 0x01
    12ec:	8f ef       	ldi	r24, 0xFF	; 255
    12ee:	9f e7       	ldi	r25, 0x7F	; 127
    12f0:	9e 83       	std	Y+6, r25	; 0x06
    12f2:	8d 83       	std	Y+5, r24	; 0x05
    12f4:	ce 01       	movw	r24, r28
    12f6:	49 96       	adiw	r24, 0x19	; 25
    12f8:	ac 01       	movw	r20, r24
    12fa:	6f 89       	ldd	r22, Y+23	; 0x17
    12fc:	78 8d       	ldd	r23, Y+24	; 0x18
    12fe:	ce 01       	movw	r24, r28
    1300:	01 96       	adiw	r24, 0x01	; 1
    1302:	08 d0       	rcall	.+16     	; 0x1314 <vfprintf>
    1304:	ef 81       	ldd	r30, Y+7	; 0x07
    1306:	f8 85       	ldd	r31, Y+8	; 0x08
    1308:	e0 0f       	add	r30, r16
    130a:	f1 1f       	adc	r31, r17
    130c:	10 82       	st	Z, r1
    130e:	2e 96       	adiw	r28, 0x0e	; 14
    1310:	e4 e0       	ldi	r30, 0x04	; 4
    1312:	97 c2       	rjmp	.+1326   	; 0x1842 <__epilogue_restores__+0x1c>

00001314 <vfprintf>:
    1314:	ac e0       	ldi	r26, 0x0C	; 12
    1316:	b0 e0       	ldi	r27, 0x00	; 0
    1318:	ef e8       	ldi	r30, 0x8F	; 143
    131a:	f9 e0       	ldi	r31, 0x09	; 9
    131c:	68 c2       	rjmp	.+1232   	; 0x17ee <__prologue_saves__>
    131e:	7c 01       	movw	r14, r24
    1320:	6b 01       	movw	r12, r22
    1322:	8a 01       	movw	r16, r20
    1324:	fc 01       	movw	r30, r24
    1326:	17 82       	std	Z+7, r1	; 0x07
    1328:	16 82       	std	Z+6, r1	; 0x06
    132a:	83 81       	ldd	r24, Z+3	; 0x03
    132c:	81 ff       	sbrs	r24, 1
    132e:	b9 c1       	rjmp	.+882    	; 0x16a2 <vfprintf+0x38e>
    1330:	88 24       	eor	r8, r8
    1332:	83 94       	inc	r8
    1334:	91 2c       	mov	r9, r1
    1336:	8c 0e       	add	r8, r28
    1338:	9d 1e       	adc	r9, r29
    133a:	f7 01       	movw	r30, r14
    133c:	93 81       	ldd	r25, Z+3	; 0x03
    133e:	f6 01       	movw	r30, r12
    1340:	93 fd       	sbrc	r25, 3
    1342:	85 91       	lpm	r24, Z+
    1344:	93 ff       	sbrs	r25, 3
    1346:	81 91       	ld	r24, Z+
    1348:	6f 01       	movw	r12, r30
    134a:	88 23       	and	r24, r24
    134c:	09 f4       	brne	.+2      	; 0x1350 <vfprintf+0x3c>
    134e:	a5 c1       	rjmp	.+842    	; 0x169a <vfprintf+0x386>
    1350:	85 32       	cpi	r24, 0x25	; 37
    1352:	39 f4       	brne	.+14     	; 0x1362 <vfprintf+0x4e>
    1354:	93 fd       	sbrc	r25, 3
    1356:	85 91       	lpm	r24, Z+
    1358:	93 ff       	sbrs	r25, 3
    135a:	81 91       	ld	r24, Z+
    135c:	6f 01       	movw	r12, r30
    135e:	85 32       	cpi	r24, 0x25	; 37
    1360:	21 f4       	brne	.+8      	; 0x136a <vfprintf+0x56>
    1362:	b7 01       	movw	r22, r14
    1364:	90 e0       	ldi	r25, 0x00	; 0
    1366:	b9 d1       	rcall	.+882    	; 0x16da <fputc>
    1368:	e8 cf       	rjmp	.-48     	; 0x133a <vfprintf+0x26>
    136a:	51 2c       	mov	r5, r1
    136c:	31 2c       	mov	r3, r1
    136e:	20 e0       	ldi	r18, 0x00	; 0
    1370:	20 32       	cpi	r18, 0x20	; 32
    1372:	a8 f4       	brcc	.+42     	; 0x139e <vfprintf+0x8a>
    1374:	8b 32       	cpi	r24, 0x2B	; 43
    1376:	61 f0       	breq	.+24     	; 0x1390 <vfprintf+0x7c>
    1378:	28 f4       	brcc	.+10     	; 0x1384 <vfprintf+0x70>
    137a:	80 32       	cpi	r24, 0x20	; 32
    137c:	51 f0       	breq	.+20     	; 0x1392 <vfprintf+0x7e>
    137e:	83 32       	cpi	r24, 0x23	; 35
    1380:	71 f4       	brne	.+28     	; 0x139e <vfprintf+0x8a>
    1382:	0b c0       	rjmp	.+22     	; 0x139a <vfprintf+0x86>
    1384:	8d 32       	cpi	r24, 0x2D	; 45
    1386:	39 f0       	breq	.+14     	; 0x1396 <vfprintf+0x82>
    1388:	80 33       	cpi	r24, 0x30	; 48
    138a:	49 f4       	brne	.+18     	; 0x139e <vfprintf+0x8a>
    138c:	21 60       	ori	r18, 0x01	; 1
    138e:	28 c0       	rjmp	.+80     	; 0x13e0 <vfprintf+0xcc>
    1390:	22 60       	ori	r18, 0x02	; 2
    1392:	24 60       	ori	r18, 0x04	; 4
    1394:	25 c0       	rjmp	.+74     	; 0x13e0 <vfprintf+0xcc>
    1396:	28 60       	ori	r18, 0x08	; 8
    1398:	23 c0       	rjmp	.+70     	; 0x13e0 <vfprintf+0xcc>
    139a:	20 61       	ori	r18, 0x10	; 16
    139c:	21 c0       	rjmp	.+66     	; 0x13e0 <vfprintf+0xcc>
    139e:	27 fd       	sbrc	r18, 7
    13a0:	27 c0       	rjmp	.+78     	; 0x13f0 <vfprintf+0xdc>
    13a2:	38 2f       	mov	r19, r24
    13a4:	30 53       	subi	r19, 0x30	; 48
    13a6:	3a 30       	cpi	r19, 0x0A	; 10
    13a8:	78 f4       	brcc	.+30     	; 0x13c8 <vfprintf+0xb4>
    13aa:	26 ff       	sbrs	r18, 6
    13ac:	06 c0       	rjmp	.+12     	; 0x13ba <vfprintf+0xa6>
    13ae:	fa e0       	ldi	r31, 0x0A	; 10
    13b0:	5f 9e       	mul	r5, r31
    13b2:	30 0d       	add	r19, r0
    13b4:	11 24       	eor	r1, r1
    13b6:	53 2e       	mov	r5, r19
    13b8:	13 c0       	rjmp	.+38     	; 0x13e0 <vfprintf+0xcc>
    13ba:	8a e0       	ldi	r24, 0x0A	; 10
    13bc:	38 9e       	mul	r3, r24
    13be:	30 0d       	add	r19, r0
    13c0:	11 24       	eor	r1, r1
    13c2:	33 2e       	mov	r3, r19
    13c4:	20 62       	ori	r18, 0x20	; 32
    13c6:	0c c0       	rjmp	.+24     	; 0x13e0 <vfprintf+0xcc>
    13c8:	8e 32       	cpi	r24, 0x2E	; 46
    13ca:	21 f4       	brne	.+8      	; 0x13d4 <vfprintf+0xc0>
    13cc:	26 fd       	sbrc	r18, 6
    13ce:	65 c1       	rjmp	.+714    	; 0x169a <vfprintf+0x386>
    13d0:	20 64       	ori	r18, 0x40	; 64
    13d2:	06 c0       	rjmp	.+12     	; 0x13e0 <vfprintf+0xcc>
    13d4:	8c 36       	cpi	r24, 0x6C	; 108
    13d6:	11 f4       	brne	.+4      	; 0x13dc <vfprintf+0xc8>
    13d8:	20 68       	ori	r18, 0x80	; 128
    13da:	02 c0       	rjmp	.+4      	; 0x13e0 <vfprintf+0xcc>
    13dc:	88 36       	cpi	r24, 0x68	; 104
    13de:	41 f4       	brne	.+16     	; 0x13f0 <vfprintf+0xdc>
    13e0:	f6 01       	movw	r30, r12
    13e2:	93 fd       	sbrc	r25, 3
    13e4:	85 91       	lpm	r24, Z+
    13e6:	93 ff       	sbrs	r25, 3
    13e8:	81 91       	ld	r24, Z+
    13ea:	6f 01       	movw	r12, r30
    13ec:	81 11       	cpse	r24, r1
    13ee:	c0 cf       	rjmp	.-128    	; 0x1370 <vfprintf+0x5c>
    13f0:	98 2f       	mov	r25, r24
    13f2:	95 54       	subi	r25, 0x45	; 69
    13f4:	93 30       	cpi	r25, 0x03	; 3
    13f6:	18 f0       	brcs	.+6      	; 0x13fe <vfprintf+0xea>
    13f8:	90 52       	subi	r25, 0x20	; 32
    13fa:	93 30       	cpi	r25, 0x03	; 3
    13fc:	28 f4       	brcc	.+10     	; 0x1408 <vfprintf+0xf4>
    13fe:	0c 5f       	subi	r16, 0xFC	; 252
    1400:	1f 4f       	sbci	r17, 0xFF	; 255
    1402:	ff e3       	ldi	r31, 0x3F	; 63
    1404:	f9 83       	std	Y+1, r31	; 0x01
    1406:	0d c0       	rjmp	.+26     	; 0x1422 <vfprintf+0x10e>
    1408:	83 36       	cpi	r24, 0x63	; 99
    140a:	31 f0       	breq	.+12     	; 0x1418 <vfprintf+0x104>
    140c:	83 37       	cpi	r24, 0x73	; 115
    140e:	71 f0       	breq	.+28     	; 0x142c <vfprintf+0x118>
    1410:	83 35       	cpi	r24, 0x53	; 83
    1412:	09 f0       	breq	.+2      	; 0x1416 <vfprintf+0x102>
    1414:	5a c0       	rjmp	.+180    	; 0x14ca <vfprintf+0x1b6>
    1416:	22 c0       	rjmp	.+68     	; 0x145c <vfprintf+0x148>
    1418:	f8 01       	movw	r30, r16
    141a:	80 81       	ld	r24, Z
    141c:	89 83       	std	Y+1, r24	; 0x01
    141e:	0e 5f       	subi	r16, 0xFE	; 254
    1420:	1f 4f       	sbci	r17, 0xFF	; 255
    1422:	44 24       	eor	r4, r4
    1424:	43 94       	inc	r4
    1426:	51 2c       	mov	r5, r1
    1428:	54 01       	movw	r10, r8
    142a:	14 c0       	rjmp	.+40     	; 0x1454 <vfprintf+0x140>
    142c:	38 01       	movw	r6, r16
    142e:	f2 e0       	ldi	r31, 0x02	; 2
    1430:	6f 0e       	add	r6, r31
    1432:	71 1c       	adc	r7, r1
    1434:	f8 01       	movw	r30, r16
    1436:	a0 80       	ld	r10, Z
    1438:	b1 80       	ldd	r11, Z+1	; 0x01
    143a:	26 ff       	sbrs	r18, 6
    143c:	03 c0       	rjmp	.+6      	; 0x1444 <vfprintf+0x130>
    143e:	65 2d       	mov	r22, r5
    1440:	70 e0       	ldi	r23, 0x00	; 0
    1442:	02 c0       	rjmp	.+4      	; 0x1448 <vfprintf+0x134>
    1444:	6f ef       	ldi	r22, 0xFF	; 255
    1446:	7f ef       	ldi	r23, 0xFF	; 255
    1448:	c5 01       	movw	r24, r10
    144a:	2c 87       	std	Y+12, r18	; 0x0c
    144c:	3b d1       	rcall	.+630    	; 0x16c4 <strnlen>
    144e:	2c 01       	movw	r4, r24
    1450:	83 01       	movw	r16, r6
    1452:	2c 85       	ldd	r18, Y+12	; 0x0c
    1454:	6f e7       	ldi	r22, 0x7F	; 127
    1456:	26 2e       	mov	r2, r22
    1458:	22 22       	and	r2, r18
    145a:	17 c0       	rjmp	.+46     	; 0x148a <vfprintf+0x176>
    145c:	38 01       	movw	r6, r16
    145e:	f2 e0       	ldi	r31, 0x02	; 2
    1460:	6f 0e       	add	r6, r31
    1462:	71 1c       	adc	r7, r1
    1464:	f8 01       	movw	r30, r16
    1466:	a0 80       	ld	r10, Z
    1468:	b1 80       	ldd	r11, Z+1	; 0x01
    146a:	26 ff       	sbrs	r18, 6
    146c:	03 c0       	rjmp	.+6      	; 0x1474 <vfprintf+0x160>
    146e:	65 2d       	mov	r22, r5
    1470:	70 e0       	ldi	r23, 0x00	; 0
    1472:	02 c0       	rjmp	.+4      	; 0x1478 <vfprintf+0x164>
    1474:	6f ef       	ldi	r22, 0xFF	; 255
    1476:	7f ef       	ldi	r23, 0xFF	; 255
    1478:	c5 01       	movw	r24, r10
    147a:	2c 87       	std	Y+12, r18	; 0x0c
    147c:	18 d1       	rcall	.+560    	; 0x16ae <strnlen_P>
    147e:	2c 01       	movw	r4, r24
    1480:	2c 85       	ldd	r18, Y+12	; 0x0c
    1482:	50 e8       	ldi	r21, 0x80	; 128
    1484:	25 2e       	mov	r2, r21
    1486:	22 2a       	or	r2, r18
    1488:	83 01       	movw	r16, r6
    148a:	23 fc       	sbrc	r2, 3
    148c:	1a c0       	rjmp	.+52     	; 0x14c2 <vfprintf+0x1ae>
    148e:	05 c0       	rjmp	.+10     	; 0x149a <vfprintf+0x186>
    1490:	b7 01       	movw	r22, r14
    1492:	80 e2       	ldi	r24, 0x20	; 32
    1494:	90 e0       	ldi	r25, 0x00	; 0
    1496:	21 d1       	rcall	.+578    	; 0x16da <fputc>
    1498:	3a 94       	dec	r3
    149a:	83 2d       	mov	r24, r3
    149c:	90 e0       	ldi	r25, 0x00	; 0
    149e:	48 16       	cp	r4, r24
    14a0:	59 06       	cpc	r5, r25
    14a2:	b0 f3       	brcs	.-20     	; 0x1490 <vfprintf+0x17c>
    14a4:	0e c0       	rjmp	.+28     	; 0x14c2 <vfprintf+0x1ae>
    14a6:	f5 01       	movw	r30, r10
    14a8:	27 fc       	sbrc	r2, 7
    14aa:	85 91       	lpm	r24, Z+
    14ac:	27 fe       	sbrs	r2, 7
    14ae:	81 91       	ld	r24, Z+
    14b0:	5f 01       	movw	r10, r30
    14b2:	b7 01       	movw	r22, r14
    14b4:	90 e0       	ldi	r25, 0x00	; 0
    14b6:	11 d1       	rcall	.+546    	; 0x16da <fputc>
    14b8:	31 10       	cpse	r3, r1
    14ba:	3a 94       	dec	r3
    14bc:	f1 e0       	ldi	r31, 0x01	; 1
    14be:	4f 1a       	sub	r4, r31
    14c0:	51 08       	sbc	r5, r1
    14c2:	41 14       	cp	r4, r1
    14c4:	51 04       	cpc	r5, r1
    14c6:	79 f7       	brne	.-34     	; 0x14a6 <vfprintf+0x192>
    14c8:	e5 c0       	rjmp	.+458    	; 0x1694 <vfprintf+0x380>
    14ca:	84 36       	cpi	r24, 0x64	; 100
    14cc:	11 f0       	breq	.+4      	; 0x14d2 <vfprintf+0x1be>
    14ce:	89 36       	cpi	r24, 0x69	; 105
    14d0:	39 f5       	brne	.+78     	; 0x1520 <vfprintf+0x20c>
    14d2:	f8 01       	movw	r30, r16
    14d4:	27 ff       	sbrs	r18, 7
    14d6:	07 c0       	rjmp	.+14     	; 0x14e6 <vfprintf+0x1d2>
    14d8:	60 81       	ld	r22, Z
    14da:	71 81       	ldd	r23, Z+1	; 0x01
    14dc:	82 81       	ldd	r24, Z+2	; 0x02
    14de:	93 81       	ldd	r25, Z+3	; 0x03
    14e0:	0c 5f       	subi	r16, 0xFC	; 252
    14e2:	1f 4f       	sbci	r17, 0xFF	; 255
    14e4:	08 c0       	rjmp	.+16     	; 0x14f6 <vfprintf+0x1e2>
    14e6:	60 81       	ld	r22, Z
    14e8:	71 81       	ldd	r23, Z+1	; 0x01
    14ea:	88 27       	eor	r24, r24
    14ec:	77 fd       	sbrc	r23, 7
    14ee:	80 95       	com	r24
    14f0:	98 2f       	mov	r25, r24
    14f2:	0e 5f       	subi	r16, 0xFE	; 254
    14f4:	1f 4f       	sbci	r17, 0xFF	; 255
    14f6:	4f e6       	ldi	r20, 0x6F	; 111
    14f8:	b4 2e       	mov	r11, r20
    14fa:	b2 22       	and	r11, r18
    14fc:	97 ff       	sbrs	r25, 7
    14fe:	09 c0       	rjmp	.+18     	; 0x1512 <vfprintf+0x1fe>
    1500:	90 95       	com	r25
    1502:	80 95       	com	r24
    1504:	70 95       	com	r23
    1506:	61 95       	neg	r22
    1508:	7f 4f       	sbci	r23, 0xFF	; 255
    150a:	8f 4f       	sbci	r24, 0xFF	; 255
    150c:	9f 4f       	sbci	r25, 0xFF	; 255
    150e:	f0 e8       	ldi	r31, 0x80	; 128
    1510:	bf 2a       	or	r11, r31
    1512:	2a e0       	ldi	r18, 0x0A	; 10
    1514:	30 e0       	ldi	r19, 0x00	; 0
    1516:	a4 01       	movw	r20, r8
    1518:	0c d1       	rcall	.+536    	; 0x1732 <__ultoa_invert>
    151a:	a8 2e       	mov	r10, r24
    151c:	a8 18       	sub	r10, r8
    151e:	42 c0       	rjmp	.+132    	; 0x15a4 <vfprintf+0x290>
    1520:	85 37       	cpi	r24, 0x75	; 117
    1522:	31 f4       	brne	.+12     	; 0x1530 <vfprintf+0x21c>
    1524:	3f ee       	ldi	r19, 0xEF	; 239
    1526:	b3 2e       	mov	r11, r19
    1528:	b2 22       	and	r11, r18
    152a:	2a e0       	ldi	r18, 0x0A	; 10
    152c:	30 e0       	ldi	r19, 0x00	; 0
    152e:	24 c0       	rjmp	.+72     	; 0x1578 <vfprintf+0x264>
    1530:	99 ef       	ldi	r25, 0xF9	; 249
    1532:	b9 2e       	mov	r11, r25
    1534:	b2 22       	and	r11, r18
    1536:	8f 36       	cpi	r24, 0x6F	; 111
    1538:	b9 f0       	breq	.+46     	; 0x1568 <vfprintf+0x254>
    153a:	20 f4       	brcc	.+8      	; 0x1544 <vfprintf+0x230>
    153c:	88 35       	cpi	r24, 0x58	; 88
    153e:	09 f0       	breq	.+2      	; 0x1542 <vfprintf+0x22e>
    1540:	ac c0       	rjmp	.+344    	; 0x169a <vfprintf+0x386>
    1542:	0d c0       	rjmp	.+26     	; 0x155e <vfprintf+0x24a>
    1544:	80 37       	cpi	r24, 0x70	; 112
    1546:	21 f0       	breq	.+8      	; 0x1550 <vfprintf+0x23c>
    1548:	88 37       	cpi	r24, 0x78	; 120
    154a:	09 f0       	breq	.+2      	; 0x154e <vfprintf+0x23a>
    154c:	a6 c0       	rjmp	.+332    	; 0x169a <vfprintf+0x386>
    154e:	02 c0       	rjmp	.+4      	; 0x1554 <vfprintf+0x240>
    1550:	20 e1       	ldi	r18, 0x10	; 16
    1552:	b2 2a       	or	r11, r18
    1554:	b4 fe       	sbrs	r11, 4
    1556:	0b c0       	rjmp	.+22     	; 0x156e <vfprintf+0x25a>
    1558:	84 e0       	ldi	r24, 0x04	; 4
    155a:	b8 2a       	or	r11, r24
    155c:	08 c0       	rjmp	.+16     	; 0x156e <vfprintf+0x25a>
    155e:	24 ff       	sbrs	r18, 4
    1560:	09 c0       	rjmp	.+18     	; 0x1574 <vfprintf+0x260>
    1562:	e6 e0       	ldi	r30, 0x06	; 6
    1564:	be 2a       	or	r11, r30
    1566:	06 c0       	rjmp	.+12     	; 0x1574 <vfprintf+0x260>
    1568:	28 e0       	ldi	r18, 0x08	; 8
    156a:	30 e0       	ldi	r19, 0x00	; 0
    156c:	05 c0       	rjmp	.+10     	; 0x1578 <vfprintf+0x264>
    156e:	20 e1       	ldi	r18, 0x10	; 16
    1570:	30 e0       	ldi	r19, 0x00	; 0
    1572:	02 c0       	rjmp	.+4      	; 0x1578 <vfprintf+0x264>
    1574:	20 e1       	ldi	r18, 0x10	; 16
    1576:	32 e0       	ldi	r19, 0x02	; 2
    1578:	f8 01       	movw	r30, r16
    157a:	b7 fe       	sbrs	r11, 7
    157c:	07 c0       	rjmp	.+14     	; 0x158c <vfprintf+0x278>
    157e:	60 81       	ld	r22, Z
    1580:	71 81       	ldd	r23, Z+1	; 0x01
    1582:	82 81       	ldd	r24, Z+2	; 0x02
    1584:	93 81       	ldd	r25, Z+3	; 0x03
    1586:	0c 5f       	subi	r16, 0xFC	; 252
    1588:	1f 4f       	sbci	r17, 0xFF	; 255
    158a:	06 c0       	rjmp	.+12     	; 0x1598 <vfprintf+0x284>
    158c:	60 81       	ld	r22, Z
    158e:	71 81       	ldd	r23, Z+1	; 0x01
    1590:	80 e0       	ldi	r24, 0x00	; 0
    1592:	90 e0       	ldi	r25, 0x00	; 0
    1594:	0e 5f       	subi	r16, 0xFE	; 254
    1596:	1f 4f       	sbci	r17, 0xFF	; 255
    1598:	a4 01       	movw	r20, r8
    159a:	cb d0       	rcall	.+406    	; 0x1732 <__ultoa_invert>
    159c:	a8 2e       	mov	r10, r24
    159e:	a8 18       	sub	r10, r8
    15a0:	ff e7       	ldi	r31, 0x7F	; 127
    15a2:	bf 22       	and	r11, r31
    15a4:	b6 fe       	sbrs	r11, 6
    15a6:	0b c0       	rjmp	.+22     	; 0x15be <vfprintf+0x2aa>
    15a8:	2b 2d       	mov	r18, r11
    15aa:	2e 7f       	andi	r18, 0xFE	; 254
    15ac:	a5 14       	cp	r10, r5
    15ae:	50 f4       	brcc	.+20     	; 0x15c4 <vfprintf+0x2b0>
    15b0:	b4 fe       	sbrs	r11, 4
    15b2:	0a c0       	rjmp	.+20     	; 0x15c8 <vfprintf+0x2b4>
    15b4:	b2 fc       	sbrc	r11, 2
    15b6:	08 c0       	rjmp	.+16     	; 0x15c8 <vfprintf+0x2b4>
    15b8:	2b 2d       	mov	r18, r11
    15ba:	2e 7e       	andi	r18, 0xEE	; 238
    15bc:	05 c0       	rjmp	.+10     	; 0x15c8 <vfprintf+0x2b4>
    15be:	7a 2c       	mov	r7, r10
    15c0:	2b 2d       	mov	r18, r11
    15c2:	03 c0       	rjmp	.+6      	; 0x15ca <vfprintf+0x2b6>
    15c4:	7a 2c       	mov	r7, r10
    15c6:	01 c0       	rjmp	.+2      	; 0x15ca <vfprintf+0x2b6>
    15c8:	75 2c       	mov	r7, r5
    15ca:	24 ff       	sbrs	r18, 4
    15cc:	0d c0       	rjmp	.+26     	; 0x15e8 <vfprintf+0x2d4>
    15ce:	fe 01       	movw	r30, r28
    15d0:	ea 0d       	add	r30, r10
    15d2:	f1 1d       	adc	r31, r1
    15d4:	80 81       	ld	r24, Z
    15d6:	80 33       	cpi	r24, 0x30	; 48
    15d8:	11 f4       	brne	.+4      	; 0x15de <vfprintf+0x2ca>
    15da:	29 7e       	andi	r18, 0xE9	; 233
    15dc:	09 c0       	rjmp	.+18     	; 0x15f0 <vfprintf+0x2dc>
    15de:	22 ff       	sbrs	r18, 2
    15e0:	06 c0       	rjmp	.+12     	; 0x15ee <vfprintf+0x2da>
    15e2:	73 94       	inc	r7
    15e4:	73 94       	inc	r7
    15e6:	04 c0       	rjmp	.+8      	; 0x15f0 <vfprintf+0x2dc>
    15e8:	82 2f       	mov	r24, r18
    15ea:	86 78       	andi	r24, 0x86	; 134
    15ec:	09 f0       	breq	.+2      	; 0x15f0 <vfprintf+0x2dc>
    15ee:	73 94       	inc	r7
    15f0:	23 fd       	sbrc	r18, 3
    15f2:	13 c0       	rjmp	.+38     	; 0x161a <vfprintf+0x306>
    15f4:	20 ff       	sbrs	r18, 0
    15f6:	0e c0       	rjmp	.+28     	; 0x1614 <vfprintf+0x300>
    15f8:	5a 2c       	mov	r5, r10
    15fa:	73 14       	cp	r7, r3
    15fc:	58 f4       	brcc	.+22     	; 0x1614 <vfprintf+0x300>
    15fe:	53 0c       	add	r5, r3
    1600:	57 18       	sub	r5, r7
    1602:	73 2c       	mov	r7, r3
    1604:	07 c0       	rjmp	.+14     	; 0x1614 <vfprintf+0x300>
    1606:	b7 01       	movw	r22, r14
    1608:	80 e2       	ldi	r24, 0x20	; 32
    160a:	90 e0       	ldi	r25, 0x00	; 0
    160c:	2c 87       	std	Y+12, r18	; 0x0c
    160e:	65 d0       	rcall	.+202    	; 0x16da <fputc>
    1610:	73 94       	inc	r7
    1612:	2c 85       	ldd	r18, Y+12	; 0x0c
    1614:	73 14       	cp	r7, r3
    1616:	b8 f3       	brcs	.-18     	; 0x1606 <vfprintf+0x2f2>
    1618:	04 c0       	rjmp	.+8      	; 0x1622 <vfprintf+0x30e>
    161a:	73 14       	cp	r7, r3
    161c:	10 f4       	brcc	.+4      	; 0x1622 <vfprintf+0x30e>
    161e:	37 18       	sub	r3, r7
    1620:	01 c0       	rjmp	.+2      	; 0x1624 <vfprintf+0x310>
    1622:	31 2c       	mov	r3, r1
    1624:	24 ff       	sbrs	r18, 4
    1626:	11 c0       	rjmp	.+34     	; 0x164a <vfprintf+0x336>
    1628:	b7 01       	movw	r22, r14
    162a:	80 e3       	ldi	r24, 0x30	; 48
    162c:	90 e0       	ldi	r25, 0x00	; 0
    162e:	2c 87       	std	Y+12, r18	; 0x0c
    1630:	54 d0       	rcall	.+168    	; 0x16da <fputc>
    1632:	2c 85       	ldd	r18, Y+12	; 0x0c
    1634:	22 ff       	sbrs	r18, 2
    1636:	1c c0       	rjmp	.+56     	; 0x1670 <vfprintf+0x35c>
    1638:	21 ff       	sbrs	r18, 1
    163a:	03 c0       	rjmp	.+6      	; 0x1642 <vfprintf+0x32e>
    163c:	88 e5       	ldi	r24, 0x58	; 88
    163e:	90 e0       	ldi	r25, 0x00	; 0
    1640:	02 c0       	rjmp	.+4      	; 0x1646 <vfprintf+0x332>
    1642:	88 e7       	ldi	r24, 0x78	; 120
    1644:	90 e0       	ldi	r25, 0x00	; 0
    1646:	b7 01       	movw	r22, r14
    1648:	0c c0       	rjmp	.+24     	; 0x1662 <vfprintf+0x34e>
    164a:	82 2f       	mov	r24, r18
    164c:	86 78       	andi	r24, 0x86	; 134
    164e:	81 f0       	breq	.+32     	; 0x1670 <vfprintf+0x35c>
    1650:	21 fd       	sbrc	r18, 1
    1652:	02 c0       	rjmp	.+4      	; 0x1658 <vfprintf+0x344>
    1654:	80 e2       	ldi	r24, 0x20	; 32
    1656:	01 c0       	rjmp	.+2      	; 0x165a <vfprintf+0x346>
    1658:	8b e2       	ldi	r24, 0x2B	; 43
    165a:	27 fd       	sbrc	r18, 7
    165c:	8d e2       	ldi	r24, 0x2D	; 45
    165e:	b7 01       	movw	r22, r14
    1660:	90 e0       	ldi	r25, 0x00	; 0
    1662:	3b d0       	rcall	.+118    	; 0x16da <fputc>
    1664:	05 c0       	rjmp	.+10     	; 0x1670 <vfprintf+0x35c>
    1666:	b7 01       	movw	r22, r14
    1668:	80 e3       	ldi	r24, 0x30	; 48
    166a:	90 e0       	ldi	r25, 0x00	; 0
    166c:	36 d0       	rcall	.+108    	; 0x16da <fputc>
    166e:	5a 94       	dec	r5
    1670:	a5 14       	cp	r10, r5
    1672:	c8 f3       	brcs	.-14     	; 0x1666 <vfprintf+0x352>
    1674:	aa 94       	dec	r10
    1676:	f4 01       	movw	r30, r8
    1678:	ea 0d       	add	r30, r10
    167a:	f1 1d       	adc	r31, r1
    167c:	b7 01       	movw	r22, r14
    167e:	80 81       	ld	r24, Z
    1680:	90 e0       	ldi	r25, 0x00	; 0
    1682:	2b d0       	rcall	.+86     	; 0x16da <fputc>
    1684:	a1 10       	cpse	r10, r1
    1686:	f6 cf       	rjmp	.-20     	; 0x1674 <vfprintf+0x360>
    1688:	05 c0       	rjmp	.+10     	; 0x1694 <vfprintf+0x380>
    168a:	b7 01       	movw	r22, r14
    168c:	80 e2       	ldi	r24, 0x20	; 32
    168e:	90 e0       	ldi	r25, 0x00	; 0
    1690:	24 d0       	rcall	.+72     	; 0x16da <fputc>
    1692:	3a 94       	dec	r3
    1694:	31 10       	cpse	r3, r1
    1696:	f9 cf       	rjmp	.-14     	; 0x168a <vfprintf+0x376>
    1698:	50 ce       	rjmp	.-864    	; 0x133a <vfprintf+0x26>
    169a:	f7 01       	movw	r30, r14
    169c:	26 81       	ldd	r18, Z+6	; 0x06
    169e:	37 81       	ldd	r19, Z+7	; 0x07
    16a0:	02 c0       	rjmp	.+4      	; 0x16a6 <vfprintf+0x392>
    16a2:	2f ef       	ldi	r18, 0xFF	; 255
    16a4:	3f ef       	ldi	r19, 0xFF	; 255
    16a6:	c9 01       	movw	r24, r18
    16a8:	2c 96       	adiw	r28, 0x0c	; 12
    16aa:	e2 e1       	ldi	r30, 0x12	; 18
    16ac:	bc c0       	rjmp	.+376    	; 0x1826 <__epilogue_restores__>

000016ae <strnlen_P>:
    16ae:	fc 01       	movw	r30, r24
    16b0:	05 90       	lpm	r0, Z+
    16b2:	61 50       	subi	r22, 0x01	; 1
    16b4:	70 40       	sbci	r23, 0x00	; 0
    16b6:	01 10       	cpse	r0, r1
    16b8:	d8 f7       	brcc	.-10     	; 0x16b0 <strnlen_P+0x2>
    16ba:	80 95       	com	r24
    16bc:	90 95       	com	r25
    16be:	8e 0f       	add	r24, r30
    16c0:	9f 1f       	adc	r25, r31
    16c2:	08 95       	ret

000016c4 <strnlen>:
    16c4:	fc 01       	movw	r30, r24
    16c6:	61 50       	subi	r22, 0x01	; 1
    16c8:	70 40       	sbci	r23, 0x00	; 0
    16ca:	01 90       	ld	r0, Z+
    16cc:	01 10       	cpse	r0, r1
    16ce:	d8 f7       	brcc	.-10     	; 0x16c6 <strnlen+0x2>
    16d0:	80 95       	com	r24
    16d2:	90 95       	com	r25
    16d4:	8e 0f       	add	r24, r30
    16d6:	9f 1f       	adc	r25, r31
    16d8:	08 95       	ret

000016da <fputc>:
    16da:	0f 93       	push	r16
    16dc:	1f 93       	push	r17
    16de:	cf 93       	push	r28
    16e0:	df 93       	push	r29
    16e2:	8c 01       	movw	r16, r24
    16e4:	eb 01       	movw	r28, r22
    16e6:	8b 81       	ldd	r24, Y+3	; 0x03
    16e8:	81 fd       	sbrc	r24, 1
    16ea:	03 c0       	rjmp	.+6      	; 0x16f2 <fputc+0x18>
    16ec:	0f ef       	ldi	r16, 0xFF	; 255
    16ee:	1f ef       	ldi	r17, 0xFF	; 255
    16f0:	1a c0       	rjmp	.+52     	; 0x1726 <fputc+0x4c>
    16f2:	82 ff       	sbrs	r24, 2
    16f4:	0d c0       	rjmp	.+26     	; 0x1710 <fputc+0x36>
    16f6:	2e 81       	ldd	r18, Y+6	; 0x06
    16f8:	3f 81       	ldd	r19, Y+7	; 0x07
    16fa:	8c 81       	ldd	r24, Y+4	; 0x04
    16fc:	9d 81       	ldd	r25, Y+5	; 0x05
    16fe:	28 17       	cp	r18, r24
    1700:	39 07       	cpc	r19, r25
    1702:	64 f4       	brge	.+24     	; 0x171c <fputc+0x42>
    1704:	e8 81       	ld	r30, Y
    1706:	f9 81       	ldd	r31, Y+1	; 0x01
    1708:	01 93       	st	Z+, r16
    170a:	f9 83       	std	Y+1, r31	; 0x01
    170c:	e8 83       	st	Y, r30
    170e:	06 c0       	rjmp	.+12     	; 0x171c <fputc+0x42>
    1710:	e8 85       	ldd	r30, Y+8	; 0x08
    1712:	f9 85       	ldd	r31, Y+9	; 0x09
    1714:	80 2f       	mov	r24, r16
    1716:	09 95       	icall
    1718:	89 2b       	or	r24, r25
    171a:	41 f7       	brne	.-48     	; 0x16ec <fputc+0x12>
    171c:	8e 81       	ldd	r24, Y+6	; 0x06
    171e:	9f 81       	ldd	r25, Y+7	; 0x07
    1720:	01 96       	adiw	r24, 0x01	; 1
    1722:	9f 83       	std	Y+7, r25	; 0x07
    1724:	8e 83       	std	Y+6, r24	; 0x06
    1726:	c8 01       	movw	r24, r16
    1728:	df 91       	pop	r29
    172a:	cf 91       	pop	r28
    172c:	1f 91       	pop	r17
    172e:	0f 91       	pop	r16
    1730:	08 95       	ret

00001732 <__ultoa_invert>:
    1732:	fa 01       	movw	r30, r20
    1734:	aa 27       	eor	r26, r26
    1736:	28 30       	cpi	r18, 0x08	; 8
    1738:	51 f1       	breq	.+84     	; 0x178e <__ultoa_invert+0x5c>
    173a:	20 31       	cpi	r18, 0x10	; 16
    173c:	81 f1       	breq	.+96     	; 0x179e <__ultoa_invert+0x6c>
    173e:	e8 94       	clt
    1740:	6f 93       	push	r22
    1742:	6e 7f       	andi	r22, 0xFE	; 254
    1744:	6e 5f       	subi	r22, 0xFE	; 254
    1746:	7f 4f       	sbci	r23, 0xFF	; 255
    1748:	8f 4f       	sbci	r24, 0xFF	; 255
    174a:	9f 4f       	sbci	r25, 0xFF	; 255
    174c:	af 4f       	sbci	r26, 0xFF	; 255
    174e:	b1 e0       	ldi	r27, 0x01	; 1
    1750:	3e d0       	rcall	.+124    	; 0x17ce <__ultoa_invert+0x9c>
    1752:	b4 e0       	ldi	r27, 0x04	; 4
    1754:	3c d0       	rcall	.+120    	; 0x17ce <__ultoa_invert+0x9c>
    1756:	67 0f       	add	r22, r23
    1758:	78 1f       	adc	r23, r24
    175a:	89 1f       	adc	r24, r25
    175c:	9a 1f       	adc	r25, r26
    175e:	a1 1d       	adc	r26, r1
    1760:	68 0f       	add	r22, r24
    1762:	79 1f       	adc	r23, r25
    1764:	8a 1f       	adc	r24, r26
    1766:	91 1d       	adc	r25, r1
    1768:	a1 1d       	adc	r26, r1
    176a:	6a 0f       	add	r22, r26
    176c:	71 1d       	adc	r23, r1
    176e:	81 1d       	adc	r24, r1
    1770:	91 1d       	adc	r25, r1
    1772:	a1 1d       	adc	r26, r1
    1774:	20 d0       	rcall	.+64     	; 0x17b6 <__ultoa_invert+0x84>
    1776:	09 f4       	brne	.+2      	; 0x177a <__ultoa_invert+0x48>
    1778:	68 94       	set
    177a:	3f 91       	pop	r19
    177c:	2a e0       	ldi	r18, 0x0A	; 10
    177e:	26 9f       	mul	r18, r22
    1780:	11 24       	eor	r1, r1
    1782:	30 19       	sub	r19, r0
    1784:	30 5d       	subi	r19, 0xD0	; 208
    1786:	31 93       	st	Z+, r19
    1788:	de f6       	brtc	.-74     	; 0x1740 <__ultoa_invert+0xe>
    178a:	cf 01       	movw	r24, r30
    178c:	08 95       	ret
    178e:	46 2f       	mov	r20, r22
    1790:	47 70       	andi	r20, 0x07	; 7
    1792:	40 5d       	subi	r20, 0xD0	; 208
    1794:	41 93       	st	Z+, r20
    1796:	b3 e0       	ldi	r27, 0x03	; 3
    1798:	0f d0       	rcall	.+30     	; 0x17b8 <__ultoa_invert+0x86>
    179a:	c9 f7       	brne	.-14     	; 0x178e <__ultoa_invert+0x5c>
    179c:	f6 cf       	rjmp	.-20     	; 0x178a <__ultoa_invert+0x58>
    179e:	46 2f       	mov	r20, r22
    17a0:	4f 70       	andi	r20, 0x0F	; 15
    17a2:	40 5d       	subi	r20, 0xD0	; 208
    17a4:	4a 33       	cpi	r20, 0x3A	; 58
    17a6:	18 f0       	brcs	.+6      	; 0x17ae <__ultoa_invert+0x7c>
    17a8:	49 5d       	subi	r20, 0xD9	; 217
    17aa:	31 fd       	sbrc	r19, 1
    17ac:	40 52       	subi	r20, 0x20	; 32
    17ae:	41 93       	st	Z+, r20
    17b0:	02 d0       	rcall	.+4      	; 0x17b6 <__ultoa_invert+0x84>
    17b2:	a9 f7       	brne	.-22     	; 0x179e <__ultoa_invert+0x6c>
    17b4:	ea cf       	rjmp	.-44     	; 0x178a <__ultoa_invert+0x58>
    17b6:	b4 e0       	ldi	r27, 0x04	; 4
    17b8:	a6 95       	lsr	r26
    17ba:	97 95       	ror	r25
    17bc:	87 95       	ror	r24
    17be:	77 95       	ror	r23
    17c0:	67 95       	ror	r22
    17c2:	ba 95       	dec	r27
    17c4:	c9 f7       	brne	.-14     	; 0x17b8 <__ultoa_invert+0x86>
    17c6:	00 97       	sbiw	r24, 0x00	; 0
    17c8:	61 05       	cpc	r22, r1
    17ca:	71 05       	cpc	r23, r1
    17cc:	08 95       	ret
    17ce:	9b 01       	movw	r18, r22
    17d0:	ac 01       	movw	r20, r24
    17d2:	0a 2e       	mov	r0, r26
    17d4:	06 94       	lsr	r0
    17d6:	57 95       	ror	r21
    17d8:	47 95       	ror	r20
    17da:	37 95       	ror	r19
    17dc:	27 95       	ror	r18
    17de:	ba 95       	dec	r27
    17e0:	c9 f7       	brne	.-14     	; 0x17d4 <__ultoa_invert+0xa2>
    17e2:	62 0f       	add	r22, r18
    17e4:	73 1f       	adc	r23, r19
    17e6:	84 1f       	adc	r24, r20
    17e8:	95 1f       	adc	r25, r21
    17ea:	a0 1d       	adc	r26, r0
    17ec:	08 95       	ret

000017ee <__prologue_saves__>:
    17ee:	2f 92       	push	r2
    17f0:	3f 92       	push	r3
    17f2:	4f 92       	push	r4
    17f4:	5f 92       	push	r5
    17f6:	6f 92       	push	r6
    17f8:	7f 92       	push	r7
    17fa:	8f 92       	push	r8
    17fc:	9f 92       	push	r9
    17fe:	af 92       	push	r10
    1800:	bf 92       	push	r11
    1802:	cf 92       	push	r12
    1804:	df 92       	push	r13
    1806:	ef 92       	push	r14
    1808:	ff 92       	push	r15
    180a:	0f 93       	push	r16
    180c:	1f 93       	push	r17
    180e:	cf 93       	push	r28
    1810:	df 93       	push	r29
    1812:	cd b7       	in	r28, 0x3d	; 61
    1814:	de b7       	in	r29, 0x3e	; 62
    1816:	ca 1b       	sub	r28, r26
    1818:	db 0b       	sbc	r29, r27
    181a:	0f b6       	in	r0, 0x3f	; 63
    181c:	f8 94       	cli
    181e:	de bf       	out	0x3e, r29	; 62
    1820:	0f be       	out	0x3f, r0	; 63
    1822:	cd bf       	out	0x3d, r28	; 61
    1824:	09 94       	ijmp

00001826 <__epilogue_restores__>:
    1826:	2a 88       	ldd	r2, Y+18	; 0x12
    1828:	39 88       	ldd	r3, Y+17	; 0x11
    182a:	48 88       	ldd	r4, Y+16	; 0x10
    182c:	5f 84       	ldd	r5, Y+15	; 0x0f
    182e:	6e 84       	ldd	r6, Y+14	; 0x0e
    1830:	7d 84       	ldd	r7, Y+13	; 0x0d
    1832:	8c 84       	ldd	r8, Y+12	; 0x0c
    1834:	9b 84       	ldd	r9, Y+11	; 0x0b
    1836:	aa 84       	ldd	r10, Y+10	; 0x0a
    1838:	b9 84       	ldd	r11, Y+9	; 0x09
    183a:	c8 84       	ldd	r12, Y+8	; 0x08
    183c:	df 80       	ldd	r13, Y+7	; 0x07
    183e:	ee 80       	ldd	r14, Y+6	; 0x06
    1840:	fd 80       	ldd	r15, Y+5	; 0x05
    1842:	0c 81       	ldd	r16, Y+4	; 0x04
    1844:	1b 81       	ldd	r17, Y+3	; 0x03
    1846:	aa 81       	ldd	r26, Y+2	; 0x02
    1848:	b9 81       	ldd	r27, Y+1	; 0x01
    184a:	ce 0f       	add	r28, r30
    184c:	d1 1d       	adc	r29, r1
    184e:	0f b6       	in	r0, 0x3f	; 63
    1850:	f8 94       	cli
    1852:	de bf       	out	0x3e, r29	; 62
    1854:	0f be       	out	0x3f, r0	; 63
    1856:	cd bf       	out	0x3d, r28	; 61
    1858:	ed 01       	movw	r28, r26
    185a:	08 95       	ret

0000185c <_exit>:
    185c:	f8 94       	cli

0000185e <__stop_program>:
    185e:	ff cf       	rjmp	.-2      	; 0x185e <__stop_program>
